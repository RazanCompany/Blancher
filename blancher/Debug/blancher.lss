
blancher.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800200  00003f98  0000402c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003f98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000ae2  008002a2  008002a2  000040ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000040ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004100  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000008f0  00000000  00000000  00004140  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000b99c  00000000  00000000  00004a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002a5f  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000836e  00000000  00000000  00012e2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001cac  00000000  00000000  0001b19c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00018427  00000000  00000000  0001ce48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000b78f  00000000  00000000  0003526f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a00  00000000  00000000  000409fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000064b7  00000000  00000000  000413fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9a c0       	rjmp	.+308    	; 0x136 <__ctors_end>
       2:	00 00       	nop
       4:	b9 c0       	rjmp	.+370    	; 0x178 <__bad_interrupt>
       6:	00 00       	nop
       8:	b7 c0       	rjmp	.+366    	; 0x178 <__bad_interrupt>
       a:	00 00       	nop
       c:	b5 c0       	rjmp	.+362    	; 0x178 <__bad_interrupt>
       e:	00 00       	nop
      10:	b3 c0       	rjmp	.+358    	; 0x178 <__bad_interrupt>
      12:	00 00       	nop
      14:	b1 c0       	rjmp	.+354    	; 0x178 <__bad_interrupt>
      16:	00 00       	nop
      18:	af c0       	rjmp	.+350    	; 0x178 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ad c0       	rjmp	.+346    	; 0x178 <__bad_interrupt>
      1e:	00 00       	nop
      20:	ab c0       	rjmp	.+342    	; 0x178 <__bad_interrupt>
      22:	00 00       	nop
      24:	a9 c0       	rjmp	.+338    	; 0x178 <__bad_interrupt>
      26:	00 00       	nop
      28:	a7 c0       	rjmp	.+334    	; 0x178 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	a5 c0       	rjmp	.+330    	; 0x178 <__bad_interrupt>
      2e:	00 00       	nop
      30:	0c 94 0f 12 	jmp	0x241e	; 0x241e <__vector_12>
      34:	0c 94 73 1f 	jmp	0x3ee6	; 0x3ee6 <__vector_13>
      38:	9f c0       	rjmp	.+318    	; 0x178 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	9d c0       	rjmp	.+314    	; 0x178 <__bad_interrupt>
      3e:	00 00       	nop
      40:	9b c0       	rjmp	.+310    	; 0x178 <__bad_interrupt>
      42:	00 00       	nop
      44:	9a c0       	rjmp	.+308    	; 0x17a <__vector_17>
      46:	00 00       	nop
      48:	97 c0       	rjmp	.+302    	; 0x178 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	95 c0       	rjmp	.+298    	; 0x178 <__bad_interrupt>
      4e:	00 00       	nop
      50:	93 c0       	rjmp	.+294    	; 0x178 <__bad_interrupt>
      52:	00 00       	nop
      54:	91 c0       	rjmp	.+290    	; 0x178 <__bad_interrupt>
      56:	00 00       	nop
      58:	8f c0       	rjmp	.+286    	; 0x178 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	8d c0       	rjmp	.+282    	; 0x178 <__bad_interrupt>
      5e:	00 00       	nop
      60:	8b c0       	rjmp	.+278    	; 0x178 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 b7 0b 	jmp	0x176e	; 0x176e <__vector_25>
      68:	0c 94 f0 0b 	jmp	0x17e0	; 0x17e0 <__vector_26>
      6c:	85 c0       	rjmp	.+266    	; 0x178 <__bad_interrupt>
      6e:	00 00       	nop
      70:	83 c0       	rjmp	.+262    	; 0x178 <__bad_interrupt>
      72:	00 00       	nop
      74:	0c 94 53 0b 	jmp	0x16a6	; 0x16a6 <__vector_29>
      78:	7f c0       	rjmp	.+254    	; 0x178 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	7d c0       	rjmp	.+250    	; 0x178 <__bad_interrupt>
      7e:	00 00       	nop
      80:	e2 c0       	rjmp	.+452    	; 0x246 <__vector_32>
      82:	00 00       	nop
      84:	79 c0       	rjmp	.+242    	; 0x178 <__bad_interrupt>
      86:	00 00       	nop
      88:	77 c0       	rjmp	.+238    	; 0x178 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	75 c0       	rjmp	.+234    	; 0x178 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__vector_36>
      94:	0c 94 f6 0c 	jmp	0x19ec	; 0x19ec <__vector_37>
      98:	6f c0       	rjmp	.+222    	; 0x178 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	6d c0       	rjmp	.+218    	; 0x178 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	6b c0       	rjmp	.+214    	; 0x178 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	69 c0       	rjmp	.+210    	; 0x178 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	34 c1       	rjmp	.+616    	; 0x312 <__vector_42>
      aa:	00 00       	nop
      ac:	65 c0       	rjmp	.+202    	; 0x178 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	63 c0       	rjmp	.+198    	; 0x178 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	61 c0       	rjmp	.+194    	; 0x178 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	5f c0       	rjmp	.+190    	; 0x178 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	90 c1       	rjmp	.+800    	; 0x3de <__vector_47>
      be:	00 00       	nop
      c0:	5b c0       	rjmp	.+182    	; 0x178 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	59 c0       	rjmp	.+178    	; 0x178 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	57 c0       	rjmp	.+174    	; 0x178 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 cc 0d 	jmp	0x1b98	; 0x1b98 <__vector_51>
      d0:	0c 94 05 0e 	jmp	0x1c0a	; 0x1c0a <__vector_52>
      d4:	51 c0       	rjmp	.+162    	; 0x178 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 d8 0e 	jmp	0x1db0	; 0x1db0 <__vector_54>
      dc:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__vector_55>
      e0:	4b c0       	rjmp	.+150    	; 0x178 <__bad_interrupt>
	...

000000e4 <prvIdleTask>:
      e4:	c4 e8       	ldi	r28, 0x84	; 132
      e6:	da e0       	ldi	r29, 0x0A	; 10
      e8:	0a e9       	ldi	r16, 0x9A	; 154
      ea:	1a e0       	ldi	r17, 0x0A	; 10
      ec:	80 91 83 0a 	lds	r24, 0x0A83	; 0x800a83 <uxDeletedTasksWaitingCleanUp>
      f0:	88 23       	and	r24, r24
      f2:	d1 f0       	breq	.+52     	; 0x128 <prvIdleTask+0x44>
      f4:	0f b6       	in	r0, 0x3f	; 63
      f6:	f8 94       	cli
      f8:	0f 92       	push	r0
      fa:	ed 81       	ldd	r30, Y+5	; 0x05
      fc:	fe 81       	ldd	r31, Y+6	; 0x06
      fe:	86 81       	ldd	r24, Z+6	; 0x06
     100:	97 81       	ldd	r25, Z+7	; 0x07
     102:	02 96       	adiw	r24, 0x02	; 2
     104:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
     108:	80 91 79 0a 	lds	r24, 0x0A79	; 0x800a79 <uxCurrentNumberOfTasks>
     10c:	81 50       	subi	r24, 0x01	; 1
     10e:	80 93 79 0a 	sts	0x0A79, r24	; 0x800a79 <uxCurrentNumberOfTasks>
     112:	80 91 83 0a 	lds	r24, 0x0A83	; 0x800a83 <uxDeletedTasksWaitingCleanUp>
     116:	81 50       	subi	r24, 0x01	; 1
     118:	80 93 83 0a 	sts	0x0A83, r24	; 0x800a83 <uxDeletedTasksWaitingCleanUp>
     11c:	0f 90       	pop	r0
     11e:	0f be       	out	0x3f, r0	; 63
     120:	80 91 83 0a 	lds	r24, 0x0A83	; 0x800a83 <uxDeletedTasksWaitingCleanUp>
     124:	81 11       	cpse	r24, r1
     126:	e6 cf       	rjmp	.-52     	; 0xf4 <prvIdleTask+0x10>
     128:	f8 01       	movw	r30, r16
     12a:	80 81       	ld	r24, Z
     12c:	82 30       	cpi	r24, 0x02	; 2
     12e:	f0 f2       	brcs	.-68     	; 0xec <prvIdleTask+0x8>
     130:	0e 94 4a 11 	call	0x2294	; 0x2294 <vPortYield>
     134:	db cf       	rjmp	.-74     	; 0xec <prvIdleTask+0x8>

00000136 <__ctors_end>:
     136:	11 24       	eor	r1, r1
     138:	1f be       	out	0x3f, r1	; 63
     13a:	cf ef       	ldi	r28, 0xFF	; 255
     13c:	d1 e2       	ldi	r29, 0x21	; 33
     13e:	de bf       	out	0x3e, r29	; 62
     140:	cd bf       	out	0x3d, r28	; 61
     142:	00 e0       	ldi	r16, 0x00	; 0
     144:	0c bf       	out	0x3c, r16	; 60

00000146 <__do_copy_data>:
     146:	12 e0       	ldi	r17, 0x02	; 2
     148:	a0 e0       	ldi	r26, 0x00	; 0
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	e8 e9       	ldi	r30, 0x98	; 152
     14e:	ff e3       	ldi	r31, 0x3F	; 63
     150:	00 e0       	ldi	r16, 0x00	; 0
     152:	0b bf       	out	0x3b, r16	; 59
     154:	02 c0       	rjmp	.+4      	; 0x15a <__do_copy_data+0x14>
     156:	07 90       	elpm	r0, Z+
     158:	0d 92       	st	X+, r0
     15a:	a2 3a       	cpi	r26, 0xA2	; 162
     15c:	b1 07       	cpc	r27, r17
     15e:	d9 f7       	brne	.-10     	; 0x156 <__do_copy_data+0x10>

00000160 <__do_clear_bss>:
     160:	2d e0       	ldi	r18, 0x0D	; 13
     162:	a2 ea       	ldi	r26, 0xA2	; 162
     164:	b2 e0       	ldi	r27, 0x02	; 2
     166:	01 c0       	rjmp	.+2      	; 0x16a <.do_clear_bss_start>

00000168 <.do_clear_bss_loop>:
     168:	1d 92       	st	X+, r1

0000016a <.do_clear_bss_start>:
     16a:	a4 38       	cpi	r26, 0x84	; 132
     16c:	b2 07       	cpc	r27, r18
     16e:	e1 f7       	brne	.-8      	; 0x168 <.do_clear_bss_loop>
     170:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <main>
     174:	0c 94 ca 1f 	jmp	0x3f94	; 0x3f94 <_exit>

00000178 <__bad_interrupt>:
     178:	43 cf       	rjmp	.-378    	; 0x0 <__vectors>

0000017a <__vector_17>:
    return 1;// Setup done ok
}//timer_init

// intruptted service routine when we have rech the number of  Ticks On Encoder
ISR(TIMER1_COMPA_vect)
{
     17a:	1f 92       	push	r1
     17c:	0f 92       	push	r0
     17e:	0f b6       	in	r0, 0x3f	; 63
     180:	0f 92       	push	r0
     182:	11 24       	eor	r1, r1
     184:	0b b6       	in	r0, 0x3b	; 59
     186:	0f 92       	push	r0
     188:	cf 92       	push	r12
     18a:	df 92       	push	r13
     18c:	ef 92       	push	r14
     18e:	ff 92       	push	r15
     190:	0f 93       	push	r16
     192:	1f 93       	push	r17
     194:	2f 93       	push	r18
     196:	3f 93       	push	r19
     198:	4f 93       	push	r20
     19a:	5f 93       	push	r21
     19c:	6f 93       	push	r22
     19e:	7f 93       	push	r23
     1a0:	8f 93       	push	r24
     1a2:	9f 93       	push	r25
     1a4:	af 93       	push	r26
     1a6:	bf 93       	push	r27
     1a8:	ef 93       	push	r30
     1aa:	ff 93       	push	r31
	// get the time now
	g_Timer1_new_time = Get_millis();
     1ac:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     1b0:	8b 01       	movw	r16, r22
     1b2:	9c 01       	movw	r18, r24
     1b4:	60 93 53 0b 	sts	0x0B53, r22	; 0x800b53 <g_Timer1_new_time>
     1b8:	70 93 54 0b 	sts	0x0B54, r23	; 0x800b54 <g_Timer1_new_time+0x1>
     1bc:	80 93 55 0b 	sts	0x0B55, r24	; 0x800b55 <g_Timer1_new_time+0x2>
     1c0:	90 93 56 0b 	sts	0x0B56, r25	; 0x800b56 <g_Timer1_new_time+0x3>
	// calculate the diff between now and last interrupt
	g_diff_time = g_Timer1_new_time - g_Timer1_old_time;
     1c4:	40 91 33 0b 	lds	r20, 0x0B33	; 0x800b33 <g_Timer1_old_time>
     1c8:	50 91 34 0b 	lds	r21, 0x0B34	; 0x800b34 <g_Timer1_old_time+0x1>
     1cc:	60 91 35 0b 	lds	r22, 0x0B35	; 0x800b35 <g_Timer1_old_time+0x2>
     1d0:	70 91 36 0b 	lds	r23, 0x0B36	; 0x800b36 <g_Timer1_old_time+0x3>
     1d4:	68 01       	movw	r12, r16
     1d6:	79 01       	movw	r14, r18
     1d8:	c4 1a       	sub	r12, r20
     1da:	d5 0a       	sbc	r13, r21
     1dc:	e6 0a       	sbc	r14, r22
     1de:	f7 0a       	sbc	r15, r23
     1e0:	c7 01       	movw	r24, r14
     1e2:	b6 01       	movw	r22, r12
     1e4:	c0 92 3b 0b 	sts	0x0B3B, r12	; 0x800b3b <g_diff_time>
     1e8:	d0 92 3c 0b 	sts	0x0B3C, r13	; 0x800b3c <g_diff_time+0x1>
     1ec:	e0 92 3d 0b 	sts	0x0B3D, r14	; 0x800b3d <g_diff_time+0x2>
     1f0:	f0 92 3e 0b 	sts	0x0B3E, r15	; 0x800b3e <g_diff_time+0x3>
	// save the to the old time to next interrupt
	g_Timer1_old_time = g_Timer1_new_time;
     1f4:	00 93 33 0b 	sts	0x0B33, r16	; 0x800b33 <g_Timer1_old_time>
     1f8:	10 93 34 0b 	sts	0x0B34, r17	; 0x800b34 <g_Timer1_old_time+0x1>
     1fc:	20 93 35 0b 	sts	0x0B35, r18	; 0x800b35 <g_Timer1_old_time+0x2>
     200:	30 93 36 0b 	sts	0x0B36, r19	; 0x800b36 <g_Timer1_old_time+0x3>
	//call back function on upper layer to get time
	g_timer1_config->isr_call_back(g_diff_time);
     204:	e0 91 4d 0b 	lds	r30, 0x0B4D	; 0x800b4d <g_timer1_config>
     208:	f0 91 4e 0b 	lds	r31, 0x0B4E	; 0x800b4e <g_timer1_config+0x1>
     20c:	02 80       	ldd	r0, Z+2	; 0x02
     20e:	f3 81       	ldd	r31, Z+3	; 0x03
     210:	e0 2d       	mov	r30, r0
     212:	19 95       	eicall
}
     214:	ff 91       	pop	r31
     216:	ef 91       	pop	r30
     218:	bf 91       	pop	r27
     21a:	af 91       	pop	r26
     21c:	9f 91       	pop	r25
     21e:	8f 91       	pop	r24
     220:	7f 91       	pop	r23
     222:	6f 91       	pop	r22
     224:	5f 91       	pop	r21
     226:	4f 91       	pop	r20
     228:	3f 91       	pop	r19
     22a:	2f 91       	pop	r18
     22c:	1f 91       	pop	r17
     22e:	0f 91       	pop	r16
     230:	ff 90       	pop	r15
     232:	ef 90       	pop	r14
     234:	df 90       	pop	r13
     236:	cf 90       	pop	r12
     238:	0f 90       	pop	r0
     23a:	0b be       	out	0x3b, r0	; 59
     23c:	0f 90       	pop	r0
     23e:	0f be       	out	0x3f, r0	; 63
     240:	0f 90       	pop	r0
     242:	1f 90       	pop	r1
     244:	18 95       	reti

00000246 <__vector_32>:
// intruptted service routine when we have rech the number of  Ticks On Encoder
ISR(TIMER3_COMPA_vect)
{
     246:	1f 92       	push	r1
     248:	0f 92       	push	r0
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	0f 92       	push	r0
     24e:	11 24       	eor	r1, r1
     250:	0b b6       	in	r0, 0x3b	; 59
     252:	0f 92       	push	r0
     254:	cf 92       	push	r12
     256:	df 92       	push	r13
     258:	ef 92       	push	r14
     25a:	ff 92       	push	r15
     25c:	0f 93       	push	r16
     25e:	1f 93       	push	r17
     260:	2f 93       	push	r18
     262:	3f 93       	push	r19
     264:	4f 93       	push	r20
     266:	5f 93       	push	r21
     268:	6f 93       	push	r22
     26a:	7f 93       	push	r23
     26c:	8f 93       	push	r24
     26e:	9f 93       	push	r25
     270:	af 93       	push	r26
     272:	bf 93       	push	r27
     274:	ef 93       	push	r30
     276:	ff 93       	push	r31
	// get the time now
	g_Timer3_new_time = Get_millis();
     278:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     27c:	8b 01       	movw	r16, r22
     27e:	9c 01       	movw	r18, r24
     280:	60 93 49 0b 	sts	0x0B49, r22	; 0x800b49 <g_Timer3_new_time>
     284:	70 93 4a 0b 	sts	0x0B4A, r23	; 0x800b4a <g_Timer3_new_time+0x1>
     288:	80 93 4b 0b 	sts	0x0B4B, r24	; 0x800b4b <g_Timer3_new_time+0x2>
     28c:	90 93 4c 0b 	sts	0x0B4C, r25	; 0x800b4c <g_Timer3_new_time+0x3>
	// calculate the diff between now and last interrupt
	g_diff_time = g_Timer3_new_time - g_Timer3_old_time;
     290:	40 91 2d 0b 	lds	r20, 0x0B2D	; 0x800b2d <g_Timer3_old_time>
     294:	50 91 2e 0b 	lds	r21, 0x0B2E	; 0x800b2e <g_Timer3_old_time+0x1>
     298:	60 91 2f 0b 	lds	r22, 0x0B2F	; 0x800b2f <g_Timer3_old_time+0x2>
     29c:	70 91 30 0b 	lds	r23, 0x0B30	; 0x800b30 <g_Timer3_old_time+0x3>
     2a0:	68 01       	movw	r12, r16
     2a2:	79 01       	movw	r14, r18
     2a4:	c4 1a       	sub	r12, r20
     2a6:	d5 0a       	sbc	r13, r21
     2a8:	e6 0a       	sbc	r14, r22
     2aa:	f7 0a       	sbc	r15, r23
     2ac:	c7 01       	movw	r24, r14
     2ae:	b6 01       	movw	r22, r12
     2b0:	c0 92 3b 0b 	sts	0x0B3B, r12	; 0x800b3b <g_diff_time>
     2b4:	d0 92 3c 0b 	sts	0x0B3C, r13	; 0x800b3c <g_diff_time+0x1>
     2b8:	e0 92 3d 0b 	sts	0x0B3D, r14	; 0x800b3d <g_diff_time+0x2>
     2bc:	f0 92 3e 0b 	sts	0x0B3E, r15	; 0x800b3e <g_diff_time+0x3>
	// save the to the old time to next interrupt
	g_Timer3_old_time = g_Timer3_new_time;
     2c0:	00 93 2d 0b 	sts	0x0B2D, r16	; 0x800b2d <g_Timer3_old_time>
     2c4:	10 93 2e 0b 	sts	0x0B2E, r17	; 0x800b2e <g_Timer3_old_time+0x1>
     2c8:	20 93 2f 0b 	sts	0x0B2F, r18	; 0x800b2f <g_Timer3_old_time+0x2>
     2cc:	30 93 30 0b 	sts	0x0B30, r19	; 0x800b30 <g_Timer3_old_time+0x3>
	//call back function on upper layer to get time
	g_timer3_config->isr_call_back(g_diff_time);
     2d0:	e0 91 31 0b 	lds	r30, 0x0B31	; 0x800b31 <g_timer3_config>
     2d4:	f0 91 32 0b 	lds	r31, 0x0B32	; 0x800b32 <g_timer3_config+0x1>
     2d8:	02 80       	ldd	r0, Z+2	; 0x02
     2da:	f3 81       	ldd	r31, Z+3	; 0x03
     2dc:	e0 2d       	mov	r30, r0
     2de:	19 95       	eicall
}
     2e0:	ff 91       	pop	r31
     2e2:	ef 91       	pop	r30
     2e4:	bf 91       	pop	r27
     2e6:	af 91       	pop	r26
     2e8:	9f 91       	pop	r25
     2ea:	8f 91       	pop	r24
     2ec:	7f 91       	pop	r23
     2ee:	6f 91       	pop	r22
     2f0:	5f 91       	pop	r21
     2f2:	4f 91       	pop	r20
     2f4:	3f 91       	pop	r19
     2f6:	2f 91       	pop	r18
     2f8:	1f 91       	pop	r17
     2fa:	0f 91       	pop	r16
     2fc:	ff 90       	pop	r15
     2fe:	ef 90       	pop	r14
     300:	df 90       	pop	r13
     302:	cf 90       	pop	r12
     304:	0f 90       	pop	r0
     306:	0b be       	out	0x3b, r0	; 59
     308:	0f 90       	pop	r0
     30a:	0f be       	out	0x3f, r0	; 63
     30c:	0f 90       	pop	r0
     30e:	1f 90       	pop	r1
     310:	18 95       	reti

00000312 <__vector_42>:
// intruptted service routine when we have rech the number of  Ticks On Encoder
ISR(TIMER4_COMPA_vect)
{
     312:	1f 92       	push	r1
     314:	0f 92       	push	r0
     316:	0f b6       	in	r0, 0x3f	; 63
     318:	0f 92       	push	r0
     31a:	11 24       	eor	r1, r1
     31c:	0b b6       	in	r0, 0x3b	; 59
     31e:	0f 92       	push	r0
     320:	cf 92       	push	r12
     322:	df 92       	push	r13
     324:	ef 92       	push	r14
     326:	ff 92       	push	r15
     328:	0f 93       	push	r16
     32a:	1f 93       	push	r17
     32c:	2f 93       	push	r18
     32e:	3f 93       	push	r19
     330:	4f 93       	push	r20
     332:	5f 93       	push	r21
     334:	6f 93       	push	r22
     336:	7f 93       	push	r23
     338:	8f 93       	push	r24
     33a:	9f 93       	push	r25
     33c:	af 93       	push	r26
     33e:	bf 93       	push	r27
     340:	ef 93       	push	r30
     342:	ff 93       	push	r31
	// get the time now
	g_Timer4_new_time = Get_millis();
     344:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     348:	8b 01       	movw	r16, r22
     34a:	9c 01       	movw	r18, r24
     34c:	60 93 3f 0b 	sts	0x0B3F, r22	; 0x800b3f <g_Timer4_new_time>
     350:	70 93 40 0b 	sts	0x0B40, r23	; 0x800b40 <g_Timer4_new_time+0x1>
     354:	80 93 41 0b 	sts	0x0B41, r24	; 0x800b41 <g_Timer4_new_time+0x2>
     358:	90 93 42 0b 	sts	0x0B42, r25	; 0x800b42 <g_Timer4_new_time+0x3>
	// calculate the diff between now and last interrupt
	g_diff_time = g_Timer4_new_time - g_Timer4_old_time;
     35c:	40 91 4f 0b 	lds	r20, 0x0B4F	; 0x800b4f <g_Timer4_old_time>
     360:	50 91 50 0b 	lds	r21, 0x0B50	; 0x800b50 <g_Timer4_old_time+0x1>
     364:	60 91 51 0b 	lds	r22, 0x0B51	; 0x800b51 <g_Timer4_old_time+0x2>
     368:	70 91 52 0b 	lds	r23, 0x0B52	; 0x800b52 <g_Timer4_old_time+0x3>
     36c:	68 01       	movw	r12, r16
     36e:	79 01       	movw	r14, r18
     370:	c4 1a       	sub	r12, r20
     372:	d5 0a       	sbc	r13, r21
     374:	e6 0a       	sbc	r14, r22
     376:	f7 0a       	sbc	r15, r23
     378:	c7 01       	movw	r24, r14
     37a:	b6 01       	movw	r22, r12
     37c:	c0 92 3b 0b 	sts	0x0B3B, r12	; 0x800b3b <g_diff_time>
     380:	d0 92 3c 0b 	sts	0x0B3C, r13	; 0x800b3c <g_diff_time+0x1>
     384:	e0 92 3d 0b 	sts	0x0B3D, r14	; 0x800b3d <g_diff_time+0x2>
     388:	f0 92 3e 0b 	sts	0x0B3E, r15	; 0x800b3e <g_diff_time+0x3>
	// save the to the old time to next interrupt
	g_Timer4_old_time = g_Timer4_new_time;
     38c:	00 93 4f 0b 	sts	0x0B4F, r16	; 0x800b4f <g_Timer4_old_time>
     390:	10 93 50 0b 	sts	0x0B50, r17	; 0x800b50 <g_Timer4_old_time+0x1>
     394:	20 93 51 0b 	sts	0x0B51, r18	; 0x800b51 <g_Timer4_old_time+0x2>
     398:	30 93 52 0b 	sts	0x0B52, r19	; 0x800b52 <g_Timer4_old_time+0x3>
	//call back function on upper layer to get time
	g_timer4_config->isr_call_back(g_diff_time);
     39c:	e0 91 43 0b 	lds	r30, 0x0B43	; 0x800b43 <g_timer4_config>
     3a0:	f0 91 44 0b 	lds	r31, 0x0B44	; 0x800b44 <g_timer4_config+0x1>
     3a4:	02 80       	ldd	r0, Z+2	; 0x02
     3a6:	f3 81       	ldd	r31, Z+3	; 0x03
     3a8:	e0 2d       	mov	r30, r0
     3aa:	19 95       	eicall
}
     3ac:	ff 91       	pop	r31
     3ae:	ef 91       	pop	r30
     3b0:	bf 91       	pop	r27
     3b2:	af 91       	pop	r26
     3b4:	9f 91       	pop	r25
     3b6:	8f 91       	pop	r24
     3b8:	7f 91       	pop	r23
     3ba:	6f 91       	pop	r22
     3bc:	5f 91       	pop	r21
     3be:	4f 91       	pop	r20
     3c0:	3f 91       	pop	r19
     3c2:	2f 91       	pop	r18
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	ef 90       	pop	r14
     3cc:	df 90       	pop	r13
     3ce:	cf 90       	pop	r12
     3d0:	0f 90       	pop	r0
     3d2:	0b be       	out	0x3b, r0	; 59
     3d4:	0f 90       	pop	r0
     3d6:	0f be       	out	0x3f, r0	; 63
     3d8:	0f 90       	pop	r0
     3da:	1f 90       	pop	r1
     3dc:	18 95       	reti

000003de <__vector_47>:
// intruptted service routine when we have rech the number of  Ticks On Encoder
ISR(TIMER5_COMPA_vect)
{
     3de:	1f 92       	push	r1
     3e0:	0f 92       	push	r0
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	0f 92       	push	r0
     3e6:	11 24       	eor	r1, r1
     3e8:	0b b6       	in	r0, 0x3b	; 59
     3ea:	0f 92       	push	r0
     3ec:	2f 93       	push	r18
     3ee:	3f 93       	push	r19
     3f0:	4f 93       	push	r20
     3f2:	5f 93       	push	r21
     3f4:	6f 93       	push	r22
     3f6:	7f 93       	push	r23
     3f8:	8f 93       	push	r24
     3fa:	9f 93       	push	r25
     3fc:	af 93       	push	r26
     3fe:	bf 93       	push	r27
     400:	ef 93       	push	r30
     402:	ff 93       	push	r31
	// calculate the diff between now and last interrupt
	g_diff_time = g_Timer5_new_time - g_Timer5_old_time;
	// save the to the old time to next interrupt
	g_Timer5_old_time = g_Timer5_new_time;*/
	// clear the counter
	UART0_putc('a');
     404:	81 e6       	ldi	r24, 0x61	; 97
     406:	0e 94 7a 0c 	call	0x18f4	; 0x18f4 <UART0_putc>
	TIMER5_COUNT_L = 0;
     40a:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	//call back function on upper layer to get time
	g_timer5_config->isr_call_back(g_diff_time);
     40e:	60 91 3b 0b 	lds	r22, 0x0B3B	; 0x800b3b <g_diff_time>
     412:	70 91 3c 0b 	lds	r23, 0x0B3C	; 0x800b3c <g_diff_time+0x1>
     416:	80 91 3d 0b 	lds	r24, 0x0B3D	; 0x800b3d <g_diff_time+0x2>
     41a:	90 91 3e 0b 	lds	r25, 0x0B3E	; 0x800b3e <g_diff_time+0x3>
     41e:	e0 91 57 0b 	lds	r30, 0x0B57	; 0x800b57 <g_timer5_config>
     422:	f0 91 58 0b 	lds	r31, 0x0B58	; 0x800b58 <g_timer5_config+0x1>
     426:	02 80       	ldd	r0, Z+2	; 0x02
     428:	f3 81       	ldd	r31, Z+3	; 0x03
     42a:	e0 2d       	mov	r30, r0
     42c:	19 95       	eicall
	
}
     42e:	ff 91       	pop	r31
     430:	ef 91       	pop	r30
     432:	bf 91       	pop	r27
     434:	af 91       	pop	r26
     436:	9f 91       	pop	r25
     438:	8f 91       	pop	r24
     43a:	7f 91       	pop	r23
     43c:	6f 91       	pop	r22
     43e:	5f 91       	pop	r21
     440:	4f 91       	pop	r20
     442:	3f 91       	pop	r19
     444:	2f 91       	pop	r18
     446:	0f 90       	pop	r0
     448:	0b be       	out	0x3b, r0	; 59
     44a:	0f 90       	pop	r0
     44c:	0f be       	out	0x3f, r0	; 63
     44e:	0f 90       	pop	r0
     450:	1f 90       	pop	r1
     452:	18 95       	reti

00000454 <LCD_pre_transmission>:

//
void Lcd_Write(uint16_t address, uint16_t value){
	Modbus_Set_transmit_buffer(LCD,0, value);
    Modbus_Write_multiple_registers(LCD,address, 0x01);
}
     454:	61 e0       	ldi	r22, 0x01	; 1
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <Modbus_change_state>
     45c:	08 95       	ret

0000045e <LCD_post_transmission>:
     45e:	60 e0       	ldi	r22, 0x00	; 0
     460:	80 e0       	ldi	r24, 0x00	; 0
     462:	0c 94 9a 0b 	jmp	0x1734	; 0x1734 <Modbus_change_state>
     466:	08 95       	ret

00000468 <Lcd_init>:
     468:	e2 ea       	ldi	r30, 0xA2	; 162
     46a:	f2 e0       	ldi	r31, 0x02	; 2
     46c:	20 83       	st	Z, r18
     46e:	81 83       	std	Z+1, r24	; 0x01
     470:	42 83       	std	Z+2, r20	; 0x02
     472:	53 83       	std	Z+3, r21	; 0x03
     474:	64 83       	std	Z+4, r22	; 0x04
     476:	75 83       	std	Z+5, r23	; 0x05
     478:	8a e2       	ldi	r24, 0x2A	; 42
     47a:	92 e0       	ldi	r25, 0x02	; 2
     47c:	97 83       	std	Z+7, r25	; 0x07
     47e:	86 83       	std	Z+6, r24	; 0x06
     480:	8f e2       	ldi	r24, 0x2F	; 47
     482:	92 e0       	ldi	r25, 0x02	; 2
     484:	91 87       	std	Z+9, r25	; 0x09
     486:	80 87       	std	Z+8, r24	; 0x08
     488:	bf 01       	movw	r22, r30
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	d0 c6       	rjmp	.+3488   	; 0x122e <Modbus_init>
     48e:	08 95       	ret

00000490 <Lcd_Read_multiple_data>:
 *
 *                    LCD Multiple Data functions 
 * 
************************************************************************************************************/

uint16_t Lcd_Read_multiple_data(uint16_t address ,uint16_t *pData,uint8_t QTY){
     490:	ff 92       	push	r15
     492:	0f 93       	push	r16
     494:	1f 93       	push	r17
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	f6 2e       	mov	r15, r22
     49c:	c7 2f       	mov	r28, r23
     49e:	d4 2f       	mov	r29, r20
	int err = Modbus_Read_holding_registers(LCD,address,QTY);
     4a0:	50 e0       	ldi	r21, 0x00	; 0
     4a2:	bc 01       	movw	r22, r24
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	f5 d7       	rcall	.+4074   	; 0x1492 <Modbus_Read_holding_registers>
	if(err == 0){
     4a8:	81 11       	cpse	r24, r1
     4aa:	12 c0       	rjmp	.+36     	; 0x4d0 <Lcd_Read_multiple_data+0x40>
		for(uint8_t i=0; i<QTY;i++){
     4ac:	dd 23       	and	r29, r29
     4ae:	99 f0       	breq	.+38     	; 0x4d6 <Lcd_Read_multiple_data+0x46>
     4b0:	0f 2d       	mov	r16, r15
     4b2:	1c 2f       	mov	r17, r28
     4b4:	c0 e0       	ldi	r28, 0x00	; 0
			(*(pData+i)) = Modbus_Get_response_buffer(LCD,i);
     4b6:	6c 2f       	mov	r22, r28
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	a7 d7       	rcall	.+3918   	; 0x140a <Modbus_Get_response_buffer>
     4bc:	f8 01       	movw	r30, r16
     4be:	81 93       	st	Z+, r24
     4c0:	91 93       	st	Z+, r25
     4c2:	8f 01       	movw	r16, r30
************************************************************************************************************/

uint16_t Lcd_Read_multiple_data(uint16_t address ,uint16_t *pData,uint8_t QTY){
	int err = Modbus_Read_holding_registers(LCD,address,QTY);
	if(err == 0){
		for(uint8_t i=0; i<QTY;i++){
     4c4:	cf 5f       	subi	r28, 0xFF	; 255
     4c6:	dc 13       	cpse	r29, r28
     4c8:	f6 cf       	rjmp	.-20     	; 0x4b6 <Lcd_Read_multiple_data+0x26>
			(*(pData+i)) = Modbus_Get_response_buffer(LCD,i);
		}
		return LCD_OK;	
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	05 c0       	rjmp	.+10     	; 0x4da <Lcd_Read_multiple_data+0x4a>
	}
	else {
		return LCD_READ_ERROR;
     4d0:	89 e0       	ldi	r24, 0x09	; 9
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	02 c0       	rjmp	.+4      	; 0x4da <Lcd_Read_multiple_data+0x4a>
	int err = Modbus_Read_holding_registers(LCD,address,QTY);
	if(err == 0){
		for(uint8_t i=0; i<QTY;i++){
			(*(pData+i)) = Modbus_Get_response_buffer(LCD,i);
		}
		return LCD_OK;	
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	90 e0       	ldi	r25, 0x00	; 0
	}
	else {
		return LCD_READ_ERROR;
	}

}
     4da:	df 91       	pop	r29
     4dc:	cf 91       	pop	r28
     4de:	1f 91       	pop	r17
     4e0:	0f 91       	pop	r16
     4e2:	ff 90       	pop	r15
     4e4:	08 95       	ret

000004e6 <Lcd_Write_multiple_data>:

void Lcd_Write_multiple_data(uint16_t address ,uint16_t *pData,uint8_t QTY){
     4e6:	ef 92       	push	r14
     4e8:	ff 92       	push	r15
     4ea:	0f 93       	push	r16
     4ec:	1f 93       	push	r17
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	7c 01       	movw	r14, r24
     4f4:	d4 2f       	mov	r29, r20
	for(uint8_t i=0;i<QTY;i++){
     4f6:	44 23       	and	r20, r20
     4f8:	69 f0       	breq	.+26     	; 0x514 <Lcd_Write_multiple_data+0x2e>
     4fa:	06 2f       	mov	r16, r22
     4fc:	17 2f       	mov	r17, r23
     4fe:	c0 e0       	ldi	r28, 0x00	; 0
		Modbus_Set_transmit_buffer(LCD,i, (*(pData+i)));
     500:	f8 01       	movw	r30, r16
     502:	41 91       	ld	r20, Z+
     504:	51 91       	ld	r21, Z+
     506:	8f 01       	movw	r16, r30
     508:	6c 2f       	mov	r22, r28
     50a:	80 e0       	ldi	r24, 0x00	; 0
     50c:	a1 d7       	rcall	.+3906   	; 0x1450 <Modbus_Set_transmit_buffer>
	}

}

void Lcd_Write_multiple_data(uint16_t address ,uint16_t *pData,uint8_t QTY){
	for(uint8_t i=0;i<QTY;i++){
     50e:	cf 5f       	subi	r28, 0xFF	; 255
     510:	dc 13       	cpse	r29, r28
     512:	f6 cf       	rjmp	.-20     	; 0x500 <Lcd_Write_multiple_data+0x1a>
		Modbus_Set_transmit_buffer(LCD,i, (*(pData+i)));
	}
	Modbus_Write_multiple_registers(LCD,address,QTY);
     514:	4d 2f       	mov	r20, r29
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	b7 01       	movw	r22, r14
     51a:	80 e0       	ldi	r24, 0x00	; 0
     51c:	d6 d7       	rcall	.+4012   	; 0x14ca <Modbus_Write_multiple_registers>
	
}
     51e:	df 91       	pop	r29
     520:	cf 91       	pop	r28
     522:	1f 91       	pop	r17
     524:	0f 91       	pop	r16
     526:	ff 90       	pop	r15
     528:	ef 90       	pop	r14
     52a:	08 95       	ret

0000052c <Modbus_mster_transaction>:
		g_mod1_write_address = u16WriteAddress;
		g_mod1_write_qty = u16BitQty;
		return Modbus_mster_transaction(device, OUR_WRITE_MULTIPLE_COILS);
	}
	return INVALID_DEVICE; //error
}
     52c:	8f 92       	push	r8
     52e:	9f 92       	push	r9
     530:	af 92       	push	r10
     532:	bf 92       	push	r11
     534:	df 92       	push	r13
     536:	ef 92       	push	r14
     538:	ff 92       	push	r15
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	da 95       	dec	r29
     548:	0f b6       	in	r0, 0x3f	; 63
     54a:	f8 94       	cli
     54c:	de bf       	out	0x3e, r29	; 62
     54e:	0f be       	out	0x3f, r0	; 63
     550:	cd bf       	out	0x3d, r28	; 61
     552:	d6 2e       	mov	r13, r22
     554:	81 11       	cpse	r24, r1
     556:	00 c3       	rjmp	.+1536   	; 0xb58 <Modbus_mster_transaction+0x62c>
     558:	80 91 e2 04 	lds	r24, 0x04E2	; 0x8004e2 <g_mod0_slave>
     55c:	89 83       	std	Y+1, r24	; 0x01
     55e:	2f ef       	ldi	r18, 0xFF	; 255
     560:	62 13       	cpse	r22, r18
     562:	06 c0       	rjmp	.+12     	; 0x570 <Modbus_mster_transaction+0x44>
     564:	8f e0       	ldi	r24, 0x0F	; 15
     566:	8a 83       	std	Y+2, r24	; 0x02
     568:	68 94       	set
     56a:	bb 24       	eor	r11, r11
     56c:	b1 f8       	bld	r11, 1
     56e:	32 c0       	rjmp	.+100    	; 0x5d4 <Modbus_mster_transaction+0xa8>
     570:	6a 83       	std	Y+2, r22	; 0x02
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	68 17       	cp	r22, r24
     576:	b8 f0       	brcs	.+46     	; 0x5a6 <Modbus_mster_transaction+0x7a>
     578:	94 e0       	ldi	r25, 0x04	; 4
     57a:	96 17       	cp	r25, r22
     57c:	18 f4       	brcc	.+6      	; 0x584 <Modbus_mster_transaction+0x58>
     57e:	a7 e1       	ldi	r26, 0x17	; 23
     580:	6a 13       	cpse	r22, r26
     582:	11 c0       	rjmp	.+34     	; 0x5a6 <Modbus_mster_transaction+0x7a>
     584:	80 91 e0 04 	lds	r24, 0x04E0	; 0x8004e0 <g_mod0_read_address>
     588:	90 91 e1 04 	lds	r25, 0x04E1	; 0x8004e1 <g_mod0_read_address+0x1>
     58c:	9b 83       	std	Y+3, r25	; 0x03
     58e:	8c 83       	std	Y+4, r24	; 0x04
     590:	80 91 de 04 	lds	r24, 0x04DE	; 0x8004de <g_mod0_read_qty>
     594:	90 91 df 04 	lds	r25, 0x04DF	; 0x8004df <g_mod0_read_qty+0x1>
     598:	9d 83       	std	Y+5, r25	; 0x05
     59a:	8e 83       	std	Y+6, r24	; 0x06
     59c:	0f 2e       	mov	r0, r31
     59e:	f6 e0       	ldi	r31, 0x06	; 6
     5a0:	bf 2e       	mov	r11, r31
     5a2:	f0 2d       	mov	r31, r0
     5a4:	03 c0       	rjmp	.+6      	; 0x5ac <Modbus_mster_transaction+0x80>
     5a6:	68 94       	set
     5a8:	bb 24       	eor	r11, r11
     5aa:	b1 f8       	bld	r11, 1
     5ac:	b0 e1       	ldi	r27, 0x10	; 16
     5ae:	bd 15       	cp	r27, r13
     5b0:	40 f0       	brcs	.+16     	; 0x5c2 <Modbus_mster_transaction+0x96>
     5b2:	ef e0       	ldi	r30, 0x0F	; 15
     5b4:	de 16       	cp	r13, r30
     5b6:	70 f4       	brcc	.+28     	; 0x5d4 <Modbus_mster_transaction+0xa8>
     5b8:	8b ef       	ldi	r24, 0xFB	; 251
     5ba:	8d 0d       	add	r24, r13
     5bc:	82 30       	cpi	r24, 0x02	; 2
     5be:	00 f5       	brcc	.+64     	; 0x600 <Modbus_mster_transaction+0xd4>
     5c0:	09 c0       	rjmp	.+18     	; 0x5d4 <Modbus_mster_transaction+0xa8>
     5c2:	f6 e1       	ldi	r31, 0x16	; 22
     5c4:	df 16       	cp	r13, r31
     5c6:	e0 f0       	brcs	.+56     	; 0x600 <Modbus_mster_transaction+0xd4>
     5c8:	27 e1       	ldi	r18, 0x17	; 23
     5ca:	2d 15       	cp	r18, r13
     5cc:	18 f4       	brcc	.+6      	; 0x5d4 <Modbus_mster_transaction+0xa8>
     5ce:	8f ef       	ldi	r24, 0xFF	; 255
     5d0:	d8 12       	cpse	r13, r24
     5d2:	16 c0       	rjmp	.+44     	; 0x600 <Modbus_mster_transaction+0xd4>
     5d4:	90 91 5c 04 	lds	r25, 0x045C	; 0x80045c <g_mod0_write_address>
     5d8:	80 91 5d 04 	lds	r24, 0x045D	; 0x80045d <g_mod0_write_address+0x1>
     5dc:	e1 e0       	ldi	r30, 0x01	; 1
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	ec 0f       	add	r30, r28
     5e2:	fd 1f       	adc	r31, r29
     5e4:	eb 0d       	add	r30, r11
     5e6:	f1 1d       	adc	r31, r1
     5e8:	80 83       	st	Z, r24
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	8b 0d       	add	r24, r11
     5ee:	e1 e0       	ldi	r30, 0x01	; 1
     5f0:	f0 e0       	ldi	r31, 0x00	; 0
     5f2:	ec 0f       	add	r30, r28
     5f4:	fd 1f       	adc	r31, r29
     5f6:	e8 0f       	add	r30, r24
     5f8:	f1 1d       	adc	r31, r1
     5fa:	b3 94       	inc	r11
     5fc:	b3 94       	inc	r11
     5fe:	90 83       	st	Z, r25
     600:	90 e1       	ldi	r25, 0x10	; 16
     602:	d9 16       	cp	r13, r25
     604:	09 f4       	brne	.+2      	; 0x608 <Modbus_mster_transaction+0xdc>
     606:	ad c0       	rjmp	.+346    	; 0x762 <Modbus_mster_transaction+0x236>
     608:	9d 15       	cp	r25, r13
     60a:	58 f0       	brcs	.+22     	; 0x622 <Modbus_mster_transaction+0xf6>
     60c:	a6 e0       	ldi	r26, 0x06	; 6
     60e:	da 16       	cp	r13, r26
     610:	61 f1       	breq	.+88     	; 0x66a <Modbus_mster_transaction+0x13e>
     612:	bf e0       	ldi	r27, 0x0F	; 15
     614:	db 16       	cp	r13, r27
     616:	09 f4       	brne	.+2      	; 0x61a <Modbus_mster_transaction+0xee>
     618:	41 c0       	rjmp	.+130    	; 0x69c <Modbus_mster_transaction+0x170>
     61a:	e5 e0       	ldi	r30, 0x05	; 5
     61c:	de 12       	cpse	r13, r30
     61e:	1a c1       	rjmp	.+564    	; 0x854 <Modbus_mster_transaction+0x328>
     620:	0d c0       	rjmp	.+26     	; 0x63c <Modbus_mster_transaction+0x110>
     622:	f7 e1       	ldi	r31, 0x17	; 23
     624:	df 16       	cp	r13, r31
     626:	09 f4       	brne	.+2      	; 0x62a <Modbus_mster_transaction+0xfe>
     628:	9c c0       	rjmp	.+312    	; 0x762 <Modbus_mster_transaction+0x236>
     62a:	2f ef       	ldi	r18, 0xFF	; 255
     62c:	d2 16       	cp	r13, r18
     62e:	09 f4       	brne	.+2      	; 0x632 <Modbus_mster_transaction+0x106>
     630:	98 c0       	rjmp	.+304    	; 0x762 <Modbus_mster_transaction+0x236>
     632:	86 e1       	ldi	r24, 0x16	; 22
     634:	d8 16       	cp	r13, r24
     636:	09 f4       	brne	.+2      	; 0x63a <Modbus_mster_transaction+0x10e>
     638:	df c0       	rjmp	.+446    	; 0x7f8 <Modbus_mster_transaction+0x2cc>
     63a:	0c c1       	rjmp	.+536    	; 0x854 <Modbus_mster_transaction+0x328>
     63c:	90 91 5a 04 	lds	r25, 0x045A	; 0x80045a <g_mod0_write_qty>
     640:	80 91 5b 04 	lds	r24, 0x045B	; 0x80045b <g_mod0_write_qty+0x1>
     644:	e1 e0       	ldi	r30, 0x01	; 1
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	ec 0f       	add	r30, r28
     64a:	fd 1f       	adc	r31, r29
     64c:	eb 0d       	add	r30, r11
     64e:	f1 1d       	adc	r31, r1
     650:	80 83       	st	Z, r24
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	8b 0d       	add	r24, r11
     656:	e1 e0       	ldi	r30, 0x01	; 1
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	ec 0f       	add	r30, r28
     65c:	fd 1f       	adc	r31, r29
     65e:	e8 0f       	add	r30, r24
     660:	f1 1d       	adc	r31, r1
     662:	b3 94       	inc	r11
     664:	b3 94       	inc	r11
     666:	90 83       	st	Z, r25
     668:	f5 c0       	rjmp	.+490    	; 0x854 <Modbus_mster_transaction+0x328>
     66a:	ea ed       	ldi	r30, 0xDA	; 218
     66c:	f3 e0       	ldi	r31, 0x03	; 3
     66e:	80 81       	ld	r24, Z
     670:	91 81       	ldd	r25, Z+1	; 0x01
     672:	a1 e0       	ldi	r26, 0x01	; 1
     674:	b0 e0       	ldi	r27, 0x00	; 0
     676:	ac 0f       	add	r26, r28
     678:	bd 1f       	adc	r27, r29
     67a:	ab 0d       	add	r26, r11
     67c:	b1 1d       	adc	r27, r1
     67e:	9c 93       	st	X, r25
     680:	20 81       	ld	r18, Z
     682:	31 81       	ldd	r19, Z+1	; 0x01
     684:	81 e0       	ldi	r24, 0x01	; 1
     686:	8b 0d       	add	r24, r11
     688:	e1 e0       	ldi	r30, 0x01	; 1
     68a:	f0 e0       	ldi	r31, 0x00	; 0
     68c:	ec 0f       	add	r30, r28
     68e:	fd 1f       	adc	r31, r29
     690:	e8 0f       	add	r30, r24
     692:	f1 1d       	adc	r31, r1
     694:	b3 94       	inc	r11
     696:	b3 94       	inc	r11
     698:	20 83       	st	Z, r18
     69a:	dc c0       	rjmp	.+440    	; 0x854 <Modbus_mster_transaction+0x328>
     69c:	80 91 5a 04 	lds	r24, 0x045A	; 0x80045a <g_mod0_write_qty>
     6a0:	90 91 5b 04 	lds	r25, 0x045B	; 0x80045b <g_mod0_write_qty+0x1>
     6a4:	e1 e0       	ldi	r30, 0x01	; 1
     6a6:	f0 e0       	ldi	r31, 0x00	; 0
     6a8:	ec 0f       	add	r30, r28
     6aa:	fd 1f       	adc	r31, r29
     6ac:	eb 0d       	add	r30, r11
     6ae:	f1 1d       	adc	r31, r1
     6b0:	90 83       	st	Z, r25
     6b2:	32 e0       	ldi	r19, 0x02	; 2
     6b4:	3b 0d       	add	r19, r11
     6b6:	21 e0       	ldi	r18, 0x01	; 1
     6b8:	2b 0d       	add	r18, r11
     6ba:	e1 e0       	ldi	r30, 0x01	; 1
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	ec 0f       	add	r30, r28
     6c0:	fd 1f       	adc	r31, r29
     6c2:	e2 0f       	add	r30, r18
     6c4:	f1 1d       	adc	r31, r1
     6c6:	80 83       	st	Z, r24
     6c8:	ac 01       	movw	r20, r24
     6ca:	47 70       	andi	r20, 0x07	; 7
     6cc:	55 27       	eor	r21, r21
     6ce:	45 2b       	or	r20, r21
     6d0:	49 f0       	breq	.+18     	; 0x6e4 <Modbus_mster_transaction+0x1b8>
     6d2:	96 95       	lsr	r25
     6d4:	87 95       	ror	r24
     6d6:	96 95       	lsr	r25
     6d8:	87 95       	ror	r24
     6da:	96 95       	lsr	r25
     6dc:	87 95       	ror	r24
     6de:	21 e0       	ldi	r18, 0x01	; 1
     6e0:	28 0f       	add	r18, r24
     6e2:	07 c0       	rjmp	.+14     	; 0x6f2 <Modbus_mster_transaction+0x1c6>
     6e4:	96 95       	lsr	r25
     6e6:	87 95       	ror	r24
     6e8:	96 95       	lsr	r25
     6ea:	87 95       	ror	r24
     6ec:	96 95       	lsr	r25
     6ee:	87 95       	ror	r24
     6f0:	28 2f       	mov	r18, r24
     6f2:	93 e0       	ldi	r25, 0x03	; 3
     6f4:	b9 0e       	add	r11, r25
     6f6:	fe 01       	movw	r30, r28
     6f8:	e3 0f       	add	r30, r19
     6fa:	f1 1d       	adc	r31, r1
     6fc:	21 83       	std	Z+1, r18	; 0x01
     6fe:	22 23       	and	r18, r18
     700:	09 f4       	brne	.+2      	; 0x704 <Modbus_mster_transaction+0x1d8>
     702:	a8 c0       	rjmp	.+336    	; 0x854 <Modbus_mster_transaction+0x328>
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	98 2f       	mov	r25, r24
     708:	91 70       	andi	r25, 0x01	; 1
     70a:	80 ff       	sbrs	r24, 0
     70c:	03 c0       	rjmp	.+6      	; 0x714 <Modbus_mster_transaction+0x1e8>
     70e:	91 30       	cpi	r25, 0x01	; 1
     710:	99 f0       	breq	.+38     	; 0x738 <Modbus_mster_transaction+0x20c>
     712:	23 c0       	rjmp	.+70     	; 0x75a <Modbus_mster_transaction+0x22e>
     714:	e8 2f       	mov	r30, r24
     716:	e6 95       	lsr	r30
     718:	f0 e0       	ldi	r31, 0x00	; 0
     71a:	ee 0f       	add	r30, r30
     71c:	ff 1f       	adc	r31, r31
     71e:	e6 52       	subi	r30, 0x26	; 38
     720:	fc 4f       	sbci	r31, 0xFC	; 252
     722:	40 81       	ld	r20, Z
     724:	51 81       	ldd	r21, Z+1	; 0x01
     726:	e1 e0       	ldi	r30, 0x01	; 1
     728:	f0 e0       	ldi	r31, 0x00	; 0
     72a:	ec 0f       	add	r30, r28
     72c:	fd 1f       	adc	r31, r29
     72e:	eb 0d       	add	r30, r11
     730:	f1 1d       	adc	r31, r1
     732:	40 83       	st	Z, r20
     734:	b3 94       	inc	r11
     736:	11 c0       	rjmp	.+34     	; 0x75a <Modbus_mster_transaction+0x22e>
     738:	e8 2f       	mov	r30, r24
     73a:	e6 95       	lsr	r30
     73c:	f0 e0       	ldi	r31, 0x00	; 0
     73e:	ee 0f       	add	r30, r30
     740:	ff 1f       	adc	r31, r31
     742:	e6 52       	subi	r30, 0x26	; 38
     744:	fc 4f       	sbci	r31, 0xFC	; 252
     746:	40 81       	ld	r20, Z
     748:	51 81       	ldd	r21, Z+1	; 0x01
     74a:	e1 e0       	ldi	r30, 0x01	; 1
     74c:	f0 e0       	ldi	r31, 0x00	; 0
     74e:	ec 0f       	add	r30, r28
     750:	fd 1f       	adc	r31, r29
     752:	eb 0d       	add	r30, r11
     754:	f1 1d       	adc	r31, r1
     756:	50 83       	st	Z, r21
     758:	b3 94       	inc	r11
     75a:	8f 5f       	subi	r24, 0xFF	; 255
     75c:	28 13       	cpse	r18, r24
     75e:	d3 cf       	rjmp	.-90     	; 0x706 <Modbus_mster_transaction+0x1da>
     760:	79 c0       	rjmp	.+242    	; 0x854 <Modbus_mster_transaction+0x328>
     762:	60 91 5a 04 	lds	r22, 0x045A	; 0x80045a <g_mod0_write_qty>
     766:	70 91 5b 04 	lds	r23, 0x045B	; 0x80045b <g_mod0_write_qty+0x1>
     76a:	e1 e0       	ldi	r30, 0x01	; 1
     76c:	f0 e0       	ldi	r31, 0x00	; 0
     76e:	ec 0f       	add	r30, r28
     770:	fd 1f       	adc	r31, r29
     772:	eb 0d       	add	r30, r11
     774:	f1 1d       	adc	r31, r1
     776:	70 83       	st	Z, r23
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	8b 0d       	add	r24, r11
     77c:	e1 e0       	ldi	r30, 0x01	; 1
     77e:	f0 e0       	ldi	r31, 0x00	; 0
     780:	ec 0f       	add	r30, r28
     782:	fd 1f       	adc	r31, r29
     784:	e8 0f       	add	r30, r24
     786:	f1 1d       	adc	r31, r1
     788:	60 83       	st	Z, r22
     78a:	82 e0       	ldi	r24, 0x02	; 2
     78c:	8b 0d       	add	r24, r11
     78e:	e1 e0       	ldi	r30, 0x01	; 1
     790:	f0 e0       	ldi	r31, 0x00	; 0
     792:	ec 0f       	add	r30, r28
     794:	fd 1f       	adc	r31, r29
     796:	e8 0f       	add	r30, r24
     798:	f1 1d       	adc	r31, r1
     79a:	a3 e0       	ldi	r26, 0x03	; 3
     79c:	ba 0e       	add	r11, r26
     79e:	86 2f       	mov	r24, r22
     7a0:	88 0f       	add	r24, r24
     7a2:	80 83       	st	Z, r24
     7a4:	77 27       	eor	r23, r23
     7a6:	16 16       	cp	r1, r22
     7a8:	17 06       	cpc	r1, r23
     7aa:	0c f0       	brlt	.+2      	; 0x7ae <Modbus_mster_transaction+0x282>
     7ac:	53 c0       	rjmp	.+166    	; 0x854 <Modbus_mster_transaction+0x328>
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	20 e0       	ldi	r18, 0x00	; 0
     7b4:	88 0f       	add	r24, r24
     7b6:	99 1f       	adc	r25, r25
     7b8:	fc 01       	movw	r30, r24
     7ba:	e6 52       	subi	r30, 0x26	; 38
     7bc:	fc 4f       	sbci	r31, 0xFC	; 252
     7be:	80 81       	ld	r24, Z
     7c0:	91 81       	ldd	r25, Z+1	; 0x01
     7c2:	a1 e0       	ldi	r26, 0x01	; 1
     7c4:	b0 e0       	ldi	r27, 0x00	; 0
     7c6:	ac 0f       	add	r26, r28
     7c8:	bd 1f       	adc	r27, r29
     7ca:	ab 0d       	add	r26, r11
     7cc:	b1 1d       	adc	r27, r1
     7ce:	9c 93       	st	X, r25
     7d0:	40 81       	ld	r20, Z
     7d2:	51 81       	ldd	r21, Z+1	; 0x01
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	8b 0d       	add	r24, r11
     7d8:	e1 e0       	ldi	r30, 0x01	; 1
     7da:	f0 e0       	ldi	r31, 0x00	; 0
     7dc:	ec 0f       	add	r30, r28
     7de:	fd 1f       	adc	r31, r29
     7e0:	e8 0f       	add	r30, r24
     7e2:	f1 1d       	adc	r31, r1
     7e4:	b3 94       	inc	r11
     7e6:	b3 94       	inc	r11
     7e8:	40 83       	st	Z, r20
     7ea:	2f 5f       	subi	r18, 0xFF	; 255
     7ec:	82 2f       	mov	r24, r18
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	86 17       	cp	r24, r22
     7f2:	97 07       	cpc	r25, r23
     7f4:	fc f2       	brlt	.-66     	; 0x7b4 <Modbus_mster_transaction+0x288>
     7f6:	2e c0       	rjmp	.+92     	; 0x854 <Modbus_mster_transaction+0x328>
     7f8:	ea ed       	ldi	r30, 0xDA	; 218
     7fa:	f3 e0       	ldi	r31, 0x03	; 3
     7fc:	80 81       	ld	r24, Z
     7fe:	91 81       	ldd	r25, Z+1	; 0x01
     800:	a1 e0       	ldi	r26, 0x01	; 1
     802:	b0 e0       	ldi	r27, 0x00	; 0
     804:	ac 0f       	add	r26, r28
     806:	bd 1f       	adc	r27, r29
     808:	ab 0d       	add	r26, r11
     80a:	b1 1d       	adc	r27, r1
     80c:	9c 93       	st	X, r25
     80e:	80 81       	ld	r24, Z
     810:	91 81       	ldd	r25, Z+1	; 0x01
     812:	91 e0       	ldi	r25, 0x01	; 1
     814:	9b 0d       	add	r25, r11
     816:	a1 e0       	ldi	r26, 0x01	; 1
     818:	b0 e0       	ldi	r27, 0x00	; 0
     81a:	ac 0f       	add	r26, r28
     81c:	bd 1f       	adc	r27, r29
     81e:	a9 0f       	add	r26, r25
     820:	b1 1d       	adc	r27, r1
     822:	8c 93       	st	X, r24
     824:	82 81       	ldd	r24, Z+2	; 0x02
     826:	93 81       	ldd	r25, Z+3	; 0x03
     828:	82 e0       	ldi	r24, 0x02	; 2
     82a:	8b 0d       	add	r24, r11
     82c:	a1 e0       	ldi	r26, 0x01	; 1
     82e:	b0 e0       	ldi	r27, 0x00	; 0
     830:	ac 0f       	add	r26, r28
     832:	bd 1f       	adc	r27, r29
     834:	a8 0f       	add	r26, r24
     836:	b1 1d       	adc	r27, r1
     838:	9c 93       	st	X, r25
     83a:	22 81       	ldd	r18, Z+2	; 0x02
     83c:	33 81       	ldd	r19, Z+3	; 0x03
     83e:	83 e0       	ldi	r24, 0x03	; 3
     840:	8b 0d       	add	r24, r11
     842:	e1 e0       	ldi	r30, 0x01	; 1
     844:	f0 e0       	ldi	r31, 0x00	; 0
     846:	ec 0f       	add	r30, r28
     848:	fd 1f       	adc	r31, r29
     84a:	e8 0f       	add	r30, r24
     84c:	f1 1d       	adc	r31, r1
     84e:	b4 e0       	ldi	r27, 0x04	; 4
     850:	bb 0e       	add	r11, r27
     852:	20 83       	st	Z, r18
     854:	bb 20       	and	r11, r11
     856:	b9 f0       	breq	.+46     	; 0x886 <Modbus_mster_transaction+0x35a>
     858:	8e 01       	movw	r16, r28
     85a:	0f 5f       	subi	r16, 0xFF	; 255
     85c:	1f 4f       	sbci	r17, 0xFF	; 255
     85e:	ee 24       	eor	r14, r14
     860:	ea 94       	dec	r14
     862:	eb 0c       	add	r14, r11
     864:	f1 2c       	mov	r15, r1
     866:	ef ef       	ldi	r30, 0xFF	; 255
     868:	ee 1a       	sub	r14, r30
     86a:	fe 0a       	sbc	r15, r30
     86c:	e0 0e       	add	r14, r16
     86e:	f1 1e       	adc	r15, r17
     870:	8f ef       	ldi	r24, 0xFF	; 255
     872:	9f ef       	ldi	r25, 0xFF	; 255
     874:	d8 01       	movw	r26, r16
     876:	6d 91       	ld	r22, X+
     878:	8d 01       	movw	r16, r26
     87a:	0e 94 47 1f 	call	0x3e8e	; 0x3e8e <crc16_update>
     87e:	0e 15       	cp	r16, r14
     880:	1f 05       	cpc	r17, r15
     882:	c1 f7       	brne	.-16     	; 0x874 <Modbus_mster_transaction+0x348>
     884:	02 c0       	rjmp	.+4      	; 0x88a <Modbus_mster_transaction+0x35e>
     886:	8f ef       	ldi	r24, 0xFF	; 255
     888:	9f ef       	ldi	r25, 0xFF	; 255
     88a:	ee 24       	eor	r14, r14
     88c:	e3 94       	inc	r14
     88e:	eb 0c       	add	r14, r11
     890:	e1 e0       	ldi	r30, 0x01	; 1
     892:	f0 e0       	ldi	r31, 0x00	; 0
     894:	ec 0f       	add	r30, r28
     896:	fd 1f       	adc	r31, r29
     898:	eb 0d       	add	r30, r11
     89a:	f1 1d       	adc	r31, r1
     89c:	80 83       	st	Z, r24
     89e:	b3 94       	inc	r11
     8a0:	b3 94       	inc	r11
     8a2:	e1 e0       	ldi	r30, 0x01	; 1
     8a4:	f0 e0       	ldi	r31, 0x00	; 0
     8a6:	ec 0f       	add	r30, r28
     8a8:	fd 1f       	adc	r31, r29
     8aa:	ee 0d       	add	r30, r14
     8ac:	f1 1d       	adc	r31, r1
     8ae:	90 83       	st	Z, r25
     8b0:	e1 e0       	ldi	r30, 0x01	; 1
     8b2:	f0 e0       	ldi	r31, 0x00	; 0
     8b4:	ec 0f       	add	r30, r28
     8b6:	fd 1f       	adc	r31, r29
     8b8:	eb 0d       	add	r30, r11
     8ba:	f1 1d       	adc	r31, r1
     8bc:	10 82       	st	Z, r1
     8be:	e0 91 cd 03 	lds	r30, 0x03CD	; 0x8003cd <g_mod0_Serial_getc>
     8c2:	f0 91 ce 03 	lds	r31, 0x03CE	; 0x8003ce <g_mod0_Serial_getc+0x1>
     8c6:	19 95       	eicall
     8c8:	81 15       	cp	r24, r1
     8ca:	91 40       	sbci	r25, 0x01	; 1
     8cc:	c1 f7       	brne	.-16     	; 0x8be <Modbus_mster_transaction+0x392>
     8ce:	e0 91 d3 03 	lds	r30, 0x03D3	; 0x8003d3 <g_mod0_pre_transmission>
     8d2:	f0 91 d4 03 	lds	r31, 0x03D4	; 0x8003d4 <g_mod0_pre_transmission+0x1>
     8d6:	30 97       	sbiw	r30, 0x00	; 0
     8d8:	09 f0       	breq	.+2      	; 0x8dc <Modbus_mster_transaction+0x3b0>
     8da:	19 95       	eicall
     8dc:	bb 20       	and	r11, r11
     8de:	a1 f0       	breq	.+40     	; 0x908 <Modbus_mster_transaction+0x3dc>
     8e0:	8e 01       	movw	r16, r28
     8e2:	0f 5f       	subi	r16, 0xFF	; 255
     8e4:	1f 4f       	sbci	r17, 0xFF	; 255
     8e6:	f1 2c       	mov	r15, r1
     8e8:	ef ef       	ldi	r30, 0xFF	; 255
     8ea:	ee 1a       	sub	r14, r30
     8ec:	fe 0a       	sbc	r15, r30
     8ee:	e0 0e       	add	r14, r16
     8f0:	f1 1e       	adc	r15, r17
     8f2:	e0 91 cf 03 	lds	r30, 0x03CF	; 0x8003cf <g_mod0_Serial_putc>
     8f6:	f0 91 d0 03 	lds	r31, 0x03D0	; 0x8003d0 <g_mod0_Serial_putc+0x1>
     8fa:	d8 01       	movw	r26, r16
     8fc:	8d 91       	ld	r24, X+
     8fe:	8d 01       	movw	r16, r26
     900:	19 95       	eicall
     902:	0e 15       	cp	r16, r14
     904:	1f 05       	cpc	r17, r15
     906:	a9 f7       	brne	.-22     	; 0x8f2 <Modbus_mster_transaction+0x3c6>
     908:	e0 91 cb 03 	lds	r30, 0x03CB	; 0x8003cb <g_mod0_Serial_flush>
     90c:	f0 91 cc 03 	lds	r31, 0x03CC	; 0x8003cc <g_mod0_Serial_flush+0x1>
     910:	19 95       	eicall
     912:	ef e8       	ldi	r30, 0x8F	; 143
     914:	f1 e0       	ldi	r31, 0x01	; 1
     916:	31 97       	sbiw	r30, 0x01	; 1
     918:	f1 f7       	brne	.-4      	; 0x916 <Modbus_mster_transaction+0x3ea>
     91a:	00 c0       	rjmp	.+0      	; 0x91c <Modbus_mster_transaction+0x3f0>
     91c:	00 00       	nop
     91e:	e0 91 d1 03 	lds	r30, 0x03D1	; 0x8003d1 <g_mod0_post_transmission>
     922:	f0 91 d2 03 	lds	r31, 0x03D2	; 0x8003d2 <g_mod0_post_transmission+0x1>
     926:	30 97       	sbiw	r30, 0x00	; 0
     928:	09 f0       	breq	.+2      	; 0x92c <Modbus_mster_transaction+0x400>
     92a:	19 95       	eicall
     92c:	ff ef       	ldi	r31, 0xFF	; 255
     92e:	23 ed       	ldi	r18, 0xD3	; 211
     930:	80 e3       	ldi	r24, 0x30	; 48
     932:	f1 50       	subi	r31, 0x01	; 1
     934:	20 40       	sbci	r18, 0x00	; 0
     936:	80 40       	sbci	r24, 0x00	; 0
     938:	e1 f7       	brne	.-8      	; 0x932 <Modbus_mster_transaction+0x406>
     93a:	00 c0       	rjmp	.+0      	; 0x93c <Modbus_mster_transaction+0x410>
     93c:	00 00       	nop
     93e:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     942:	4b 01       	movw	r8, r22
     944:	5c 01       	movw	r10, r24
     946:	08 e0       	ldi	r16, 0x08	; 8
     948:	10 e0       	ldi	r17, 0x00	; 0
     94a:	ed 2c       	mov	r14, r13
     94c:	f1 2c       	mov	r15, r1
     94e:	e0 91 c9 03 	lds	r30, 0x03C9	; 0x8003c9 <g_mod0_Serial_available>
     952:	f0 91 ca 03 	lds	r31, 0x03CA	; 0x8003ca <g_mod0_Serial_available+0x1>
     956:	19 95       	eicall
     958:	89 2b       	or	r24, r25
     95a:	91 f0       	breq	.+36     	; 0x980 <Modbus_mster_transaction+0x454>
     95c:	dd 24       	eor	r13, r13
     95e:	d3 94       	inc	r13
     960:	d1 0e       	add	r13, r17
     962:	e0 91 cd 03 	lds	r30, 0x03CD	; 0x8003cd <g_mod0_Serial_getc>
     966:	f0 91 ce 03 	lds	r31, 0x03CE	; 0x8003ce <g_mod0_Serial_getc+0x1>
     96a:	19 95       	eicall
     96c:	e1 e0       	ldi	r30, 0x01	; 1
     96e:	f0 e0       	ldi	r31, 0x00	; 0
     970:	ec 0f       	add	r30, r28
     972:	fd 1f       	adc	r31, r29
     974:	e1 0f       	add	r30, r17
     976:	f1 1d       	adc	r31, r1
     978:	80 83       	st	Z, r24
     97a:	01 50       	subi	r16, 0x01	; 1
     97c:	1d 2d       	mov	r17, r13
     97e:	07 c0       	rjmp	.+14     	; 0x98e <Modbus_mster_transaction+0x462>
     980:	e0 91 d5 03 	lds	r30, 0x03D5	; 0x8003d5 <g_mod0_idle>
     984:	f0 91 d6 03 	lds	r31, 0x03D6	; 0x8003d6 <g_mod0_idle+0x1>
     988:	30 97       	sbiw	r30, 0x00	; 0
     98a:	09 f0       	breq	.+2      	; 0x98e <Modbus_mster_transaction+0x462>
     98c:	19 95       	eicall
     98e:	15 30       	cpi	r17, 0x05	; 5
     990:	59 f5       	brne	.+86     	; 0x9e8 <Modbus_mster_transaction+0x4bc>
     992:	99 81       	ldd	r25, Y+1	; 0x01
     994:	80 91 e2 04 	lds	r24, 0x04E2	; 0x8004e2 <g_mod0_slave>
     998:	98 13       	cpse	r25, r24
     99a:	2b c4       	rjmp	.+2134   	; 0x11f2 <Modbus_mster_transaction+0xcc6>
     99c:	8a 81       	ldd	r24, Y+2	; 0x02
     99e:	28 2f       	mov	r18, r24
     9a0:	2f 77       	andi	r18, 0x7F	; 127
     9a2:	30 e0       	ldi	r19, 0x00	; 0
     9a4:	2e 15       	cp	r18, r14
     9a6:	3f 05       	cpc	r19, r15
     9a8:	09 f0       	breq	.+2      	; 0x9ac <Modbus_mster_transaction+0x480>
     9aa:	25 c4       	rjmp	.+2122   	; 0x11f6 <Modbus_mster_transaction+0xcca>
     9ac:	88 23       	and	r24, r24
     9ae:	2c f4       	brge	.+10     	; 0x9ba <Modbus_mster_transaction+0x48e>
     9b0:	8b 81       	ldd	r24, Y+3	; 0x03
     9b2:	88 23       	and	r24, r24
     9b4:	09 f4       	brne	.+2      	; 0x9b8 <Modbus_mster_transaction+0x48c>
     9b6:	3d c0       	rjmp	.+122    	; 0xa32 <Modbus_mster_transaction+0x506>
     9b8:	ca c0       	rjmp	.+404    	; 0xb4e <Modbus_mster_transaction+0x622>
     9ba:	81 31       	cpi	r24, 0x11	; 17
     9bc:	58 f4       	brcc	.+22     	; 0x9d4 <Modbus_mster_transaction+0x4a8>
     9be:	8f 30       	cpi	r24, 0x0F	; 15
     9c0:	08 f0       	brcs	.+2      	; 0x9c4 <Modbus_mster_transaction+0x498>
     9c2:	b5 c3       	rjmp	.+1898   	; 0x112e <Modbus_mster_transaction+0xc02>
     9c4:	81 30       	cpi	r24, 0x01	; 1
     9c6:	80 f0       	brcs	.+32     	; 0x9e8 <Modbus_mster_transaction+0x4bc>
     9c8:	85 30       	cpi	r24, 0x05	; 5
     9ca:	68 f0       	brcs	.+26     	; 0x9e6 <Modbus_mster_transaction+0x4ba>
     9cc:	87 30       	cpi	r24, 0x07	; 7
     9ce:	08 f4       	brcc	.+2      	; 0x9d2 <Modbus_mster_transaction+0x4a6>
     9d0:	ae c3       	rjmp	.+1884   	; 0x112e <Modbus_mster_transaction+0xc02>
     9d2:	0a c0       	rjmp	.+20     	; 0x9e8 <Modbus_mster_transaction+0x4bc>
     9d4:	87 31       	cpi	r24, 0x17	; 23
     9d6:	39 f0       	breq	.+14     	; 0x9e6 <Modbus_mster_transaction+0x4ba>
     9d8:	8f 3f       	cpi	r24, 0xFF	; 255
     9da:	09 f4       	brne	.+2      	; 0x9de <Modbus_mster_transaction+0x4b2>
     9dc:	a8 c3       	rjmp	.+1872   	; 0x112e <Modbus_mster_transaction+0xc02>
     9de:	86 31       	cpi	r24, 0x16	; 22
     9e0:	19 f4       	brne	.+6      	; 0x9e8 <Modbus_mster_transaction+0x4bc>
     9e2:	05 e0       	ldi	r16, 0x05	; 5
     9e4:	a5 c3       	rjmp	.+1866   	; 0x1130 <Modbus_mster_transaction+0xc04>
     9e6:	0b 81       	ldd	r16, Y+3	; 0x03
     9e8:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     9ec:	dc 01       	movw	r26, r24
     9ee:	cb 01       	movw	r24, r22
     9f0:	88 19       	sub	r24, r8
     9f2:	99 09       	sbc	r25, r9
     9f4:	aa 09       	sbc	r26, r10
     9f6:	bb 09       	sbc	r27, r11
     9f8:	81 3d       	cpi	r24, 0xD1	; 209
     9fa:	97 40       	sbci	r25, 0x07	; 7
     9fc:	a1 05       	cpc	r26, r1
     9fe:	b1 05       	cpc	r27, r1
     a00:	08 f4       	brcc	.+2      	; 0xa04 <Modbus_mster_transaction+0x4d8>
     a02:	eb c3       	rjmp	.+2006   	; 0x11da <Modbus_mster_transaction+0xcae>
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	92 e0       	ldi	r25, 0x02	; 2
     a08:	aa d7       	rcall	.+3924   	; 0x195e <UART0_puts>
     a0a:	8a e0       	ldi	r24, 0x0A	; 10
     a0c:	73 d7       	rcall	.+3814   	; 0x18f4 <UART0_putc>
     a0e:	01 11       	cpse	r16, r1
     a10:	f4 c3       	rjmp	.+2024   	; 0x11fa <Modbus_mster_transaction+0xcce>
     a12:	82 ee       	ldi	r24, 0xE2	; 226
     a14:	81 11       	cpse	r24, r1
     a16:	9b c0       	rjmp	.+310    	; 0xb4e <Modbus_mster_transaction+0x622>
     a18:	15 30       	cpi	r17, 0x05	; 5
     a1a:	08 f4       	brcc	.+2      	; 0xa1e <Modbus_mster_transaction+0x4f2>
     a1c:	a9 c3       	rjmp	.+1874   	; 0x1170 <Modbus_mster_transaction+0xc44>
     a1e:	a1 2e       	mov	r10, r17
     a20:	b1 2c       	mov	r11, r1
     a22:	75 01       	movw	r14, r10
     a24:	f2 e0       	ldi	r31, 0x02	; 2
     a26:	ef 1a       	sub	r14, r31
     a28:	f1 08       	sbc	r15, r1
     a2a:	1e 14       	cp	r1, r14
     a2c:	1f 04       	cpc	r1, r15
     a2e:	5c f0       	brlt	.+22     	; 0xa46 <Modbus_mster_transaction+0x51a>
     a30:	8e c3       	rjmp	.+1820   	; 0x114e <Modbus_mster_transaction+0xc22>
     a32:	0f 2e       	mov	r0, r31
     a34:	f3 e0       	ldi	r31, 0x03	; 3
     a36:	ef 2e       	mov	r14, r31
     a38:	f1 2c       	mov	r15, r1
     a3a:	f0 2d       	mov	r31, r0
     a3c:	0f 2e       	mov	r0, r31
     a3e:	f5 e0       	ldi	r31, 0x05	; 5
     a40:	af 2e       	mov	r10, r31
     a42:	b1 2c       	mov	r11, r1
     a44:	f0 2d       	mov	r31, r0
     a46:	20 e0       	ldi	r18, 0x00	; 0
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	8f ef       	ldi	r24, 0xFF	; 255
     a4c:	9f ef       	ldi	r25, 0xFF	; 255
     a4e:	10 e0       	ldi	r17, 0x00	; 0
     a50:	e1 e0       	ldi	r30, 0x01	; 1
     a52:	f0 e0       	ldi	r31, 0x00	; 0
     a54:	ec 0f       	add	r30, r28
     a56:	fd 1f       	adc	r31, r29
     a58:	e2 0f       	add	r30, r18
     a5a:	f3 1f       	adc	r31, r19
     a5c:	60 81       	ld	r22, Z
     a5e:	0e 94 47 1f 	call	0x3e8e	; 0x3e8e <crc16_update>
     a62:	1f 5f       	subi	r17, 0xFF	; 255
     a64:	21 2f       	mov	r18, r17
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	2e 15       	cp	r18, r14
     a6a:	3f 05       	cpc	r19, r15
     a6c:	8c f3       	brlt	.-30     	; 0xa50 <Modbus_mster_transaction+0x524>
     a6e:	71 c3       	rjmp	.+1762   	; 0x1152 <Modbus_mster_transaction+0xc26>
     a70:	89 2f       	mov	r24, r25
     a72:	99 27       	eor	r25, r25
     a74:	fe 01       	movw	r30, r28
     a76:	ea 0d       	add	r30, r10
     a78:	fb 1d       	adc	r31, r11
     a7a:	20 81       	ld	r18, Z
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	82 17       	cp	r24, r18
     a80:	93 07       	cpc	r25, r19
     a82:	09 f0       	breq	.+2      	; 0xa86 <Modbus_mster_transaction+0x55a>
     a84:	73 c3       	rjmp	.+1766   	; 0x116c <Modbus_mster_transaction+0xc40>
     a86:	74 c3       	rjmp	.+1768   	; 0x1170 <Modbus_mster_transaction+0xc44>
     a88:	9b 81       	ldd	r25, Y+3	; 0x03
     a8a:	96 95       	lsr	r25
     a8c:	e9 f5       	brne	.+122    	; 0xb08 <Modbus_mster_transaction+0x5dc>
     a8e:	80 e0       	ldi	r24, 0x00	; 0
     a90:	5e c0       	rjmp	.+188    	; 0xb4e <Modbus_mster_transaction+0x622>
     a92:	7b 81       	ldd	r23, Y+3	; 0x03
     a94:	97 2f       	mov	r25, r23
     a96:	96 95       	lsr	r25
     a98:	09 f4       	brne	.+2      	; 0xa9c <Modbus_mster_transaction+0x570>
     a9a:	78 c3       	rjmp	.+1776   	; 0x118c <Modbus_mster_transaction+0xc60>
     a9c:	fe 01       	movw	r30, r28
     a9e:	31 96       	adiw	r30, 0x01	; 1
     aa0:	40 e0       	ldi	r20, 0x00	; 0
     aa2:	50 e0       	ldi	r21, 0x00	; 0
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	70 f4       	brcc	.+28     	; 0xac6 <Modbus_mster_transaction+0x59a>
     aaa:	24 81       	ldd	r18, Z+4	; 0x04
     aac:	30 e0       	ldi	r19, 0x00	; 0
     aae:	32 2f       	mov	r19, r18
     ab0:	22 27       	eor	r18, r18
     ab2:	63 81       	ldd	r22, Z+3	; 0x03
     ab4:	26 2b       	or	r18, r22
     ab6:	da 01       	movw	r26, r20
     ab8:	aa 0f       	add	r26, r26
     aba:	bb 1f       	adc	r27, r27
     abc:	a2 5a       	subi	r26, 0xA2	; 162
     abe:	bb 4f       	sbci	r27, 0xFB	; 251
     ac0:	11 96       	adiw	r26, 0x01	; 1
     ac2:	3c 93       	st	X, r19
     ac4:	2e 93       	st	-X, r18
     ac6:	8f 5f       	subi	r24, 0xFF	; 255
     ac8:	4f 5f       	subi	r20, 0xFF	; 255
     aca:	5f 4f       	sbci	r21, 0xFF	; 255
     acc:	32 96       	adiw	r30, 0x02	; 2
     ace:	89 13       	cpse	r24, r25
     ad0:	ea cf       	rjmp	.-44     	; 0xaa6 <Modbus_mster_transaction+0x57a>
     ad2:	8f ef       	ldi	r24, 0xFF	; 255
     ad4:	89 0f       	add	r24, r25
     ad6:	80 93 d7 03 	sts	0x03D7, r24	; 0x8003d7 <g_mod0_response_buffer_length>
     ada:	70 ff       	sbrs	r23, 0
     adc:	35 c0       	rjmp	.+106    	; 0xb48 <Modbus_mster_transaction+0x61c>
     ade:	90 34       	cpi	r25, 0x40	; 64
     ae0:	70 f4       	brcc	.+28     	; 0xafe <Modbus_mster_transaction+0x5d2>
     ae2:	29 2f       	mov	r18, r25
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	22 0f       	add	r18, r18
     ae8:	33 1f       	adc	r19, r19
     aea:	fe 01       	movw	r30, r28
     aec:	e2 0f       	add	r30, r18
     aee:	f3 1f       	adc	r31, r19
     af0:	44 81       	ldd	r20, Z+4	; 0x04
     af2:	50 e0       	ldi	r21, 0x00	; 0
     af4:	f9 01       	movw	r30, r18
     af6:	e2 5a       	subi	r30, 0xA2	; 162
     af8:	fb 4f       	sbci	r31, 0xFB	; 251
     afa:	51 83       	std	Z+1, r21	; 0x01
     afc:	40 83       	st	Z, r20
     afe:	9f 5f       	subi	r25, 0xFF	; 255
     b00:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <g_mod0_response_buffer_length>
     b04:	80 e0       	ldi	r24, 0x00	; 0
     b06:	23 c0       	rjmp	.+70     	; 0xb4e <Modbus_mster_transaction+0x622>
     b08:	fe 01       	movw	r30, r28
     b0a:	31 96       	adiw	r30, 0x01	; 1
     b0c:	40 e0       	ldi	r20, 0x00	; 0
     b0e:	50 e0       	ldi	r21, 0x00	; 0
     b10:	80 e0       	ldi	r24, 0x00	; 0
     b12:	80 34       	cpi	r24, 0x40	; 64
     b14:	70 f4       	brcc	.+28     	; 0xb32 <Modbus_mster_transaction+0x606>
     b16:	23 81       	ldd	r18, Z+3	; 0x03
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	32 2f       	mov	r19, r18
     b1c:	22 27       	eor	r18, r18
     b1e:	64 81       	ldd	r22, Z+4	; 0x04
     b20:	26 2b       	or	r18, r22
     b22:	da 01       	movw	r26, r20
     b24:	aa 0f       	add	r26, r26
     b26:	bb 1f       	adc	r27, r27
     b28:	a2 5a       	subi	r26, 0xA2	; 162
     b2a:	bb 4f       	sbci	r27, 0xFB	; 251
     b2c:	11 96       	adiw	r26, 0x01	; 1
     b2e:	3c 93       	st	X, r19
     b30:	2e 93       	st	-X, r18
     b32:	8f 5f       	subi	r24, 0xFF	; 255
     b34:	4f 5f       	subi	r20, 0xFF	; 255
     b36:	5f 4f       	sbci	r21, 0xFF	; 255
     b38:	32 96       	adiw	r30, 0x02	; 2
     b3a:	89 13       	cpse	r24, r25
     b3c:	ea cf       	rjmp	.-44     	; 0xb12 <Modbus_mster_transaction+0x5e6>
     b3e:	91 50       	subi	r25, 0x01	; 1
     b40:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <g_mod0_response_buffer_length>
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	03 c0       	rjmp	.+6      	; 0xb4e <Modbus_mster_transaction+0x622>
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	01 c0       	rjmp	.+2      	; 0xb4e <Modbus_mster_transaction+0x622>
     b4c:	80 e0       	ldi	r24, 0x00	; 0
     b4e:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <g_mod0_transmit_buffer_index>
     b52:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <g_mod0_response_buffer_index>
     b56:	59 c3       	rjmp	.+1714   	; 0x120a <Modbus_mster_transaction+0xcde>
     b58:	81 30       	cpi	r24, 0x01	; 1
     b5a:	09 f0       	breq	.+2      	; 0xb5e <Modbus_mster_transaction+0x632>
     b5c:	e6 c2       	rjmp	.+1484   	; 0x112a <Modbus_mster_transaction+0xbfe>
     b5e:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <g_mod1_slave>
     b62:	89 83       	std	Y+1, r24	; 0x01
     b64:	2f ef       	ldi	r18, 0xFF	; 255
     b66:	62 13       	cpse	r22, r18
     b68:	06 c0       	rjmp	.+12     	; 0xb76 <Modbus_mster_transaction+0x64a>
     b6a:	8f e0       	ldi	r24, 0x0F	; 15
     b6c:	8a 83       	std	Y+2, r24	; 0x02
     b6e:	68 94       	set
     b70:	bb 24       	eor	r11, r11
     b72:	b1 f8       	bld	r11, 1
     b74:	32 c0       	rjmp	.+100    	; 0xbda <Modbus_mster_transaction+0x6ae>
     b76:	6a 83       	std	Y+2, r22	; 0x02
     b78:	81 e0       	ldi	r24, 0x01	; 1
     b7a:	68 17       	cp	r22, r24
     b7c:	b8 f0       	brcs	.+46     	; 0xbac <Modbus_mster_transaction+0x680>
     b7e:	94 e0       	ldi	r25, 0x04	; 4
     b80:	96 17       	cp	r25, r22
     b82:	18 f4       	brcc	.+6      	; 0xb8a <Modbus_mster_transaction+0x65e>
     b84:	a7 e1       	ldi	r26, 0x17	; 23
     b86:	6a 13       	cpse	r22, r26
     b88:	11 c0       	rjmp	.+34     	; 0xbac <Modbus_mster_transaction+0x680>
     b8a:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <g_mod1_read_address>
     b8e:	90 91 c7 03 	lds	r25, 0x03C7	; 0x8003c7 <g_mod1_read_address+0x1>
     b92:	9b 83       	std	Y+3, r25	; 0x03
     b94:	8c 83       	std	Y+4, r24	; 0x04
     b96:	80 91 c4 03 	lds	r24, 0x03C4	; 0x8003c4 <g_mod1_read_qty>
     b9a:	90 91 c5 03 	lds	r25, 0x03C5	; 0x8003c5 <g_mod1_read_qty+0x1>
     b9e:	9d 83       	std	Y+5, r25	; 0x05
     ba0:	8e 83       	std	Y+6, r24	; 0x06
     ba2:	0f 2e       	mov	r0, r31
     ba4:	f6 e0       	ldi	r31, 0x06	; 6
     ba6:	bf 2e       	mov	r11, r31
     ba8:	f0 2d       	mov	r31, r0
     baa:	03 c0       	rjmp	.+6      	; 0xbb2 <Modbus_mster_transaction+0x686>
     bac:	68 94       	set
     bae:	bb 24       	eor	r11, r11
     bb0:	b1 f8       	bld	r11, 1
     bb2:	b0 e1       	ldi	r27, 0x10	; 16
     bb4:	bd 15       	cp	r27, r13
     bb6:	40 f0       	brcs	.+16     	; 0xbc8 <Modbus_mster_transaction+0x69c>
     bb8:	ef e0       	ldi	r30, 0x0F	; 15
     bba:	de 16       	cp	r13, r30
     bbc:	70 f4       	brcc	.+28     	; 0xbda <Modbus_mster_transaction+0x6ae>
     bbe:	8b ef       	ldi	r24, 0xFB	; 251
     bc0:	8d 0d       	add	r24, r13
     bc2:	82 30       	cpi	r24, 0x02	; 2
     bc4:	00 f5       	brcc	.+64     	; 0xc06 <Modbus_mster_transaction+0x6da>
     bc6:	09 c0       	rjmp	.+18     	; 0xbda <Modbus_mster_transaction+0x6ae>
     bc8:	f6 e1       	ldi	r31, 0x16	; 22
     bca:	df 16       	cp	r13, r31
     bcc:	e0 f0       	brcs	.+56     	; 0xc06 <Modbus_mster_transaction+0x6da>
     bce:	27 e1       	ldi	r18, 0x17	; 23
     bd0:	2d 15       	cp	r18, r13
     bd2:	18 f4       	brcc	.+6      	; 0xbda <Modbus_mster_transaction+0x6ae>
     bd4:	8f ef       	ldi	r24, 0xFF	; 255
     bd6:	d8 12       	cpse	r13, r24
     bd8:	16 c0       	rjmp	.+44     	; 0xc06 <Modbus_mster_transaction+0x6da>
     bda:	90 91 42 03 	lds	r25, 0x0342	; 0x800342 <g_mod1_write_address>
     bde:	80 91 43 03 	lds	r24, 0x0343	; 0x800343 <g_mod1_write_address+0x1>
     be2:	e1 e0       	ldi	r30, 0x01	; 1
     be4:	f0 e0       	ldi	r31, 0x00	; 0
     be6:	ec 0f       	add	r30, r28
     be8:	fd 1f       	adc	r31, r29
     bea:	eb 0d       	add	r30, r11
     bec:	f1 1d       	adc	r31, r1
     bee:	80 83       	st	Z, r24
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	8b 0d       	add	r24, r11
     bf4:	e1 e0       	ldi	r30, 0x01	; 1
     bf6:	f0 e0       	ldi	r31, 0x00	; 0
     bf8:	ec 0f       	add	r30, r28
     bfa:	fd 1f       	adc	r31, r29
     bfc:	e8 0f       	add	r30, r24
     bfe:	f1 1d       	adc	r31, r1
     c00:	b3 94       	inc	r11
     c02:	b3 94       	inc	r11
     c04:	90 83       	st	Z, r25
     c06:	90 e1       	ldi	r25, 0x10	; 16
     c08:	d9 16       	cp	r13, r25
     c0a:	09 f4       	brne	.+2      	; 0xc0e <Modbus_mster_transaction+0x6e2>
     c0c:	ad c0       	rjmp	.+346    	; 0xd68 <Modbus_mster_transaction+0x83c>
     c0e:	9d 15       	cp	r25, r13
     c10:	58 f0       	brcs	.+22     	; 0xc28 <Modbus_mster_transaction+0x6fc>
     c12:	a6 e0       	ldi	r26, 0x06	; 6
     c14:	da 16       	cp	r13, r26
     c16:	61 f1       	breq	.+88     	; 0xc70 <Modbus_mster_transaction+0x744>
     c18:	bf e0       	ldi	r27, 0x0F	; 15
     c1a:	db 16       	cp	r13, r27
     c1c:	09 f4       	brne	.+2      	; 0xc20 <Modbus_mster_transaction+0x6f4>
     c1e:	41 c0       	rjmp	.+130    	; 0xca2 <Modbus_mster_transaction+0x776>
     c20:	e5 e0       	ldi	r30, 0x05	; 5
     c22:	de 12       	cpse	r13, r30
     c24:	1b c1       	rjmp	.+566    	; 0xe5c <Modbus_mster_transaction+0x930>
     c26:	0d c0       	rjmp	.+26     	; 0xc42 <Modbus_mster_transaction+0x716>
     c28:	f7 e1       	ldi	r31, 0x17	; 23
     c2a:	df 16       	cp	r13, r31
     c2c:	09 f4       	brne	.+2      	; 0xc30 <Modbus_mster_transaction+0x704>
     c2e:	9c c0       	rjmp	.+312    	; 0xd68 <Modbus_mster_transaction+0x83c>
     c30:	2f ef       	ldi	r18, 0xFF	; 255
     c32:	d2 16       	cp	r13, r18
     c34:	09 f4       	brne	.+2      	; 0xc38 <Modbus_mster_transaction+0x70c>
     c36:	98 c0       	rjmp	.+304    	; 0xd68 <Modbus_mster_transaction+0x83c>
     c38:	86 e1       	ldi	r24, 0x16	; 22
     c3a:	d8 16       	cp	r13, r24
     c3c:	09 f4       	brne	.+2      	; 0xc40 <Modbus_mster_transaction+0x714>
     c3e:	e0 c0       	rjmp	.+448    	; 0xe00 <Modbus_mster_transaction+0x8d4>
     c40:	0d c1       	rjmp	.+538    	; 0xe5c <Modbus_mster_transaction+0x930>
     c42:	90 91 40 03 	lds	r25, 0x0340	; 0x800340 <g_mod1_write_qty>
     c46:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <g_mod1_write_qty+0x1>
     c4a:	e1 e0       	ldi	r30, 0x01	; 1
     c4c:	f0 e0       	ldi	r31, 0x00	; 0
     c4e:	ec 0f       	add	r30, r28
     c50:	fd 1f       	adc	r31, r29
     c52:	eb 0d       	add	r30, r11
     c54:	f1 1d       	adc	r31, r1
     c56:	80 83       	st	Z, r24
     c58:	81 e0       	ldi	r24, 0x01	; 1
     c5a:	8b 0d       	add	r24, r11
     c5c:	e1 e0       	ldi	r30, 0x01	; 1
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	ec 0f       	add	r30, r28
     c62:	fd 1f       	adc	r31, r29
     c64:	e8 0f       	add	r30, r24
     c66:	f1 1d       	adc	r31, r1
     c68:	b3 94       	inc	r11
     c6a:	b3 94       	inc	r11
     c6c:	90 83       	st	Z, r25
     c6e:	f6 c0       	rjmp	.+492    	; 0xe5c <Modbus_mster_transaction+0x930>
     c70:	e0 ec       	ldi	r30, 0xC0	; 192
     c72:	f2 e0       	ldi	r31, 0x02	; 2
     c74:	80 81       	ld	r24, Z
     c76:	91 81       	ldd	r25, Z+1	; 0x01
     c78:	a1 e0       	ldi	r26, 0x01	; 1
     c7a:	b0 e0       	ldi	r27, 0x00	; 0
     c7c:	ac 0f       	add	r26, r28
     c7e:	bd 1f       	adc	r27, r29
     c80:	ab 0d       	add	r26, r11
     c82:	b1 1d       	adc	r27, r1
     c84:	9c 93       	st	X, r25
     c86:	20 81       	ld	r18, Z
     c88:	31 81       	ldd	r19, Z+1	; 0x01
     c8a:	81 e0       	ldi	r24, 0x01	; 1
     c8c:	8b 0d       	add	r24, r11
     c8e:	e1 e0       	ldi	r30, 0x01	; 1
     c90:	f0 e0       	ldi	r31, 0x00	; 0
     c92:	ec 0f       	add	r30, r28
     c94:	fd 1f       	adc	r31, r29
     c96:	e8 0f       	add	r30, r24
     c98:	f1 1d       	adc	r31, r1
     c9a:	b3 94       	inc	r11
     c9c:	b3 94       	inc	r11
     c9e:	20 83       	st	Z, r18
     ca0:	dd c0       	rjmp	.+442    	; 0xe5c <Modbus_mster_transaction+0x930>
     ca2:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <g_mod1_write_qty>
     ca6:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <g_mod1_write_qty+0x1>
     caa:	e1 e0       	ldi	r30, 0x01	; 1
     cac:	f0 e0       	ldi	r31, 0x00	; 0
     cae:	ec 0f       	add	r30, r28
     cb0:	fd 1f       	adc	r31, r29
     cb2:	eb 0d       	add	r30, r11
     cb4:	f1 1d       	adc	r31, r1
     cb6:	90 83       	st	Z, r25
     cb8:	22 e0       	ldi	r18, 0x02	; 2
     cba:	2b 0d       	add	r18, r11
     cbc:	31 e0       	ldi	r19, 0x01	; 1
     cbe:	3b 0d       	add	r19, r11
     cc0:	e1 e0       	ldi	r30, 0x01	; 1
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	ec 0f       	add	r30, r28
     cc6:	fd 1f       	adc	r31, r29
     cc8:	e3 0f       	add	r30, r19
     cca:	f1 1d       	adc	r31, r1
     ccc:	80 83       	st	Z, r24
     cce:	ac 01       	movw	r20, r24
     cd0:	47 70       	andi	r20, 0x07	; 7
     cd2:	55 27       	eor	r21, r21
     cd4:	45 2b       	or	r20, r21
     cd6:	49 f0       	breq	.+18     	; 0xcea <Modbus_mster_transaction+0x7be>
     cd8:	96 95       	lsr	r25
     cda:	87 95       	ror	r24
     cdc:	96 95       	lsr	r25
     cde:	87 95       	ror	r24
     ce0:	96 95       	lsr	r25
     ce2:	87 95       	ror	r24
     ce4:	91 e0       	ldi	r25, 0x01	; 1
     ce6:	98 0f       	add	r25, r24
     ce8:	07 c0       	rjmp	.+14     	; 0xcf8 <Modbus_mster_transaction+0x7cc>
     cea:	96 95       	lsr	r25
     cec:	87 95       	ror	r24
     cee:	96 95       	lsr	r25
     cf0:	87 95       	ror	r24
     cf2:	96 95       	lsr	r25
     cf4:	87 95       	ror	r24
     cf6:	98 2f       	mov	r25, r24
     cf8:	a3 e0       	ldi	r26, 0x03	; 3
     cfa:	ba 0e       	add	r11, r26
     cfc:	fe 01       	movw	r30, r28
     cfe:	e2 0f       	add	r30, r18
     d00:	f1 1d       	adc	r31, r1
     d02:	91 83       	std	Z+1, r25	; 0x01
     d04:	99 23       	and	r25, r25
     d06:	09 f4       	brne	.+2      	; 0xd0a <Modbus_mster_transaction+0x7de>
     d08:	a9 c0       	rjmp	.+338    	; 0xe5c <Modbus_mster_transaction+0x930>
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	28 2f       	mov	r18, r24
     d0e:	21 70       	andi	r18, 0x01	; 1
     d10:	80 ff       	sbrs	r24, 0
     d12:	03 c0       	rjmp	.+6      	; 0xd1a <Modbus_mster_transaction+0x7ee>
     d14:	21 30       	cpi	r18, 0x01	; 1
     d16:	99 f0       	breq	.+38     	; 0xd3e <Modbus_mster_transaction+0x812>
     d18:	23 c0       	rjmp	.+70     	; 0xd60 <Modbus_mster_transaction+0x834>
     d1a:	e8 2f       	mov	r30, r24
     d1c:	e6 95       	lsr	r30
     d1e:	f0 e0       	ldi	r31, 0x00	; 0
     d20:	ee 0f       	add	r30, r30
     d22:	ff 1f       	adc	r31, r31
     d24:	e0 54       	subi	r30, 0x40	; 64
     d26:	fd 4f       	sbci	r31, 0xFD	; 253
     d28:	20 81       	ld	r18, Z
     d2a:	31 81       	ldd	r19, Z+1	; 0x01
     d2c:	e1 e0       	ldi	r30, 0x01	; 1
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	ec 0f       	add	r30, r28
     d32:	fd 1f       	adc	r31, r29
     d34:	eb 0d       	add	r30, r11
     d36:	f1 1d       	adc	r31, r1
     d38:	20 83       	st	Z, r18
     d3a:	b3 94       	inc	r11
     d3c:	11 c0       	rjmp	.+34     	; 0xd60 <Modbus_mster_transaction+0x834>
     d3e:	e8 2f       	mov	r30, r24
     d40:	e6 95       	lsr	r30
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	ee 0f       	add	r30, r30
     d46:	ff 1f       	adc	r31, r31
     d48:	e0 54       	subi	r30, 0x40	; 64
     d4a:	fd 4f       	sbci	r31, 0xFD	; 253
     d4c:	20 81       	ld	r18, Z
     d4e:	31 81       	ldd	r19, Z+1	; 0x01
     d50:	e1 e0       	ldi	r30, 0x01	; 1
     d52:	f0 e0       	ldi	r31, 0x00	; 0
     d54:	ec 0f       	add	r30, r28
     d56:	fd 1f       	adc	r31, r29
     d58:	eb 0d       	add	r30, r11
     d5a:	f1 1d       	adc	r31, r1
     d5c:	30 83       	st	Z, r19
     d5e:	b3 94       	inc	r11
     d60:	8f 5f       	subi	r24, 0xFF	; 255
     d62:	98 13       	cpse	r25, r24
     d64:	d3 cf       	rjmp	.-90     	; 0xd0c <Modbus_mster_transaction+0x7e0>
     d66:	7a c0       	rjmp	.+244    	; 0xe5c <Modbus_mster_transaction+0x930>
     d68:	80 91 40 03 	lds	r24, 0x0340	; 0x800340 <g_mod1_write_qty>
     d6c:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <g_mod1_write_qty+0x1>
     d70:	e1 e0       	ldi	r30, 0x01	; 1
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	ec 0f       	add	r30, r28
     d76:	fd 1f       	adc	r31, r29
     d78:	eb 0d       	add	r30, r11
     d7a:	f1 1d       	adc	r31, r1
     d7c:	90 83       	st	Z, r25
     d7e:	21 e0       	ldi	r18, 0x01	; 1
     d80:	2b 0d       	add	r18, r11
     d82:	e1 e0       	ldi	r30, 0x01	; 1
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	ec 0f       	add	r30, r28
     d88:	fd 1f       	adc	r31, r29
     d8a:	e2 0f       	add	r30, r18
     d8c:	f1 1d       	adc	r31, r1
     d8e:	80 83       	st	Z, r24
     d90:	22 e0       	ldi	r18, 0x02	; 2
     d92:	2b 0d       	add	r18, r11
     d94:	e1 e0       	ldi	r30, 0x01	; 1
     d96:	f0 e0       	ldi	r31, 0x00	; 0
     d98:	ec 0f       	add	r30, r28
     d9a:	fd 1f       	adc	r31, r29
     d9c:	e2 0f       	add	r30, r18
     d9e:	f1 1d       	adc	r31, r1
     da0:	b3 e0       	ldi	r27, 0x03	; 3
     da2:	bb 0e       	add	r11, r27
     da4:	28 2f       	mov	r18, r24
     da6:	22 0f       	add	r18, r18
     da8:	20 83       	st	Z, r18
     daa:	ac 01       	movw	r20, r24
     dac:	55 27       	eor	r21, r21
     dae:	14 16       	cp	r1, r20
     db0:	15 06       	cpc	r1, r21
     db2:	0c f0       	brlt	.+2      	; 0xdb6 <Modbus_mster_transaction+0x88a>
     db4:	53 c0       	rjmp	.+166    	; 0xe5c <Modbus_mster_transaction+0x930>
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	88 0f       	add	r24, r24
     dbe:	99 1f       	adc	r25, r25
     dc0:	fc 01       	movw	r30, r24
     dc2:	e0 54       	subi	r30, 0x40	; 64
     dc4:	fd 4f       	sbci	r31, 0xFD	; 253
     dc6:	80 81       	ld	r24, Z
     dc8:	91 81       	ldd	r25, Z+1	; 0x01
     dca:	a1 e0       	ldi	r26, 0x01	; 1
     dcc:	b0 e0       	ldi	r27, 0x00	; 0
     dce:	ac 0f       	add	r26, r28
     dd0:	bd 1f       	adc	r27, r29
     dd2:	ab 0d       	add	r26, r11
     dd4:	b1 1d       	adc	r27, r1
     dd6:	9c 93       	st	X, r25
     dd8:	60 81       	ld	r22, Z
     dda:	71 81       	ldd	r23, Z+1	; 0x01
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	8b 0d       	add	r24, r11
     de0:	e1 e0       	ldi	r30, 0x01	; 1
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	ec 0f       	add	r30, r28
     de6:	fd 1f       	adc	r31, r29
     de8:	e8 0f       	add	r30, r24
     dea:	f1 1d       	adc	r31, r1
     dec:	b3 94       	inc	r11
     dee:	b3 94       	inc	r11
     df0:	60 83       	st	Z, r22
     df2:	2f 5f       	subi	r18, 0xFF	; 255
     df4:	82 2f       	mov	r24, r18
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	84 17       	cp	r24, r20
     dfa:	95 07       	cpc	r25, r21
     dfc:	fc f2       	brlt	.-66     	; 0xdbc <Modbus_mster_transaction+0x890>
     dfe:	2e c0       	rjmp	.+92     	; 0xe5c <Modbus_mster_transaction+0x930>
     e00:	e0 ec       	ldi	r30, 0xC0	; 192
     e02:	f2 e0       	ldi	r31, 0x02	; 2
     e04:	80 81       	ld	r24, Z
     e06:	91 81       	ldd	r25, Z+1	; 0x01
     e08:	a1 e0       	ldi	r26, 0x01	; 1
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	ac 0f       	add	r26, r28
     e0e:	bd 1f       	adc	r27, r29
     e10:	ab 0d       	add	r26, r11
     e12:	b1 1d       	adc	r27, r1
     e14:	9c 93       	st	X, r25
     e16:	80 81       	ld	r24, Z
     e18:	91 81       	ldd	r25, Z+1	; 0x01
     e1a:	91 e0       	ldi	r25, 0x01	; 1
     e1c:	9b 0d       	add	r25, r11
     e1e:	a1 e0       	ldi	r26, 0x01	; 1
     e20:	b0 e0       	ldi	r27, 0x00	; 0
     e22:	ac 0f       	add	r26, r28
     e24:	bd 1f       	adc	r27, r29
     e26:	a9 0f       	add	r26, r25
     e28:	b1 1d       	adc	r27, r1
     e2a:	8c 93       	st	X, r24
     e2c:	82 81       	ldd	r24, Z+2	; 0x02
     e2e:	93 81       	ldd	r25, Z+3	; 0x03
     e30:	82 e0       	ldi	r24, 0x02	; 2
     e32:	8b 0d       	add	r24, r11
     e34:	a1 e0       	ldi	r26, 0x01	; 1
     e36:	b0 e0       	ldi	r27, 0x00	; 0
     e38:	ac 0f       	add	r26, r28
     e3a:	bd 1f       	adc	r27, r29
     e3c:	a8 0f       	add	r26, r24
     e3e:	b1 1d       	adc	r27, r1
     e40:	9c 93       	st	X, r25
     e42:	22 81       	ldd	r18, Z+2	; 0x02
     e44:	33 81       	ldd	r19, Z+3	; 0x03
     e46:	83 e0       	ldi	r24, 0x03	; 3
     e48:	8b 0d       	add	r24, r11
     e4a:	e1 e0       	ldi	r30, 0x01	; 1
     e4c:	f0 e0       	ldi	r31, 0x00	; 0
     e4e:	ec 0f       	add	r30, r28
     e50:	fd 1f       	adc	r31, r29
     e52:	e8 0f       	add	r30, r24
     e54:	f1 1d       	adc	r31, r1
     e56:	84 e0       	ldi	r24, 0x04	; 4
     e58:	b8 0e       	add	r11, r24
     e5a:	20 83       	st	Z, r18
     e5c:	bb 20       	and	r11, r11
     e5e:	b9 f0       	breq	.+46     	; 0xe8e <Modbus_mster_transaction+0x962>
     e60:	8e 01       	movw	r16, r28
     e62:	0f 5f       	subi	r16, 0xFF	; 255
     e64:	1f 4f       	sbci	r17, 0xFF	; 255
     e66:	ee 24       	eor	r14, r14
     e68:	ea 94       	dec	r14
     e6a:	eb 0c       	add	r14, r11
     e6c:	f1 2c       	mov	r15, r1
     e6e:	9f ef       	ldi	r25, 0xFF	; 255
     e70:	e9 1a       	sub	r14, r25
     e72:	f9 0a       	sbc	r15, r25
     e74:	e0 0e       	add	r14, r16
     e76:	f1 1e       	adc	r15, r17
     e78:	8f ef       	ldi	r24, 0xFF	; 255
     e7a:	9f ef       	ldi	r25, 0xFF	; 255
     e7c:	d8 01       	movw	r26, r16
     e7e:	6d 91       	ld	r22, X+
     e80:	8d 01       	movw	r16, r26
     e82:	0e 94 47 1f 	call	0x3e8e	; 0x3e8e <crc16_update>
     e86:	0e 15       	cp	r16, r14
     e88:	1f 05       	cpc	r17, r15
     e8a:	c1 f7       	brne	.-16     	; 0xe7c <Modbus_mster_transaction+0x950>
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <Modbus_mster_transaction+0x966>
     e8e:	8f ef       	ldi	r24, 0xFF	; 255
     e90:	9f ef       	ldi	r25, 0xFF	; 255
     e92:	ee 24       	eor	r14, r14
     e94:	e3 94       	inc	r14
     e96:	eb 0c       	add	r14, r11
     e98:	e1 e0       	ldi	r30, 0x01	; 1
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	ec 0f       	add	r30, r28
     e9e:	fd 1f       	adc	r31, r29
     ea0:	eb 0d       	add	r30, r11
     ea2:	f1 1d       	adc	r31, r1
     ea4:	80 83       	st	Z, r24
     ea6:	b3 94       	inc	r11
     ea8:	b3 94       	inc	r11
     eaa:	e1 e0       	ldi	r30, 0x01	; 1
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	ec 0f       	add	r30, r28
     eb0:	fd 1f       	adc	r31, r29
     eb2:	ee 0d       	add	r30, r14
     eb4:	f1 1d       	adc	r31, r1
     eb6:	90 83       	st	Z, r25
     eb8:	e1 e0       	ldi	r30, 0x01	; 1
     eba:	f0 e0       	ldi	r31, 0x00	; 0
     ebc:	ec 0f       	add	r30, r28
     ebe:	fd 1f       	adc	r31, r29
     ec0:	eb 0d       	add	r30, r11
     ec2:	f1 1d       	adc	r31, r1
     ec4:	10 82       	st	Z, r1
     ec6:	e0 91 b3 02 	lds	r30, 0x02B3	; 0x8002b3 <g_mod1_Serial_getc>
     eca:	f0 91 b4 02 	lds	r31, 0x02B4	; 0x8002b4 <g_mod1_Serial_getc+0x1>
     ece:	19 95       	eicall
     ed0:	81 15       	cp	r24, r1
     ed2:	91 40       	sbci	r25, 0x01	; 1
     ed4:	c1 f7       	brne	.-16     	; 0xec6 <Modbus_mster_transaction+0x99a>
     ed6:	e0 91 b9 02 	lds	r30, 0x02B9	; 0x8002b9 <g_mod1_pre_transmission>
     eda:	f0 91 ba 02 	lds	r31, 0x02BA	; 0x8002ba <g_mod1_pre_transmission+0x1>
     ede:	30 97       	sbiw	r30, 0x00	; 0
     ee0:	09 f0       	breq	.+2      	; 0xee4 <Modbus_mster_transaction+0x9b8>
     ee2:	19 95       	eicall
     ee4:	bb 20       	and	r11, r11
     ee6:	a1 f0       	breq	.+40     	; 0xf10 <Modbus_mster_transaction+0x9e4>
     ee8:	8e 01       	movw	r16, r28
     eea:	0f 5f       	subi	r16, 0xFF	; 255
     eec:	1f 4f       	sbci	r17, 0xFF	; 255
     eee:	f1 2c       	mov	r15, r1
     ef0:	ef ef       	ldi	r30, 0xFF	; 255
     ef2:	ee 1a       	sub	r14, r30
     ef4:	fe 0a       	sbc	r15, r30
     ef6:	e0 0e       	add	r14, r16
     ef8:	f1 1e       	adc	r15, r17
     efa:	e0 91 b5 02 	lds	r30, 0x02B5	; 0x8002b5 <g_mod1_Serial_putc>
     efe:	f0 91 b6 02 	lds	r31, 0x02B6	; 0x8002b6 <g_mod1_Serial_putc+0x1>
     f02:	d8 01       	movw	r26, r16
     f04:	8d 91       	ld	r24, X+
     f06:	8d 01       	movw	r16, r26
     f08:	19 95       	eicall
     f0a:	e0 16       	cp	r14, r16
     f0c:	f1 06       	cpc	r15, r17
     f0e:	a9 f7       	brne	.-22     	; 0xefa <Modbus_mster_transaction+0x9ce>
     f10:	e0 91 af 02 	lds	r30, 0x02AF	; 0x8002af <g_mod1_Serial_flush>
     f14:	f0 91 b0 02 	lds	r31, 0x02B0	; 0x8002b0 <g_mod1_Serial_flush+0x1>
     f18:	19 95       	eicall
     f1a:	e0 91 b7 02 	lds	r30, 0x02B7	; 0x8002b7 <g_mod1_post_transmission>
     f1e:	f0 91 b8 02 	lds	r31, 0x02B8	; 0x8002b8 <g_mod1_post_transmission+0x1>
     f22:	30 97       	sbiw	r30, 0x00	; 0
     f24:	09 f0       	breq	.+2      	; 0xf28 <Modbus_mster_transaction+0x9fc>
     f26:	19 95       	eicall
     f28:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     f2c:	4b 01       	movw	r8, r22
     f2e:	5c 01       	movw	r10, r24
     f30:	08 e0       	ldi	r16, 0x08	; 8
     f32:	10 e0       	ldi	r17, 0x00	; 0
     f34:	ed 2c       	mov	r14, r13
     f36:	f1 2c       	mov	r15, r1
     f38:	e0 91 b1 02 	lds	r30, 0x02B1	; 0x8002b1 <g_mod1_Serial_available>
     f3c:	f0 91 b2 02 	lds	r31, 0x02B2	; 0x8002b2 <g_mod1_Serial_available+0x1>
     f40:	19 95       	eicall
     f42:	89 2b       	or	r24, r25
     f44:	91 f0       	breq	.+36     	; 0xf6a <Modbus_mster_transaction+0xa3e>
     f46:	dd 24       	eor	r13, r13
     f48:	d3 94       	inc	r13
     f4a:	d1 0e       	add	r13, r17
     f4c:	e0 91 b3 02 	lds	r30, 0x02B3	; 0x8002b3 <g_mod1_Serial_getc>
     f50:	f0 91 b4 02 	lds	r31, 0x02B4	; 0x8002b4 <g_mod1_Serial_getc+0x1>
     f54:	19 95       	eicall
     f56:	e1 e0       	ldi	r30, 0x01	; 1
     f58:	f0 e0       	ldi	r31, 0x00	; 0
     f5a:	ec 0f       	add	r30, r28
     f5c:	fd 1f       	adc	r31, r29
     f5e:	e1 0f       	add	r30, r17
     f60:	f1 1d       	adc	r31, r1
     f62:	80 83       	st	Z, r24
     f64:	01 50       	subi	r16, 0x01	; 1
     f66:	1d 2d       	mov	r17, r13
     f68:	07 c0       	rjmp	.+14     	; 0xf78 <Modbus_mster_transaction+0xa4c>
     f6a:	e0 91 bb 02 	lds	r30, 0x02BB	; 0x8002bb <g_mod1_idle>
     f6e:	f0 91 bc 02 	lds	r31, 0x02BC	; 0x8002bc <g_mod1_idle+0x1>
     f72:	30 97       	sbiw	r30, 0x00	; 0
     f74:	09 f0       	breq	.+2      	; 0xf78 <Modbus_mster_transaction+0xa4c>
     f76:	19 95       	eicall
     f78:	15 30       	cpi	r17, 0x05	; 5
     f7a:	51 f5       	brne	.+84     	; 0xfd0 <Modbus_mster_transaction+0xaa4>
     f7c:	99 81       	ldd	r25, Y+1	; 0x01
     f7e:	80 91 c8 03 	lds	r24, 0x03C8	; 0x8003c8 <g_mod1_slave>
     f82:	98 13       	cpse	r25, r24
     f84:	3c c1       	rjmp	.+632    	; 0x11fe <Modbus_mster_transaction+0xcd2>
     f86:	8a 81       	ldd	r24, Y+2	; 0x02
     f88:	28 2f       	mov	r18, r24
     f8a:	2f 77       	andi	r18, 0x7F	; 127
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	2e 15       	cp	r18, r14
     f90:	3f 05       	cpc	r19, r15
     f92:	09 f0       	breq	.+2      	; 0xf96 <Modbus_mster_transaction+0xa6a>
     f94:	36 c1       	rjmp	.+620    	; 0x1202 <Modbus_mster_transaction+0xcd6>
     f96:	88 23       	and	r24, r24
     f98:	24 f4       	brge	.+8      	; 0xfa2 <Modbus_mster_transaction+0xa76>
     f9a:	8b 81       	ldd	r24, Y+3	; 0x03
     f9c:	88 23       	and	r24, r24
     f9e:	b1 f1       	breq	.+108    	; 0x100c <Modbus_mster_transaction+0xae0>
     fa0:	bf c0       	rjmp	.+382    	; 0x1120 <Modbus_mster_transaction+0xbf4>
     fa2:	81 31       	cpi	r24, 0x11	; 17
     fa4:	48 f4       	brcc	.+18     	; 0xfb8 <Modbus_mster_transaction+0xa8c>
     fa6:	8f 30       	cpi	r24, 0x0F	; 15
     fa8:	70 f4       	brcc	.+28     	; 0xfc6 <Modbus_mster_transaction+0xa9a>
     faa:	81 30       	cpi	r24, 0x01	; 1
     fac:	88 f0       	brcs	.+34     	; 0xfd0 <Modbus_mster_transaction+0xaa4>
     fae:	85 30       	cpi	r24, 0x05	; 5
     fb0:	60 f0       	brcs	.+24     	; 0xfca <Modbus_mster_transaction+0xa9e>
     fb2:	87 30       	cpi	r24, 0x07	; 7
     fb4:	40 f0       	brcs	.+16     	; 0xfc6 <Modbus_mster_transaction+0xa9a>
     fb6:	0c c0       	rjmp	.+24     	; 0xfd0 <Modbus_mster_transaction+0xaa4>
     fb8:	87 31       	cpi	r24, 0x17	; 23
     fba:	39 f0       	breq	.+14     	; 0xfca <Modbus_mster_transaction+0xa9e>
     fbc:	8f 3f       	cpi	r24, 0xFF	; 255
     fbe:	19 f0       	breq	.+6      	; 0xfc6 <Modbus_mster_transaction+0xa9a>
     fc0:	86 31       	cpi	r24, 0x16	; 22
     fc2:	29 f0       	breq	.+10     	; 0xfce <Modbus_mster_transaction+0xaa2>
     fc4:	05 c0       	rjmp	.+10     	; 0xfd0 <Modbus_mster_transaction+0xaa4>
     fc6:	03 e0       	ldi	r16, 0x03	; 3
     fc8:	03 c0       	rjmp	.+6      	; 0xfd0 <Modbus_mster_transaction+0xaa4>
     fca:	0b 81       	ldd	r16, Y+3	; 0x03
     fcc:	01 c0       	rjmp	.+2      	; 0xfd0 <Modbus_mster_transaction+0xaa4>
     fce:	05 e0       	ldi	r16, 0x05	; 5
     fd0:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
     fd4:	dc 01       	movw	r26, r24
     fd6:	cb 01       	movw	r24, r22
     fd8:	88 19       	sub	r24, r8
     fda:	99 09       	sbc	r25, r9
     fdc:	aa 09       	sbc	r26, r10
     fde:	bb 09       	sbc	r27, r11
     fe0:	81 3d       	cpi	r24, 0xD1	; 209
     fe2:	97 40       	sbci	r25, 0x07	; 7
     fe4:	a1 05       	cpc	r26, r1
     fe6:	b1 05       	cpc	r27, r1
     fe8:	08 f0       	brcs	.+2      	; 0xfec <Modbus_mster_transaction+0xac0>
     fea:	fb c0       	rjmp	.+502    	; 0x11e2 <Modbus_mster_transaction+0xcb6>
     fec:	fe c0       	rjmp	.+508    	; 0x11ea <Modbus_mster_transaction+0xcbe>
     fee:	81 11       	cpse	r24, r1
     ff0:	97 c0       	rjmp	.+302    	; 0x1120 <Modbus_mster_transaction+0xbf4>
     ff2:	15 30       	cpi	r17, 0x05	; 5
     ff4:	08 f4       	brcc	.+2      	; 0xff8 <Modbus_mster_transaction+0xacc>
     ff6:	df c0       	rjmp	.+446    	; 0x11b6 <Modbus_mster_transaction+0xc8a>
     ff8:	01 2f       	mov	r16, r17
     ffa:	10 e0       	ldi	r17, 0x00	; 0
     ffc:	78 01       	movw	r14, r16
     ffe:	f2 e0       	ldi	r31, 0x02	; 2
    1000:	ef 1a       	sub	r14, r31
    1002:	f1 08       	sbc	r15, r1
    1004:	1e 14       	cp	r1, r14
    1006:	1f 04       	cpc	r1, r15
    1008:	44 f0       	brlt	.+16     	; 0x101a <Modbus_mster_transaction+0xaee>
    100a:	c4 c0       	rjmp	.+392    	; 0x1194 <Modbus_mster_transaction+0xc68>
    100c:	0f 2e       	mov	r0, r31
    100e:	f3 e0       	ldi	r31, 0x03	; 3
    1010:	ef 2e       	mov	r14, r31
    1012:	f1 2c       	mov	r15, r1
    1014:	f0 2d       	mov	r31, r0
    1016:	05 e0       	ldi	r16, 0x05	; 5
    1018:	10 e0       	ldi	r17, 0x00	; 0
    101a:	20 e0       	ldi	r18, 0x00	; 0
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	8f ef       	ldi	r24, 0xFF	; 255
    1020:	9f ef       	ldi	r25, 0xFF	; 255
    1022:	d1 2c       	mov	r13, r1
    1024:	e1 e0       	ldi	r30, 0x01	; 1
    1026:	f0 e0       	ldi	r31, 0x00	; 0
    1028:	ec 0f       	add	r30, r28
    102a:	fd 1f       	adc	r31, r29
    102c:	e2 0f       	add	r30, r18
    102e:	f3 1f       	adc	r31, r19
    1030:	60 81       	ld	r22, Z
    1032:	0e 94 47 1f 	call	0x3e8e	; 0x3e8e <crc16_update>
    1036:	d3 94       	inc	r13
    1038:	2d 2d       	mov	r18, r13
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	2e 15       	cp	r18, r14
    103e:	3f 05       	cpc	r19, r15
    1040:	8c f3       	brlt	.-30     	; 0x1024 <Modbus_mster_transaction+0xaf8>
    1042:	aa c0       	rjmp	.+340    	; 0x1198 <Modbus_mster_transaction+0xc6c>
    1044:	89 2f       	mov	r24, r25
    1046:	99 27       	eor	r25, r25
    1048:	fe 01       	movw	r30, r28
    104a:	e0 0f       	add	r30, r16
    104c:	f1 1f       	adc	r31, r17
    104e:	20 81       	ld	r18, Z
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	82 17       	cp	r24, r18
    1054:	93 07       	cpc	r25, r19
    1056:	09 f0       	breq	.+2      	; 0x105a <Modbus_mster_transaction+0xb2e>
    1058:	ac c0       	rjmp	.+344    	; 0x11b2 <Modbus_mster_transaction+0xc86>
    105a:	ad c0       	rjmp	.+346    	; 0x11b6 <Modbus_mster_transaction+0xc8a>
    105c:	8b 81       	ldd	r24, Y+3	; 0x03
    105e:	86 95       	lsr	r24
    1060:	e1 f5       	brne	.+120    	; 0x10da <Modbus_mster_transaction+0xbae>
    1062:	5e c0       	rjmp	.+188    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    1064:	6b 81       	ldd	r22, Y+3	; 0x03
    1066:	86 2f       	mov	r24, r22
    1068:	86 95       	lsr	r24
    106a:	09 f4       	brne	.+2      	; 0x106e <Modbus_mster_transaction+0xb42>
    106c:	b2 c0       	rjmp	.+356    	; 0x11d2 <Modbus_mster_transaction+0xca6>
    106e:	fe 01       	movw	r30, r28
    1070:	31 96       	adiw	r30, 0x01	; 1
    1072:	40 e0       	ldi	r20, 0x00	; 0
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	90 34       	cpi	r25, 0x40	; 64
    107a:	70 f4       	brcc	.+28     	; 0x1098 <Modbus_mster_transaction+0xb6c>
    107c:	24 81       	ldd	r18, Z+4	; 0x04
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	32 2f       	mov	r19, r18
    1082:	22 27       	eor	r18, r18
    1084:	73 81       	ldd	r23, Z+3	; 0x03
    1086:	27 2b       	or	r18, r23
    1088:	da 01       	movw	r26, r20
    108a:	aa 0f       	add	r26, r26
    108c:	bb 1f       	adc	r27, r27
    108e:	ac 5b       	subi	r26, 0xBC	; 188
    1090:	bc 4f       	sbci	r27, 0xFC	; 252
    1092:	11 96       	adiw	r26, 0x01	; 1
    1094:	3c 93       	st	X, r19
    1096:	2e 93       	st	-X, r18
    1098:	9f 5f       	subi	r25, 0xFF	; 255
    109a:	4f 5f       	subi	r20, 0xFF	; 255
    109c:	5f 4f       	sbci	r21, 0xFF	; 255
    109e:	32 96       	adiw	r30, 0x02	; 2
    10a0:	98 13       	cpse	r25, r24
    10a2:	ea cf       	rjmp	.-44     	; 0x1078 <Modbus_mster_transaction+0xb4c>
    10a4:	9f ef       	ldi	r25, 0xFF	; 255
    10a6:	98 0f       	add	r25, r24
    10a8:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <g_mod1_response_buffer_length>
    10ac:	60 ff       	sbrs	r22, 0
    10ae:	35 c0       	rjmp	.+106    	; 0x111a <Modbus_mster_transaction+0xbee>
    10b0:	80 34       	cpi	r24, 0x40	; 64
    10b2:	70 f4       	brcc	.+28     	; 0x10d0 <Modbus_mster_transaction+0xba4>
    10b4:	28 2f       	mov	r18, r24
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	22 0f       	add	r18, r18
    10ba:	33 1f       	adc	r19, r19
    10bc:	fe 01       	movw	r30, r28
    10be:	e2 0f       	add	r30, r18
    10c0:	f3 1f       	adc	r31, r19
    10c2:	44 81       	ldd	r20, Z+4	; 0x04
    10c4:	50 e0       	ldi	r21, 0x00	; 0
    10c6:	f9 01       	movw	r30, r18
    10c8:	ec 5b       	subi	r30, 0xBC	; 188
    10ca:	fc 4f       	sbci	r31, 0xFC	; 252
    10cc:	51 83       	std	Z+1, r21	; 0x01
    10ce:	40 83       	st	Z, r20
    10d0:	8f 5f       	subi	r24, 0xFF	; 255
    10d2:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <g_mod1_response_buffer_length>
    10d6:	80 e0       	ldi	r24, 0x00	; 0
    10d8:	23 c0       	rjmp	.+70     	; 0x1120 <Modbus_mster_transaction+0xbf4>
    10da:	fe 01       	movw	r30, r28
    10dc:	31 96       	adiw	r30, 0x01	; 1
    10de:	40 e0       	ldi	r20, 0x00	; 0
    10e0:	50 e0       	ldi	r21, 0x00	; 0
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	90 34       	cpi	r25, 0x40	; 64
    10e6:	70 f4       	brcc	.+28     	; 0x1104 <Modbus_mster_transaction+0xbd8>
    10e8:	23 81       	ldd	r18, Z+3	; 0x03
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	32 2f       	mov	r19, r18
    10ee:	22 27       	eor	r18, r18
    10f0:	64 81       	ldd	r22, Z+4	; 0x04
    10f2:	26 2b       	or	r18, r22
    10f4:	da 01       	movw	r26, r20
    10f6:	aa 0f       	add	r26, r26
    10f8:	bb 1f       	adc	r27, r27
    10fa:	ac 5b       	subi	r26, 0xBC	; 188
    10fc:	bc 4f       	sbci	r27, 0xFC	; 252
    10fe:	11 96       	adiw	r26, 0x01	; 1
    1100:	3c 93       	st	X, r19
    1102:	2e 93       	st	-X, r18
    1104:	9f 5f       	subi	r25, 0xFF	; 255
    1106:	4f 5f       	subi	r20, 0xFF	; 255
    1108:	5f 4f       	sbci	r21, 0xFF	; 255
    110a:	32 96       	adiw	r30, 0x02	; 2
    110c:	98 13       	cpse	r25, r24
    110e:	ea cf       	rjmp	.-44     	; 0x10e4 <Modbus_mster_transaction+0xbb8>
    1110:	81 50       	subi	r24, 0x01	; 1
    1112:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <g_mod1_response_buffer_length>
    1116:	80 e0       	ldi	r24, 0x00	; 0
    1118:	03 c0       	rjmp	.+6      	; 0x1120 <Modbus_mster_transaction+0xbf4>
    111a:	80 e0       	ldi	r24, 0x00	; 0
    111c:	01 c0       	rjmp	.+2      	; 0x1120 <Modbus_mster_transaction+0xbf4>
    111e:	80 e0       	ldi	r24, 0x00	; 0
    1120:	10 92 bf 02 	sts	0x02BF, r1	; 0x8002bf <g_mod1_transmit_buffer_index>
    1124:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <g_mod1_response_buffer_index>
    1128:	70 c0       	rjmp	.+224    	; 0x120a <Modbus_mster_transaction+0xcde>
    112a:	84 ee       	ldi	r24, 0xE4	; 228
    112c:	6e c0       	rjmp	.+220    	; 0x120a <Modbus_mster_transaction+0xcde>
    112e:	03 e0       	ldi	r16, 0x03	; 3
    1130:	0e 94 68 1f 	call	0x3ed0	; 0x3ed0 <Get_millis>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	88 19       	sub	r24, r8
    113a:	99 09       	sbc	r25, r9
    113c:	aa 09       	sbc	r26, r10
    113e:	bb 09       	sbc	r27, r11
    1140:	81 3d       	cpi	r24, 0xD1	; 209
    1142:	97 40       	sbci	r25, 0x07	; 7
    1144:	a1 05       	cpc	r26, r1
    1146:	b1 05       	cpc	r27, r1
    1148:	08 f4       	brcc	.+2      	; 0x114c <Modbus_mster_transaction+0xc20>
    114a:	01 cc       	rjmp	.-2046   	; 0x94e <Modbus_mster_transaction+0x422>
    114c:	5b cc       	rjmp	.-1866   	; 0xa04 <Modbus_mster_transaction+0x4d8>
    114e:	8f ef       	ldi	r24, 0xFF	; 255
    1150:	9f ef       	ldi	r25, 0xFF	; 255
    1152:	fe 01       	movw	r30, r28
    1154:	ee 0d       	add	r30, r14
    1156:	ff 1d       	adc	r31, r15
    1158:	21 81       	ldd	r18, Z+1	; 0x01
    115a:	30 e0       	ldi	r19, 0x00	; 0
    115c:	ac 01       	movw	r20, r24
    115e:	55 27       	eor	r21, r21
    1160:	42 17       	cp	r20, r18
    1162:	53 07       	cpc	r21, r19
    1164:	09 f4       	brne	.+2      	; 0x1168 <Modbus_mster_transaction+0xc3c>
    1166:	84 cc       	rjmp	.-1784   	; 0xa70 <Modbus_mster_transaction+0x544>
    1168:	83 ee       	ldi	r24, 0xE3	; 227
    116a:	f1 cc       	rjmp	.-1566   	; 0xb4e <Modbus_mster_transaction+0x622>
    116c:	83 ee       	ldi	r24, 0xE3	; 227
    116e:	ef cc       	rjmp	.-1570   	; 0xb4e <Modbus_mster_transaction+0x622>
    1170:	8a 81       	ldd	r24, Y+2	; 0x02
    1172:	85 30       	cpi	r24, 0x05	; 5
    1174:	38 f4       	brcc	.+14     	; 0x1184 <Modbus_mster_transaction+0xc58>
    1176:	83 30       	cpi	r24, 0x03	; 3
    1178:	08 f0       	brcs	.+2      	; 0x117c <Modbus_mster_transaction+0xc50>
    117a:	86 cc       	rjmp	.-1780   	; 0xa88 <Modbus_mster_transaction+0x55c>
    117c:	81 30       	cpi	r24, 0x01	; 1
    117e:	08 f0       	brcs	.+2      	; 0x1182 <Modbus_mster_transaction+0xc56>
    1180:	88 cc       	rjmp	.-1776   	; 0xa92 <Modbus_mster_transaction+0x566>
    1182:	e4 cc       	rjmp	.-1592   	; 0xb4c <Modbus_mster_transaction+0x620>
    1184:	87 31       	cpi	r24, 0x17	; 23
    1186:	09 f4       	brne	.+2      	; 0x118a <Modbus_mster_transaction+0xc5e>
    1188:	7f cc       	rjmp	.-1794   	; 0xa88 <Modbus_mster_transaction+0x55c>
    118a:	e0 cc       	rjmp	.-1600   	; 0xb4c <Modbus_mster_transaction+0x620>
    118c:	70 fd       	sbrc	r23, 0
    118e:	a9 cc       	rjmp	.-1710   	; 0xae2 <Modbus_mster_transaction+0x5b6>
    1190:	80 e0       	ldi	r24, 0x00	; 0
    1192:	dd cc       	rjmp	.-1606   	; 0xb4e <Modbus_mster_transaction+0x622>
    1194:	8f ef       	ldi	r24, 0xFF	; 255
    1196:	9f ef       	ldi	r25, 0xFF	; 255
    1198:	fe 01       	movw	r30, r28
    119a:	ee 0d       	add	r30, r14
    119c:	ff 1d       	adc	r31, r15
    119e:	21 81       	ldd	r18, Z+1	; 0x01
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	ac 01       	movw	r20, r24
    11a4:	55 27       	eor	r21, r21
    11a6:	42 17       	cp	r20, r18
    11a8:	53 07       	cpc	r21, r19
    11aa:	09 f4       	brne	.+2      	; 0x11ae <Modbus_mster_transaction+0xc82>
    11ac:	4b cf       	rjmp	.-362    	; 0x1044 <Modbus_mster_transaction+0xb18>
    11ae:	83 ee       	ldi	r24, 0xE3	; 227
    11b0:	b7 cf       	rjmp	.-146    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    11b2:	83 ee       	ldi	r24, 0xE3	; 227
    11b4:	b5 cf       	rjmp	.-150    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    11b6:	8a 81       	ldd	r24, Y+2	; 0x02
    11b8:	85 30       	cpi	r24, 0x05	; 5
    11ba:	38 f4       	brcc	.+14     	; 0x11ca <Modbus_mster_transaction+0xc9e>
    11bc:	83 30       	cpi	r24, 0x03	; 3
    11be:	08 f0       	brcs	.+2      	; 0x11c2 <Modbus_mster_transaction+0xc96>
    11c0:	4d cf       	rjmp	.-358    	; 0x105c <Modbus_mster_transaction+0xb30>
    11c2:	81 30       	cpi	r24, 0x01	; 1
    11c4:	08 f0       	brcs	.+2      	; 0x11c8 <Modbus_mster_transaction+0xc9c>
    11c6:	4e cf       	rjmp	.-356    	; 0x1064 <Modbus_mster_transaction+0xb38>
    11c8:	aa cf       	rjmp	.-172    	; 0x111e <Modbus_mster_transaction+0xbf2>
    11ca:	87 31       	cpi	r24, 0x17	; 23
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <Modbus_mster_transaction+0xca4>
    11ce:	46 cf       	rjmp	.-372    	; 0x105c <Modbus_mster_transaction+0xb30>
    11d0:	a6 cf       	rjmp	.-180    	; 0x111e <Modbus_mster_transaction+0xbf2>
    11d2:	60 fd       	sbrc	r22, 0
    11d4:	6f cf       	rjmp	.-290    	; 0x10b4 <Modbus_mster_transaction+0xb88>
    11d6:	80 e0       	ldi	r24, 0x00	; 0
    11d8:	a3 cf       	rjmp	.-186    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    11da:	01 11       	cpse	r16, r1
    11dc:	b8 cb       	rjmp	.-2192   	; 0x94e <Modbus_mster_transaction+0x422>
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	19 cc       	rjmp	.-1998   	; 0xa14 <Modbus_mster_transaction+0x4e8>
    11e2:	01 11       	cpse	r16, r1
    11e4:	10 c0       	rjmp	.+32     	; 0x1206 <Modbus_mster_transaction+0xcda>
    11e6:	82 ee       	ldi	r24, 0xE2	; 226
    11e8:	02 cf       	rjmp	.-508    	; 0xfee <Modbus_mster_transaction+0xac2>
    11ea:	01 11       	cpse	r16, r1
    11ec:	a5 ce       	rjmp	.-694    	; 0xf38 <Modbus_mster_transaction+0xa0c>
    11ee:	80 e0       	ldi	r24, 0x00	; 0
    11f0:	fe ce       	rjmp	.-516    	; 0xfee <Modbus_mster_transaction+0xac2>
    11f2:	80 ee       	ldi	r24, 0xE0	; 224
    11f4:	ac cc       	rjmp	.-1704   	; 0xb4e <Modbus_mster_transaction+0x622>
    11f6:	81 ee       	ldi	r24, 0xE1	; 225
    11f8:	aa cc       	rjmp	.-1708   	; 0xb4e <Modbus_mster_transaction+0x622>
    11fa:	82 ee       	ldi	r24, 0xE2	; 226
    11fc:	a8 cc       	rjmp	.-1712   	; 0xb4e <Modbus_mster_transaction+0x622>
    11fe:	80 ee       	ldi	r24, 0xE0	; 224
    1200:	8f cf       	rjmp	.-226    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    1202:	81 ee       	ldi	r24, 0xE1	; 225
    1204:	8d cf       	rjmp	.-230    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    1206:	82 ee       	ldi	r24, 0xE2	; 226
    1208:	8b cf       	rjmp	.-234    	; 0x1120 <Modbus_mster_transaction+0xbf4>
    120a:	d3 95       	inc	r29
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	de bf       	out	0x3e, r29	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	cd bf       	out	0x3d, r28	; 61
    1216:	df 91       	pop	r29
    1218:	cf 91       	pop	r28
    121a:	1f 91       	pop	r17
    121c:	0f 91       	pop	r16
    121e:	ff 90       	pop	r15
    1220:	ef 90       	pop	r14
    1222:	df 90       	pop	r13
    1224:	bf 90       	pop	r11
    1226:	af 90       	pop	r10
    1228:	9f 90       	pop	r9
    122a:	8f 90       	pop	r8
    122c:	08 95       	ret

0000122e <Modbus_init>:
    122e:	fb 01       	movw	r30, r22
    1230:	81 11       	cpse	r24, r1
    1232:	86 c0       	rjmp	.+268    	; 0x1340 <Modbus_init+0x112>
    1234:	80 81       	ld	r24, Z
    1236:	80 93 e2 04 	sts	0x04E2, r24	; 0x8004e2 <g_mod0_slave>
    123a:	41 81       	ldd	r20, Z+1	; 0x01
    123c:	62 81       	ldd	r22, Z+2	; 0x02
    123e:	73 81       	ldd	r23, Z+3	; 0x03
    1240:	84 81       	ldd	r24, Z+4	; 0x04
    1242:	95 81       	ldd	r25, Z+5	; 0x05
    1244:	26 81       	ldd	r18, Z+6	; 0x06
    1246:	37 81       	ldd	r19, Z+7	; 0x07
    1248:	30 93 d4 03 	sts	0x03D4, r19	; 0x8003d4 <g_mod0_pre_transmission+0x1>
    124c:	20 93 d3 03 	sts	0x03D3, r18	; 0x8003d3 <g_mod0_pre_transmission>
    1250:	20 85       	ldd	r18, Z+8	; 0x08
    1252:	31 85       	ldd	r19, Z+9	; 0x09
    1254:	30 93 d2 03 	sts	0x03D2, r19	; 0x8003d2 <g_mod0_post_transmission+0x1>
    1258:	20 93 d1 03 	sts	0x03D1, r18	; 0x8003d1 <g_mod0_post_transmission>
    125c:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <g_mod0_idle+0x1>
    1260:	10 92 d5 03 	sts	0x03D5, r1	; 0x8003d5 <g_mod0_idle>
    1264:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <g_mod0_response_buffer_index>
    1268:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <g_mod0_response_buffer_length>
    126c:	41 30       	cpi	r20, 0x01	; 1
    126e:	09 f5       	brne	.+66     	; 0x12b2 <Modbus_init+0x84>
    1270:	20 91 ae 02 	lds	r18, 0x02AE	; 0x8002ae <UART1_used.1979>
    1274:	21 11       	cpse	r18, r1
    1276:	c8 c0       	rjmp	.+400    	; 0x1408 <Modbus_init+0x1da>
    1278:	21 e0       	ldi	r18, 0x01	; 1
    127a:	20 93 ae 02 	sts	0x02AE, r18	; 0x8002ae <UART1_used.1979>
    127e:	eb d3       	rcall	.+2006   	; 0x1a56 <UART1_init>
    1280:	89 eb       	ldi	r24, 0xB9	; 185
    1282:	9d e0       	ldi	r25, 0x0D	; 13
    1284:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <g_mod0_Serial_available+0x1>
    1288:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <g_mod0_Serial_available>
    128c:	87 ec       	ldi	r24, 0xC7	; 199
    128e:	9d e0       	ldi	r25, 0x0D	; 13
    1290:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <g_mod0_Serial_flush+0x1>
    1294:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <g_mod0_Serial_flush>
    1298:	80 e8       	ldi	r24, 0x80	; 128
    129a:	9d e0       	ldi	r25, 0x0D	; 13
    129c:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <g_mod0_Serial_getc+0x1>
    12a0:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <g_mod0_Serial_getc>
    12a4:	80 ea       	ldi	r24, 0xA0	; 160
    12a6:	9d e0       	ldi	r25, 0x0D	; 13
    12a8:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <g_mod0_Serial_putc+0x1>
    12ac:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <g_mod0_Serial_putc>
    12b0:	08 95       	ret
    12b2:	42 30       	cpi	r20, 0x02	; 2
    12b4:	09 f5       	brne	.+66     	; 0x12f8 <Modbus_init+0xca>
    12b6:	20 91 ad 02 	lds	r18, 0x02AD	; 0x8002ad <UART2_used.1980>
    12ba:	21 11       	cpse	r18, r1
    12bc:	a5 c0       	rjmp	.+330    	; 0x1408 <Modbus_init+0x1da>
    12be:	21 e0       	ldi	r18, 0x01	; 1
    12c0:	20 93 ad 02 	sts	0x02AD, r18	; 0x8002ad <UART2_used.1980>
    12c4:	d7 d4       	rcall	.+2478   	; 0x1c74 <UART2_init>
    12c6:	85 ec       	ldi	r24, 0xC5	; 197
    12c8:	9e e0       	ldi	r25, 0x0E	; 14
    12ca:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <g_mod0_Serial_available+0x1>
    12ce:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <g_mod0_Serial_available>
    12d2:	83 ed       	ldi	r24, 0xD3	; 211
    12d4:	9e e0       	ldi	r25, 0x0E	; 14
    12d6:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <g_mod0_Serial_flush+0x1>
    12da:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <g_mod0_Serial_flush>
    12de:	8f e8       	ldi	r24, 0x8F	; 143
    12e0:	9e e0       	ldi	r25, 0x0E	; 14
    12e2:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <g_mod0_Serial_getc+0x1>
    12e6:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <g_mod0_Serial_getc>
    12ea:	8c ea       	ldi	r24, 0xAC	; 172
    12ec:	9e e0       	ldi	r25, 0x0E	; 14
    12ee:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <g_mod0_Serial_putc+0x1>
    12f2:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <g_mod0_Serial_putc>
    12f6:	08 95       	ret
    12f8:	43 30       	cpi	r20, 0x03	; 3
    12fa:	09 f0       	breq	.+2      	; 0x12fe <Modbus_init+0xd0>
    12fc:	85 c0       	rjmp	.+266    	; 0x1408 <Modbus_init+0x1da>
    12fe:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <UART3_used.1981>
    1302:	21 11       	cpse	r18, r1
    1304:	81 c0       	rjmp	.+258    	; 0x1408 <Modbus_init+0x1da>
    1306:	21 e0       	ldi	r18, 0x01	; 1
    1308:	20 93 ac 02 	sts	0x02AC, r18	; 0x8002ac <UART3_used.1981>
    130c:	bf d5       	rcall	.+2942   	; 0x1e8c <UART3_init>
    130e:	81 ed       	ldi	r24, 0xD1	; 209
    1310:	9f e0       	ldi	r25, 0x0F	; 15
    1312:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <g_mod0_Serial_available+0x1>
    1316:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <g_mod0_Serial_available>
    131a:	8f ed       	ldi	r24, 0xDF	; 223
    131c:	9f e0       	ldi	r25, 0x0F	; 15
    131e:	90 93 cc 03 	sts	0x03CC, r25	; 0x8003cc <g_mod0_Serial_flush+0x1>
    1322:	80 93 cb 03 	sts	0x03CB, r24	; 0x8003cb <g_mod0_Serial_flush>
    1326:	8b e9       	ldi	r24, 0x9B	; 155
    1328:	9f e0       	ldi	r25, 0x0F	; 15
    132a:	90 93 ce 03 	sts	0x03CE, r25	; 0x8003ce <g_mod0_Serial_getc+0x1>
    132e:	80 93 cd 03 	sts	0x03CD, r24	; 0x8003cd <g_mod0_Serial_getc>
    1332:	88 eb       	ldi	r24, 0xB8	; 184
    1334:	9f e0       	ldi	r25, 0x0F	; 15
    1336:	90 93 d0 03 	sts	0x03D0, r25	; 0x8003d0 <g_mod0_Serial_putc+0x1>
    133a:	80 93 cf 03 	sts	0x03CF, r24	; 0x8003cf <g_mod0_Serial_putc>
    133e:	08 95       	ret
    1340:	81 30       	cpi	r24, 0x01	; 1
    1342:	09 f0       	breq	.+2      	; 0x1346 <Modbus_init+0x118>
    1344:	61 c0       	rjmp	.+194    	; 0x1408 <Modbus_init+0x1da>
    1346:	80 81       	ld	r24, Z
    1348:	80 93 c8 03 	sts	0x03C8, r24	; 0x8003c8 <g_mod1_slave>
    134c:	41 81       	ldd	r20, Z+1	; 0x01
    134e:	62 81       	ldd	r22, Z+2	; 0x02
    1350:	73 81       	ldd	r23, Z+3	; 0x03
    1352:	84 81       	ldd	r24, Z+4	; 0x04
    1354:	95 81       	ldd	r25, Z+5	; 0x05
    1356:	26 81       	ldd	r18, Z+6	; 0x06
    1358:	37 81       	ldd	r19, Z+7	; 0x07
    135a:	30 93 ba 02 	sts	0x02BA, r19	; 0x8002ba <g_mod1_pre_transmission+0x1>
    135e:	20 93 b9 02 	sts	0x02B9, r18	; 0x8002b9 <g_mod1_pre_transmission>
    1362:	20 85       	ldd	r18, Z+8	; 0x08
    1364:	31 85       	ldd	r19, Z+9	; 0x09
    1366:	30 93 b8 02 	sts	0x02B8, r19	; 0x8002b8 <g_mod1_post_transmission+0x1>
    136a:	20 93 b7 02 	sts	0x02B7, r18	; 0x8002b7 <g_mod1_post_transmission>
    136e:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <g_mod1_idle+0x1>
    1372:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <g_mod1_idle>
    1376:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <g_mod1_response_buffer_index>
    137a:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <g_mod1_response_buffer_length>
    137e:	41 30       	cpi	r20, 0x01	; 1
    1380:	09 f5       	brne	.+66     	; 0x13c4 <Modbus_init+0x196>
    1382:	20 91 ae 02 	lds	r18, 0x02AE	; 0x8002ae <UART1_used.1979>
    1386:	21 11       	cpse	r18, r1
    1388:	3f c0       	rjmp	.+126    	; 0x1408 <Modbus_init+0x1da>
    138a:	21 e0       	ldi	r18, 0x01	; 1
    138c:	20 93 ae 02 	sts	0x02AE, r18	; 0x8002ae <UART1_used.1979>
    1390:	62 d3       	rcall	.+1732   	; 0x1a56 <UART1_init>
    1392:	89 eb       	ldi	r24, 0xB9	; 185
    1394:	9d e0       	ldi	r25, 0x0D	; 13
    1396:	90 93 b2 02 	sts	0x02B2, r25	; 0x8002b2 <g_mod1_Serial_available+0x1>
    139a:	80 93 b1 02 	sts	0x02B1, r24	; 0x8002b1 <g_mod1_Serial_available>
    139e:	87 ec       	ldi	r24, 0xC7	; 199
    13a0:	9d e0       	ldi	r25, 0x0D	; 13
    13a2:	90 93 b0 02 	sts	0x02B0, r25	; 0x8002b0 <g_mod1_Serial_flush+0x1>
    13a6:	80 93 af 02 	sts	0x02AF, r24	; 0x8002af <g_mod1_Serial_flush>
    13aa:	80 e8       	ldi	r24, 0x80	; 128
    13ac:	9d e0       	ldi	r25, 0x0D	; 13
    13ae:	90 93 b4 02 	sts	0x02B4, r25	; 0x8002b4 <g_mod1_Serial_getc+0x1>
    13b2:	80 93 b3 02 	sts	0x02B3, r24	; 0x8002b3 <g_mod1_Serial_getc>
    13b6:	80 ea       	ldi	r24, 0xA0	; 160
    13b8:	9d e0       	ldi	r25, 0x0D	; 13
    13ba:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <g_mod1_Serial_putc+0x1>
    13be:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <g_mod1_Serial_putc>
    13c2:	08 95       	ret
    13c4:	42 30       	cpi	r20, 0x02	; 2
    13c6:	01 f5       	brne	.+64     	; 0x1408 <Modbus_init+0x1da>
    13c8:	20 91 ad 02 	lds	r18, 0x02AD	; 0x8002ad <UART2_used.1980>
    13cc:	21 11       	cpse	r18, r1
    13ce:	1c c0       	rjmp	.+56     	; 0x1408 <Modbus_init+0x1da>
    13d0:	21 e0       	ldi	r18, 0x01	; 1
    13d2:	20 93 ad 02 	sts	0x02AD, r18	; 0x8002ad <UART2_used.1980>
    13d6:	4e d4       	rcall	.+2204   	; 0x1c74 <UART2_init>
    13d8:	85 ec       	ldi	r24, 0xC5	; 197
    13da:	9e e0       	ldi	r25, 0x0E	; 14
    13dc:	90 93 b2 02 	sts	0x02B2, r25	; 0x8002b2 <g_mod1_Serial_available+0x1>
    13e0:	80 93 b1 02 	sts	0x02B1, r24	; 0x8002b1 <g_mod1_Serial_available>
    13e4:	83 ed       	ldi	r24, 0xD3	; 211
    13e6:	9e e0       	ldi	r25, 0x0E	; 14
    13e8:	90 93 b0 02 	sts	0x02B0, r25	; 0x8002b0 <g_mod1_Serial_flush+0x1>
    13ec:	80 93 af 02 	sts	0x02AF, r24	; 0x8002af <g_mod1_Serial_flush>
    13f0:	8f e8       	ldi	r24, 0x8F	; 143
    13f2:	9e e0       	ldi	r25, 0x0E	; 14
    13f4:	90 93 b4 02 	sts	0x02B4, r25	; 0x8002b4 <g_mod1_Serial_getc+0x1>
    13f8:	80 93 b3 02 	sts	0x02B3, r24	; 0x8002b3 <g_mod1_Serial_getc>
    13fc:	8c ea       	ldi	r24, 0xAC	; 172
    13fe:	9e e0       	ldi	r25, 0x0E	; 14
    1400:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <g_mod1_Serial_putc+0x1>
    1404:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <g_mod1_Serial_putc>
    1408:	08 95       	ret

0000140a <Modbus_Get_response_buffer>:
    140a:	81 11       	cpse	r24, r1
    140c:	0b c0       	rjmp	.+22     	; 0x1424 <Modbus_Get_response_buffer+0x1a>
    140e:	60 34       	cpi	r22, 0x40	; 64
    1410:	b0 f4       	brcc	.+44     	; 0x143e <Modbus_Get_response_buffer+0x34>
    1412:	e6 2f       	mov	r30, r22
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	ee 0f       	add	r30, r30
    1418:	ff 1f       	adc	r31, r31
    141a:	e2 5a       	subi	r30, 0xA2	; 162
    141c:	fb 4f       	sbci	r31, 0xFB	; 251
    141e:	80 81       	ld	r24, Z
    1420:	91 81       	ldd	r25, Z+1	; 0x01
    1422:	08 95       	ret
    1424:	81 30       	cpi	r24, 0x01	; 1
    1426:	71 f4       	brne	.+28     	; 0x1444 <Modbus_Get_response_buffer+0x3a>
    1428:	60 34       	cpi	r22, 0x40	; 64
    142a:	78 f4       	brcc	.+30     	; 0x144a <Modbus_Get_response_buffer+0x40>
    142c:	e6 2f       	mov	r30, r22
    142e:	f0 e0       	ldi	r31, 0x00	; 0
    1430:	ee 0f       	add	r30, r30
    1432:	ff 1f       	adc	r31, r31
    1434:	ec 5b       	subi	r30, 0xBC	; 188
    1436:	fc 4f       	sbci	r31, 0xFC	; 252
    1438:	80 81       	ld	r24, Z
    143a:	91 81       	ldd	r25, Z+1	; 0x01
    143c:	08 95       	ret
    143e:	8f ef       	ldi	r24, 0xFF	; 255
    1440:	9f ef       	ldi	r25, 0xFF	; 255
    1442:	08 95       	ret
    1444:	8f ef       	ldi	r24, 0xFF	; 255
    1446:	9f ef       	ldi	r25, 0xFF	; 255
    1448:	08 95       	ret
    144a:	8f ef       	ldi	r24, 0xFF	; 255
    144c:	9f ef       	ldi	r25, 0xFF	; 255
    144e:	08 95       	ret

00001450 <Modbus_Set_transmit_buffer>:
    1450:	81 11       	cpse	r24, r1
    1452:	0b c0       	rjmp	.+22     	; 0x146a <Modbus_Set_transmit_buffer+0x1a>
    1454:	60 34       	cpi	r22, 0x40	; 64
    1456:	b8 f4       	brcc	.+46     	; 0x1486 <Modbus_Set_transmit_buffer+0x36>
    1458:	e6 2f       	mov	r30, r22
    145a:	f0 e0       	ldi	r31, 0x00	; 0
    145c:	ee 0f       	add	r30, r30
    145e:	ff 1f       	adc	r31, r31
    1460:	e6 52       	subi	r30, 0x26	; 38
    1462:	fc 4f       	sbci	r31, 0xFC	; 252
    1464:	51 83       	std	Z+1, r21	; 0x01
    1466:	40 83       	st	Z, r20
    1468:	08 95       	ret
    146a:	81 30       	cpi	r24, 0x01	; 1
    146c:	71 f4       	brne	.+28     	; 0x148a <Modbus_Set_transmit_buffer+0x3a>
    146e:	60 34       	cpi	r22, 0x40	; 64
    1470:	70 f4       	brcc	.+28     	; 0x148e <Modbus_Set_transmit_buffer+0x3e>
    1472:	e6 2f       	mov	r30, r22
    1474:	f0 e0       	ldi	r31, 0x00	; 0
    1476:	ee 0f       	add	r30, r30
    1478:	ff 1f       	adc	r31, r31
    147a:	e0 54       	subi	r30, 0x40	; 64
    147c:	fd 4f       	sbci	r31, 0xFD	; 253
    147e:	51 83       	std	Z+1, r21	; 0x01
    1480:	40 83       	st	Z, r20
    1482:	80 e0       	ldi	r24, 0x00	; 0
    1484:	08 95       	ret
    1486:	82 e0       	ldi	r24, 0x02	; 2
    1488:	08 95       	ret
    148a:	82 e0       	ldi	r24, 0x02	; 2
    148c:	08 95       	ret
    148e:	82 e0       	ldi	r24, 0x02	; 2
    1490:	08 95       	ret

00001492 <Modbus_Read_holding_registers>:
    1492:	81 11       	cpse	r24, r1
    1494:	0b c0       	rjmp	.+22     	; 0x14ac <Modbus_Read_holding_registers+0x1a>
    1496:	70 93 e1 04 	sts	0x04E1, r23	; 0x8004e1 <g_mod0_read_address+0x1>
    149a:	60 93 e0 04 	sts	0x04E0, r22	; 0x8004e0 <g_mod0_read_address>
    149e:	50 93 df 04 	sts	0x04DF, r21	; 0x8004df <g_mod0_read_qty+0x1>
    14a2:	40 93 de 04 	sts	0x04DE, r20	; 0x8004de <g_mod0_read_qty>
    14a6:	63 e0       	ldi	r22, 0x03	; 3
    14a8:	41 c8       	rjmp	.-3966   	; 0x52c <Modbus_mster_transaction>
    14aa:	08 95       	ret
    14ac:	81 30       	cpi	r24, 0x01	; 1
    14ae:	59 f4       	brne	.+22     	; 0x14c6 <Modbus_Read_holding_registers+0x34>
    14b0:	70 93 c7 03 	sts	0x03C7, r23	; 0x8003c7 <g_mod1_read_address+0x1>
    14b4:	60 93 c6 03 	sts	0x03C6, r22	; 0x8003c6 <g_mod1_read_address>
    14b8:	50 93 c5 03 	sts	0x03C5, r21	; 0x8003c5 <g_mod1_read_qty+0x1>
    14bc:	40 93 c4 03 	sts	0x03C4, r20	; 0x8003c4 <g_mod1_read_qty>
    14c0:	63 e0       	ldi	r22, 0x03	; 3
    14c2:	34 c8       	rjmp	.-3992   	; 0x52c <Modbus_mster_transaction>
    14c4:	08 95       	ret
    14c6:	84 ee       	ldi	r24, 0xE4	; 228
    14c8:	08 95       	ret

000014ca <Modbus_Write_multiple_registers>:
@return 0 on success; exception number on failure
@ingroup register
*/
uint8_t Modbus_Write_multiple_registers(uint8_t device,uint16_t u16WriteAddress, uint16_t u16WriteQty)
{
	if(DEVICE_0 == device){
    14ca:	81 11       	cpse	r24, r1
    14cc:	0b c0       	rjmp	.+22     	; 0x14e4 <Modbus_Write_multiple_registers+0x1a>
	
		g_mod0_write_address = u16WriteAddress;
    14ce:	70 93 5d 04 	sts	0x045D, r23	; 0x80045d <g_mod0_write_address+0x1>
    14d2:	60 93 5c 04 	sts	0x045C, r22	; 0x80045c <g_mod0_write_address>
		g_mod0_write_qty = u16WriteQty;
    14d6:	50 93 5b 04 	sts	0x045B, r21	; 0x80045b <g_mod0_write_qty+0x1>
    14da:	40 93 5a 04 	sts	0x045A, r20	; 0x80045a <g_mod0_write_qty>
		return Modbus_mster_transaction(device, WRITE_MULTIPLE_REGISTERS);
    14de:	60 e1       	ldi	r22, 0x10	; 16
    14e0:	25 c8       	rjmp	.-4022   	; 0x52c <Modbus_mster_transaction>
    14e2:	08 95       	ret
	}
	else if(DEVICE_1 == device){
    14e4:	81 30       	cpi	r24, 0x01	; 1
    14e6:	59 f4       	brne	.+22     	; 0x14fe <Modbus_Write_multiple_registers+0x34>
		g_mod1_write_address = u16WriteAddress;
    14e8:	70 93 43 03 	sts	0x0343, r23	; 0x800343 <g_mod1_write_address+0x1>
    14ec:	60 93 42 03 	sts	0x0342, r22	; 0x800342 <g_mod1_write_address>
		g_mod1_write_qty = u16WriteQty;
    14f0:	50 93 41 03 	sts	0x0341, r21	; 0x800341 <g_mod1_write_qty+0x1>
    14f4:	40 93 40 03 	sts	0x0340, r20	; 0x800340 <g_mod1_write_qty>
		return Modbus_mster_transaction(device, WRITE_MULTIPLE_REGISTERS);
    14f8:	60 e1       	ldi	r22, 0x10	; 16
    14fa:	18 c8       	rjmp	.-4048   	; 0x52c <Modbus_mster_transaction>
    14fc:	08 95       	ret
	}
	return  INVALID_DEVICE;
    14fe:	84 ee       	ldi	r24, 0xE4	; 228
}
    1500:	08 95       	ret

00001502 <vTask2>:
										
		
	}
}
static void vTask2(void* pvParameters)
{
    1502:	cf 93       	push	r28
    1504:	df 93       	push	r29
    1506:	00 d0       	rcall	.+0      	; 0x1508 <vTask2+0x6>
    1508:	1f 92       	push	r1
    150a:	cd b7       	in	r28, 0x3d	; 61
    150c:	de b7       	in	r29, 0x3e	; 62
    150e:	7e 01       	movw	r14, r28
    1510:	85 e0       	ldi	r24, 0x05	; 5
    1512:	e8 0e       	add	r14, r24
    1514:	f1 1c       	adc	r15, r1
		size_t xReceivedBytes;
		const TickType_t xBlockTime = pdMS_TO_TICKS( 100 );
		/* Receive the next message from the message buffer. Wait in the Blocked
		state (so not using any CPU processing time) for a maximum of 100ms for
		a message to become available. */
		UART0_puts("Vtask2 requires data\n");
    1516:	83 e1       	ldi	r24, 0x13	; 19
    1518:	92 e0       	ldi	r25, 0x02	; 2
    151a:	21 d2       	rcall	.+1090   	; 0x195e <UART0_puts>
		xReceivedBytes = xMessageBufferReceive( xMessageBuffer,
    151c:	26 e0       	ldi	r18, 0x06	; 6
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	44 e0       	ldi	r20, 0x04	; 4
    1522:	50 e0       	ldi	r21, 0x00	; 0
    1524:	be 01       	movw	r22, r28
    1526:	6f 5f       	subi	r22, 0xFF	; 255
    1528:	7f 4f       	sbci	r23, 0xFF	; 255
    152a:	80 91 81 0b 	lds	r24, 0x0B81	; 0x800b81 <xMessageBuffer>
    152e:	90 91 82 0b 	lds	r25, 0x0B82	; 0x800b82 <xMessageBuffer+0x1>
    1532:	0e 94 69 16 	call	0x2cd2	; 0x2cd2 <xStreamBufferReceive>
												( void * ) ucRxData,
												sizeof( ucRxData ),
												xBlockTime );
		if(xReceivedBytes==0){
    1536:	89 2b       	or	r24, r25
    1538:	21 f4       	brne	.+8      	; 0x1542 <vTask2+0x40>
			UART0_puts("NO data\n");
    153a:	89 e2       	ldi	r24, 0x29	; 41
    153c:	92 e0       	ldi	r25, 0x02	; 2
    153e:	0f d2       	rcall	.+1054   	; 0x195e <UART0_puts>
    1540:	ea cf       	rjmp	.-44     	; 0x1516 <vTask2+0x14>
		}
		else{
			UART0_puts("Vtask2 receives data\n");
    1542:	82 e3       	ldi	r24, 0x32	; 50
    1544:	92 e0       	ldi	r25, 0x02	; 2
    1546:	0b d2       	rcall	.+1046   	; 0x195e <UART0_puts>
    1548:	8e 01       	movw	r16, r28
    154a:	0f 5f       	subi	r16, 0xFF	; 255
    154c:	1f 4f       	sbci	r17, 0xFF	; 255
			for(uint8_t i =0 ; i<4;i++){
				UART0_OutUDec(ucRxData[i]);
    154e:	f8 01       	movw	r30, r16
    1550:	61 91       	ld	r22, Z+
    1552:	8f 01       	movw	r16, r30
    1554:	70 e0       	ldi	r23, 0x00	; 0
    1556:	80 e0       	ldi	r24, 0x00	; 0
    1558:	90 e0       	ldi	r25, 0x00	; 0
				UART0_putc(',');
    155a:	e5 d1       	rcall	.+970    	; 0x1926 <UART0_OutUDec>
    155c:	8c e2       	ldi	r24, 0x2C	; 44
		if(xReceivedBytes==0){
			UART0_puts("NO data\n");
		}
		else{
			UART0_puts("Vtask2 receives data\n");
			for(uint8_t i =0 ; i<4;i++){
    155e:	ca d1       	rcall	.+916    	; 0x18f4 <UART0_putc>
    1560:	0e 15       	cp	r16, r14
    1562:	1f 05       	cpc	r17, r15
				UART0_OutUDec(ucRxData[i]);
				UART0_putc(',');
			}
			UART0_putc('\n');
    1564:	a1 f7       	brne	.-24     	; 0x154e <vTask2+0x4c>
    1566:	8a e0       	ldi	r24, 0x0A	; 10
    1568:	c5 d1       	rcall	.+906    	; 0x18f4 <UART0_putc>
			//vTaskDelay(1000/portTICK_PERIOD_MS);
		
		}
	
	}
    156a:	d5 cf       	rjmp	.-86     	; 0x1516 <vTask2+0x14>

0000156c <vTask1>:
}



static void vTask1(void* pvParameters)
{
    156c:	cf 93       	push	r28
    156e:	df 93       	push	r29
    1570:	00 d0       	rcall	.+0      	; 0x1572 <vTask1+0x6>
    1572:	1f 92       	push	r1
    1574:	cd b7       	in	r28, 0x3d	; 61
    1576:	de b7       	in	r29, 0x3e	; 62
	uint8_t ucArrayToSend[] = { 5, 6, 9, 1 };
    1578:	85 e0       	ldi	r24, 0x05	; 5
    157a:	89 83       	std	Y+1, r24	; 0x01
    157c:	86 e0       	ldi	r24, 0x06	; 6
    157e:	8a 83       	std	Y+2, r24	; 0x02
    1580:	89 e0       	ldi	r24, 0x09	; 9
    1582:	8b 83       	std	Y+3, r24	; 0x03
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	8c 83       	std	Y+4, r24	; 0x04
    1588:	7e 01       	movw	r14, r28
    158a:	85 e0       	ldi	r24, 0x05	; 5
    158c:	e8 0e       	add	r14, r24
    158e:	f1 1c       	adc	r15, r1
    1590:	8e 01       	movw	r16, r28
    1592:	0f 5f       	subi	r16, 0xFF	; 255
    1594:	1f 4f       	sbci	r17, 0xFF	; 255
}



static void vTask1(void* pvParameters)
{
    1596:	f8 01       	movw	r30, r16
	while(1)
	{
			size_t xBytesSent;
		
			for(uint8_t i =0 ;i<4;i++){
				++ucArrayToSend[i];
    1598:	80 81       	ld	r24, Z
    159a:	8f 5f       	subi	r24, 0xFF	; 255
    159c:	81 93       	st	Z+, r24
	uint8_t ucArrayToSend[] = { 5, 6, 9, 1 };
	while(1)
	{
			size_t xBytesSent;
		
			for(uint8_t i =0 ;i<4;i++){
    159e:	ee 15       	cp	r30, r14
    15a0:	ff 05       	cpc	r31, r15
    15a2:	d1 f7       	brne	.-12     	; 0x1598 <vTask1+0x2c>
				++ucArrayToSend[i];
			}
		const TickType_t x100ms = pdMS_TO_TICKS( 100 );
		/* Send an array to the message buffer, blocking for a maximum of 100ms to
		wait for enough space to be available in the message buffer. */
		UART0_puts("Vtask1 sends data\n");
    15a4:	88 e4       	ldi	r24, 0x48	; 72
    15a6:	92 e0       	ldi	r25, 0x02	; 2
    15a8:	da d1       	rcall	.+948    	; 0x195e <UART0_puts>
		for(uint8_t i =0 ; i<4;i++){
				UART0_OutUDec(ucArrayToSend[i]);
    15aa:	f8 01       	movw	r30, r16
    15ac:	61 91       	ld	r22, Z+
    15ae:	8f 01       	movw	r16, r30
    15b0:	70 e0       	ldi	r23, 0x00	; 0
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	b7 d1       	rcall	.+878    	; 0x1926 <UART0_OutUDec>
				UART0_putc(',');
    15b8:	8c e2       	ldi	r24, 0x2C	; 44
    15ba:	9c d1       	rcall	.+824    	; 0x18f4 <UART0_putc>
    15bc:	0e 15       	cp	r16, r14
			}
		const TickType_t x100ms = pdMS_TO_TICKS( 100 );
		/* Send an array to the message buffer, blocking for a maximum of 100ms to
		wait for enough space to be available in the message buffer. */
		UART0_puts("Vtask1 sends data\n");
		for(uint8_t i =0 ; i<4;i++){
    15be:	1f 05       	cpc	r17, r15
    15c0:	a1 f7       	brne	.-24     	; 0x15aa <vTask1+0x3e>
				UART0_OutUDec(ucArrayToSend[i]);
				UART0_putc(',');
		}
		UART0_putc('\n');
    15c2:	8a e0       	ldi	r24, 0x0A	; 10
    15c4:	97 d1       	rcall	.+814    	; 0x18f4 <UART0_putc>
    15c6:	20 e0       	ldi	r18, 0x00	; 0
		xBytesSent = xMessageBufferSend( xMessageBuffer,
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	44 e0       	ldi	r20, 0x04	; 4
    15cc:	50 e0       	ldi	r21, 0x00	; 0
    15ce:	be 01       	movw	r22, r28
    15d0:	6f 5f       	subi	r22, 0xFF	; 255
    15d2:	7f 4f       	sbci	r23, 0xFF	; 255
    15d4:	80 91 81 0b 	lds	r24, 0x0B81	; 0x800b81 <xMessageBuffer>
    15d8:	90 91 82 0b 	lds	r25, 0x0B82	; 0x800b82 <xMessageBuffer+0x1>
    15dc:	0e 94 d1 15 	call	0x2ba2	; 0x2ba2 <xStreamBufferSend>
										( void * ) ucArrayToSend,
										sizeof( ucArrayToSend ),
										0 );
		UART0_puts("Vtask1 sent_____R data\n");
    15e0:	8b e5       	ldi	r24, 0x5B	; 91
    15e2:	92 e0       	ldi	r25, 0x02	; 2
    15e4:	bc d1       	rcall	.+888    	; 0x195e <UART0_puts>
    15e6:	8a ef       	ldi	r24, 0xFA	; 250
	    vTaskDelay(4000/portTICK_PERIOD_MS);
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	0e 94 02 1a 	call	0x3404	; 0x3404 <vTaskDelay>
    15ee:	d0 cf       	rjmp	.-96     	; 0x1590 <vTask1+0x24>

000015f0 <main>:
										
		
	}
    15f0:	cf 93       	push	r28
static uint8_t ucStorageBuffer[ STORAGE_SIZE_BYTES ];
/* The variable used to hold the message buffer structure. */
StaticMessageBuffer_t xMessageBufferStruct;
MessageBufferHandle_t xMessageBuffer;

int main() {
    15f2:	df 93       	push	r29
    15f4:	1f 92       	push	r1
    15f6:	cd b7       	in	r28, 0x3d	; 61
    15f8:	de b7       	in	r29, 0x3e	; 62
	DDRE = 0xFF;
    15fa:	8f ef       	ldi	r24, 0xFF	; 255
    15fc:	8d b9       	out	0x0d, r24	; 13
	UART0_init(9600);
    15fe:	60 e8       	ldi	r22, 0x80	; 128
    1600:	75 e2       	ldi	r23, 0x25	; 37
    1602:	80 e0       	ldi	r24, 0x00	; 0
    1604:	90 e0       	ldi	r25, 0x00	; 0
    1606:	21 d1       	rcall	.+578    	; 0x184a <UART0_init>
	millis_init();
    1608:	0e 94 59 1f 	call	0x3eb2	; 0x3eb2 <millis_init>
	DIO_init();
    160c:	69 d0       	rcall	.+210    	; 0x16e0 <DIO_init>
	Lcd_init(UART3,115200,1);
    160e:	21 e0       	ldi	r18, 0x01	; 1
    1610:	40 e0       	ldi	r20, 0x00	; 0
    1612:	52 ec       	ldi	r21, 0xC2	; 194
    1614:	61 e0       	ldi	r22, 0x01	; 1
    1616:	70 e0       	ldi	r23, 0x00	; 0
    1618:	83 e0       	ldi	r24, 0x03	; 3
    161a:	0e 94 34 02 	call	0x468	; 0x468 <Lcd_init>
		
	TaskHandle_t xHandle1 = NULL , xHandle2 = NULL;
	/* Create the task without using any dynamic memory allocation. */
	xHandle1 = xTaskCreateStatic(
    161e:	0f 2e       	mov	r0, r31
    1620:	f9 e5       	ldi	r31, 0x59	; 89
    1622:	cf 2e       	mov	r12, r31
    1624:	fb e0       	ldi	r31, 0x0B	; 11
    1626:	df 2e       	mov	r13, r31
    1628:	f0 2d       	mov	r31, r0
    162a:	0f 2e       	mov	r0, r31
    162c:	f6 eb       	ldi	r31, 0xB6	; 182
    162e:	ef 2e       	mov	r14, r31
    1630:	fb e0       	ldi	r31, 0x0B	; 11
    1632:	ff 2e       	mov	r15, r31
    1634:	f0 2d       	mov	r31, r0
    1636:	02 e0       	ldi	r16, 0x02	; 2
    1638:	20 e0       	ldi	r18, 0x00	; 0
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	48 ec       	ldi	r20, 0xC8	; 200
    163e:	50 e0       	ldi	r21, 0x00	; 0
    1640:	63 e7       	ldi	r22, 0x73	; 115
    1642:	72 e0       	ldi	r23, 0x02	; 2
    1644:	86 eb       	ldi	r24, 0xB6	; 182
    1646:	9a e0       	ldi	r25, 0x0A	; 10
    1648:	0e 94 76 17 	call	0x2eec	; 0x2eec <xTaskCreateStatic>
					NULL, /* Parameter passed into the task. */
					2,/* Priority at which the task is created. */
					xStack1, /* Array to use as the task's stack. */
					&xTask1Buffer); /* Variable to hold the task's data structure. */
	
	xHandle2 = xTaskCreateStatic(
    164c:	0f 2e       	mov	r0, r31
    164e:	f3 e8       	ldi	r31, 0x83	; 131
    1650:	cf 2e       	mov	r12, r31
    1652:	fb e0       	ldi	r31, 0x0B	; 11
    1654:	df 2e       	mov	r13, r31
    1656:	f0 2d       	mov	r31, r0
    1658:	0f 2e       	mov	r0, r31
    165a:	fd e8       	ldi	r31, 0x8D	; 141
    165c:	ef 2e       	mov	r14, r31
    165e:	fc e0       	ldi	r31, 0x0C	; 12
    1660:	ff 2e       	mov	r15, r31
    1662:	f0 2d       	mov	r31, r0
    1664:	20 e0       	ldi	r18, 0x00	; 0
    1666:	30 e0       	ldi	r19, 0x00	; 0
    1668:	48 ec       	ldi	r20, 0xC8	; 200
    166a:	50 e0       	ldi	r21, 0x00	; 0
    166c:	69 e7       	ldi	r22, 0x79	; 121
    166e:	72 e0       	ldi	r23, 0x02	; 2
    1670:	81 e8       	ldi	r24, 0x81	; 129
    1672:	9a e0       	ldi	r25, 0x0A	; 10
    1674:	0e 94 76 17 	call	0x2eec	; 0x2eec <xTaskCreateStatic>
				NULL, /* Parameter passed into the task. */
				2,/* Priority at which the task is created. */
				xStack2, /* Array to use as the task's stack. */
				&xTask2Buffer ); /* Variable to hold the task's data structure. */

		xMessageBuffer = xMessageBufferCreateStatic( sizeof( ucStorageBuffer ),
    1678:	0e e7       	ldi	r16, 0x7E	; 126
    167a:	1c e0       	ldi	r17, 0x0C	; 12
    167c:	23 ee       	ldi	r18, 0xE3	; 227
    167e:	34 e0       	ldi	r19, 0x04	; 4
    1680:	41 e0       	ldi	r20, 0x01	; 1
    1682:	60 e0       	ldi	r22, 0x00	; 0
    1684:	70 e0       	ldi	r23, 0x00	; 0
    1686:	84 e6       	ldi	r24, 0x64	; 100
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	0e 94 90 15 	call	0x2b20	; 0x2b20 <xStreamBufferGenericCreateStatic>
    168e:	90 93 82 0b 	sts	0x0B82, r25	; 0x800b82 <xMessageBuffer+0x1>
    1692:	80 93 81 0b 	sts	0x0B81, r24	; 0x800b81 <xMessageBuffer>
// 		Lcd_Write(LCD_TEMP_DATA,50);
// 		_delay_ms(1000);
// 		Lcd_Write(LCD_TEMP_DATA,52);
// 		_delay_ms(1000);
// }
	char x=0;
    1696:	19 82       	std	Y+1, r1	; 0x01
	LCD_main(&x);
    1698:	ce 01       	movw	r24, r28
    169a:	01 96       	adiw	r24, 0x01	; 1
    169c:	0e 94 f6 1e 	call	0x3dec	; 0x3dec <LCD_main>

	  // Start scheduler.
	  vTaskStartScheduler();
    16a0:	0e 94 72 18 	call	0x30e4	; 0x30e4 <vTaskStartScheduler>
    16a4:	ff cf       	rjmp	.-2      	; 0x16a4 <main+0xb4>

000016a6 <__vector_29>:
    16a6:	1f 92       	push	r1
    16a8:	0f 92       	push	r0
    16aa:	0f b6       	in	r0, 0x3f	; 63
    16ac:	0f 92       	push	r0
    16ae:	11 24       	eor	r1, r1
    16b0:	2f 93       	push	r18
    16b2:	8f 93       	push	r24
    16b4:	9f 93       	push	r25
    16b6:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
    16ba:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	92 2b       	or	r25, r18
    16c2:	90 93 49 05 	sts	0x0549, r25	; 0x800549 <g_analog_data+0x1>
    16c6:	80 93 48 05 	sts	0x0548, r24	; 0x800548 <g_analog_data>
    16ca:	81 e0       	ldi	r24, 0x01	; 1
    16cc:	80 93 47 05 	sts	0x0547, r24	; 0x800547 <g_converted>
    16d0:	9f 91       	pop	r25
    16d2:	8f 91       	pop	r24
    16d4:	2f 91       	pop	r18
    16d6:	0f 90       	pop	r0
    16d8:	0f be       	out	0x3f, r0	; 63
    16da:	0f 90       	pop	r0
    16dc:	1f 90       	pop	r1
    16de:	18 95       	reti

000016e0 <DIO_init>:
    16e0:	50 98       	cbi	0x0a, 0	; 10
    16e2:	51 98       	cbi	0x0a, 1	; 10
    16e4:	51 98       	cbi	0x0a, 1	; 10
    16e6:	53 98       	cbi	0x0a, 3	; 10
    16e8:	20 98       	cbi	0x04, 0	; 4
    16ea:	55 98       	cbi	0x0a, 5	; 10
    16ec:	54 98       	cbi	0x0a, 4	; 10
    16ee:	3c 9a       	sbi	0x07, 4	; 7
    16f0:	3f 9a       	sbi	0x07, 7	; 7
    16f2:	3d 9a       	sbi	0x07, 5	; 7
    16f4:	39 9a       	sbi	0x07, 1	; 7
    16f6:	39 9a       	sbi	0x07, 1	; 7
    16f8:	57 9a       	sbi	0x0a, 7	; 10
    16fa:	38 9a       	sbi	0x07, 0	; 7
    16fc:	38 98       	cbi	0x07, 0	; 7
    16fe:	56 9a       	sbi	0x0a, 6	; 10
    1700:	3b 9a       	sbi	0x07, 3	; 7
    1702:	e4 e0       	ldi	r30, 0x04	; 4
    1704:	f1 e0       	ldi	r31, 0x01	; 1
    1706:	80 81       	ld	r24, Z
    1708:	84 60       	ori	r24, 0x04	; 4
    170a:	80 83       	st	Z, r24
    170c:	3f 9a       	sbi	0x07, 7	; 7
    170e:	3f 9a       	sbi	0x07, 7	; 7
    1710:	3f 9a       	sbi	0x07, 7	; 7
    1712:	e1 e0       	ldi	r30, 0x01	; 1
    1714:	f1 e0       	ldi	r31, 0x01	; 1
    1716:	80 81       	ld	r24, Z
    1718:	8e 7f       	andi	r24, 0xFE	; 254
    171a:	80 83       	st	Z, r24
    171c:	80 81       	ld	r24, Z
    171e:	82 60       	ori	r24, 0x02	; 2
    1720:	80 83       	st	Z, r24
    1722:	e2 e0       	ldi	r30, 0x02	; 2
    1724:	f1 e0       	ldi	r31, 0x01	; 1
    1726:	80 81       	ld	r24, Z
    1728:	81 60       	ori	r24, 0x01	; 1
    172a:	80 83       	st	Z, r24
    172c:	52 98       	cbi	0x0a, 2	; 10
    172e:	53 9a       	sbi	0x0a, 3	; 10
    1730:	5a 9a       	sbi	0x0b, 2	; 11
    1732:	08 95       	ret

00001734 <Modbus_change_state>:
    1734:	88 23       	and	r24, r24
    1736:	19 f0       	breq	.+6      	; 0x173e <Modbus_change_state+0xa>
    1738:	81 30       	cpi	r24, 0x01	; 1
    173a:	89 f0       	breq	.+34     	; 0x175e <Modbus_change_state+0x2a>
    173c:	08 95       	ret
    173e:	61 30       	cpi	r22, 0x01	; 1
    1740:	31 f4       	brne	.+12     	; 0x174e <Modbus_change_state+0x1a>
    1742:	e5 e0       	ldi	r30, 0x05	; 5
    1744:	f1 e0       	ldi	r31, 0x01	; 1
    1746:	80 81       	ld	r24, Z
    1748:	84 60       	ori	r24, 0x04	; 4
    174a:	80 83       	st	Z, r24
    174c:	08 95       	ret
    174e:	61 11       	cpse	r22, r1
    1750:	0d c0       	rjmp	.+26     	; 0x176c <Modbus_change_state+0x38>
    1752:	e5 e0       	ldi	r30, 0x05	; 5
    1754:	f1 e0       	ldi	r31, 0x01	; 1
    1756:	80 81       	ld	r24, Z
    1758:	8b 7f       	andi	r24, 0xFB	; 251
    175a:	80 83       	st	Z, r24
    175c:	08 95       	ret
    175e:	61 30       	cpi	r22, 0x01	; 1
    1760:	11 f4       	brne	.+4      	; 0x1766 <Modbus_change_state+0x32>
    1762:	47 9a       	sbi	0x08, 7	; 8
    1764:	08 95       	ret
    1766:	61 11       	cpse	r22, r1
    1768:	01 c0       	rjmp	.+2      	; 0x176c <Modbus_change_state+0x38>
    176a:	47 98       	cbi	0x08, 7	; 8
    176c:	08 95       	ret

0000176e <__vector_25>:
    176e:	1f 92       	push	r1
    1770:	0f 92       	push	r0
    1772:	0f b6       	in	r0, 0x3f	; 63
    1774:	0f 92       	push	r0
    1776:	11 24       	eor	r1, r1
    1778:	0b b6       	in	r0, 0x3b	; 59
    177a:	0f 92       	push	r0
    177c:	2f 93       	push	r18
    177e:	3f 93       	push	r19
    1780:	4f 93       	push	r20
    1782:	5f 93       	push	r21
    1784:	8f 93       	push	r24
    1786:	9f 93       	push	r25
    1788:	ef 93       	push	r30
    178a:	ff 93       	push	r31
    178c:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
    1790:	30 91 c6 00 	lds	r19, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1794:	28 71       	andi	r18, 0x18	; 24
    1796:	80 91 5f 08 	lds	r24, 0x085F	; 0x80085f <UART_RxHead>
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	01 96       	adiw	r24, 0x01	; 1
    179e:	8f 77       	andi	r24, 0x7F	; 127
    17a0:	99 27       	eor	r25, r25
    17a2:	40 91 5e 08 	lds	r20, 0x085E	; 0x80085e <UART_RxTail>
    17a6:	50 e0       	ldi	r21, 0x00	; 0
    17a8:	84 17       	cp	r24, r20
    17aa:	95 07       	cpc	r25, r21
    17ac:	39 f0       	breq	.+14     	; 0x17bc <__vector_25+0x4e>
    17ae:	80 93 5f 08 	sts	0x085F, r24	; 0x80085f <UART_RxHead>
    17b2:	fc 01       	movw	r30, r24
    17b4:	ee 59       	subi	r30, 0x9E	; 158
    17b6:	f7 4f       	sbci	r31, 0xF7	; 247
    17b8:	30 83       	st	Z, r19
    17ba:	01 c0       	rjmp	.+2      	; 0x17be <__vector_25+0x50>
    17bc:	22 e0       	ldi	r18, 0x02	; 2
    17be:	20 93 5d 08 	sts	0x085D, r18	; 0x80085d <UART_LastRxError>
    17c2:	ff 91       	pop	r31
    17c4:	ef 91       	pop	r30
    17c6:	9f 91       	pop	r25
    17c8:	8f 91       	pop	r24
    17ca:	5f 91       	pop	r21
    17cc:	4f 91       	pop	r20
    17ce:	3f 91       	pop	r19
    17d0:	2f 91       	pop	r18
    17d2:	0f 90       	pop	r0
    17d4:	0b be       	out	0x3b, r0	; 59
    17d6:	0f 90       	pop	r0
    17d8:	0f be       	out	0x3f, r0	; 63
    17da:	0f 90       	pop	r0
    17dc:	1f 90       	pop	r1
    17de:	18 95       	reti

000017e0 <__vector_26>:
    17e0:	1f 92       	push	r1
    17e2:	0f 92       	push	r0
    17e4:	0f b6       	in	r0, 0x3f	; 63
    17e6:	0f 92       	push	r0
    17e8:	11 24       	eor	r1, r1
    17ea:	0b b6       	in	r0, 0x3b	; 59
    17ec:	0f 92       	push	r0
    17ee:	8f 93       	push	r24
    17f0:	9f 93       	push	r25
    17f2:	ef 93       	push	r30
    17f4:	ff 93       	push	r31
    17f6:	90 91 61 08 	lds	r25, 0x0861	; 0x800861 <UART_TxHead>
    17fa:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <UART_TxTail>
    17fe:	98 17       	cp	r25, r24
    1800:	89 f0       	breq	.+34     	; 0x1824 <__vector_26+0x44>
    1802:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <UART_TxTail>
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	01 96       	adiw	r24, 0x01	; 1
    180a:	8f 77       	andi	r24, 0x7F	; 127
    180c:	99 27       	eor	r25, r25
    180e:	80 93 60 08 	sts	0x0860, r24	; 0x800860 <UART_TxTail>
    1812:	fc 01       	movw	r30, r24
    1814:	ee 51       	subi	r30, 0x1E	; 30
    1816:	f7 4f       	sbci	r31, 0xF7	; 247
    1818:	80 81       	ld	r24, Z
    181a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    181e:	10 92 4d 05 	sts	0x054D, r1	; 0x80054d <UART0_Transmission_end>
    1822:	08 c0       	rjmp	.+16     	; 0x1834 <__vector_26+0x54>
    1824:	e1 ec       	ldi	r30, 0xC1	; 193
    1826:	f0 e0       	ldi	r31, 0x00	; 0
    1828:	80 81       	ld	r24, Z
    182a:	8f 7d       	andi	r24, 0xDF	; 223
    182c:	80 83       	st	Z, r24
    182e:	81 e0       	ldi	r24, 0x01	; 1
    1830:	80 93 4d 05 	sts	0x054D, r24	; 0x80054d <UART0_Transmission_end>
    1834:	ff 91       	pop	r31
    1836:	ef 91       	pop	r30
    1838:	9f 91       	pop	r25
    183a:	8f 91       	pop	r24
    183c:	0f 90       	pop	r0
    183e:	0b be       	out	0x3b, r0	; 59
    1840:	0f 90       	pop	r0
    1842:	0f be       	out	0x3f, r0	; 63
    1844:	0f 90       	pop	r0
    1846:	1f 90       	pop	r1
    1848:	18 95       	reti

0000184a <UART0_init>:
    184a:	0f 93       	push	r16
    184c:	1f 93       	push	r17
    184e:	8b 01       	movw	r16, r22
    1850:	9c 01       	movw	r18, r24
    1852:	f8 94       	cli
    1854:	10 92 61 08 	sts	0x0861, r1	; 0x800861 <UART_TxHead>
    1858:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <UART_TxTail>
    185c:	10 92 5f 08 	sts	0x085F, r1	; 0x80085f <UART_RxHead>
    1860:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <UART_RxTail>
    1864:	78 94       	sei
    1866:	dc 01       	movw	r26, r24
    1868:	cb 01       	movw	r24, r22
    186a:	80 58       	subi	r24, 0x80	; 128
    186c:	9b 47       	sbci	r25, 0x7B	; 123
    186e:	a1 4e       	sbci	r26, 0xE1	; 225
    1870:	bf 4f       	sbci	r27, 0xFF	; 255
    1872:	88 0f       	add	r24, r24
    1874:	99 1f       	adc	r25, r25
    1876:	aa 1f       	adc	r26, r26
    1878:	bb 1f       	adc	r27, r27
    187a:	88 0f       	add	r24, r24
    187c:	99 1f       	adc	r25, r25
    187e:	aa 1f       	adc	r26, r26
    1880:	bb 1f       	adc	r27, r27
    1882:	bc 01       	movw	r22, r24
    1884:	cd 01       	movw	r24, r26
    1886:	66 0f       	add	r22, r22
    1888:	77 1f       	adc	r23, r23
    188a:	88 1f       	adc	r24, r24
    188c:	99 1f       	adc	r25, r25
    188e:	00 0f       	add	r16, r16
    1890:	11 1f       	adc	r17, r17
    1892:	22 1f       	adc	r18, r18
    1894:	33 1f       	adc	r19, r19
    1896:	00 0f       	add	r16, r16
    1898:	11 1f       	adc	r17, r17
    189a:	22 1f       	adc	r18, r18
    189c:	33 1f       	adc	r19, r19
    189e:	a9 01       	movw	r20, r18
    18a0:	98 01       	movw	r18, r16
    18a2:	22 0f       	add	r18, r18
    18a4:	33 1f       	adc	r19, r19
    18a6:	44 1f       	adc	r20, r20
    18a8:	55 1f       	adc	r21, r21
    18aa:	22 0f       	add	r18, r18
    18ac:	33 1f       	adc	r19, r19
    18ae:	44 1f       	adc	r20, r20
    18b0:	55 1f       	adc	r21, r21
    18b2:	0e 94 98 1f 	call	0x3f30	; 0x3f30 <__udivmodsi4>
    18b6:	ba 01       	movw	r22, r20
    18b8:	a9 01       	movw	r20, r18
    18ba:	41 50       	subi	r20, 0x01	; 1
    18bc:	51 09       	sbc	r21, r1
    18be:	61 09       	sbc	r22, r1
    18c0:	71 09       	sbc	r23, r1
    18c2:	57 ff       	sbrs	r21, 7
    18c4:	06 c0       	rjmp	.+12     	; 0x18d2 <UART0_init+0x88>
    18c6:	82 e0       	ldi	r24, 0x02	; 2
    18c8:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
    18cc:	5f 77       	andi	r21, 0x7F	; 127
    18ce:	66 27       	eor	r22, r22
    18d0:	77 27       	eor	r23, r23
    18d2:	bb 27       	eor	r27, r27
    18d4:	a7 2f       	mov	r26, r23
    18d6:	96 2f       	mov	r25, r22
    18d8:	85 2f       	mov	r24, r21
    18da:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    18de:	40 93 c4 00 	sts	0x00C4, r20	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    18e2:	88 e9       	ldi	r24, 0x98	; 152
    18e4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    18e8:	86 e0       	ldi	r24, 0x06	; 6
    18ea:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    18ee:	1f 91       	pop	r17
    18f0:	0f 91       	pop	r16
    18f2:	08 95       	ret

000018f4 <UART0_putc>:
    18f4:	40 91 61 08 	lds	r20, 0x0861	; 0x800861 <UART_TxHead>
    18f8:	50 e0       	ldi	r21, 0x00	; 0
    18fa:	4f 5f       	subi	r20, 0xFF	; 255
    18fc:	5f 4f       	sbci	r21, 0xFF	; 255
    18fe:	4f 77       	andi	r20, 0x7F	; 127
    1900:	55 27       	eor	r21, r21
    1902:	20 91 60 08 	lds	r18, 0x0860	; 0x800860 <UART_TxTail>
    1906:	30 e0       	ldi	r19, 0x00	; 0
    1908:	42 17       	cp	r20, r18
    190a:	53 07       	cpc	r21, r19
    190c:	d1 f3       	breq	.-12     	; 0x1902 <UART0_putc+0xe>
    190e:	fa 01       	movw	r30, r20
    1910:	ee 51       	subi	r30, 0x1E	; 30
    1912:	f7 4f       	sbci	r31, 0xF7	; 247
    1914:	80 83       	st	Z, r24
    1916:	40 93 61 08 	sts	0x0861, r20	; 0x800861 <UART_TxHead>
    191a:	e1 ec       	ldi	r30, 0xC1	; 193
    191c:	f0 e0       	ldi	r31, 0x00	; 0
    191e:	80 81       	ld	r24, Z
    1920:	80 62       	ori	r24, 0x20	; 32
    1922:	80 83       	st	Z, r24
    1924:	08 95       	ret

00001926 <UART0_OutUDec>:
    1926:	0f 93       	push	r16
    1928:	1f 93       	push	r17
    192a:	cf 93       	push	r28
    192c:	df 93       	push	r29
    192e:	6a 30       	cpi	r22, 0x0A	; 10
    1930:	71 05       	cpc	r23, r1
    1932:	81 05       	cpc	r24, r1
    1934:	91 05       	cpc	r25, r1
    1936:	58 f0       	brcs	.+22     	; 0x194e <UART0_OutUDec+0x28>
    1938:	2a e0       	ldi	r18, 0x0A	; 10
    193a:	30 e0       	ldi	r19, 0x00	; 0
    193c:	40 e0       	ldi	r20, 0x00	; 0
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	0e 94 98 1f 	call	0x3f30	; 0x3f30 <__udivmodsi4>
    1944:	06 2f       	mov	r16, r22
    1946:	ca 01       	movw	r24, r20
    1948:	b9 01       	movw	r22, r18
    194a:	ed df       	rcall	.-38     	; 0x1926 <UART0_OutUDec>
    194c:	60 2f       	mov	r22, r16
    194e:	80 e3       	ldi	r24, 0x30	; 48
    1950:	86 0f       	add	r24, r22
    1952:	d0 df       	rcall	.-96     	; 0x18f4 <UART0_putc>
    1954:	df 91       	pop	r29
    1956:	cf 91       	pop	r28
    1958:	1f 91       	pop	r17
    195a:	0f 91       	pop	r16
    195c:	08 95       	ret

0000195e <UART0_puts>:
    195e:	cf 93       	push	r28
    1960:	df 93       	push	r29
    1962:	ec 01       	movw	r28, r24
    1964:	88 81       	ld	r24, Y
    1966:	88 23       	and	r24, r24
    1968:	29 f0       	breq	.+10     	; 0x1974 <UART0_puts+0x16>
    196a:	21 96       	adiw	r28, 0x01	; 1
    196c:	c3 df       	rcall	.-122    	; 0x18f4 <UART0_putc>
    196e:	89 91       	ld	r24, Y+
    1970:	81 11       	cpse	r24, r1
    1972:	fc cf       	rjmp	.-8      	; 0x196c <UART0_puts+0xe>
    1974:	df 91       	pop	r29
    1976:	cf 91       	pop	r28
    1978:	08 95       	ret

0000197a <__vector_36>:
    197a:	1f 92       	push	r1
    197c:	0f 92       	push	r0
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	0f 92       	push	r0
    1982:	11 24       	eor	r1, r1
    1984:	0b b6       	in	r0, 0x3b	; 59
    1986:	0f 92       	push	r0
    1988:	2f 93       	push	r18
    198a:	3f 93       	push	r19
    198c:	4f 93       	push	r20
    198e:	5f 93       	push	r21
    1990:	8f 93       	push	r24
    1992:	9f 93       	push	r25
    1994:	ef 93       	push	r30
    1996:	ff 93       	push	r31
    1998:	20 91 c8 00 	lds	r18, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
    199c:	30 91 ce 00 	lds	r19, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    19a0:	28 71       	andi	r18, 0x18	; 24
    19a2:	80 91 5a 07 	lds	r24, 0x075A	; 0x80075a <UART1_RxHead>
    19a6:	90 e0       	ldi	r25, 0x00	; 0
    19a8:	01 96       	adiw	r24, 0x01	; 1
    19aa:	8f 77       	andi	r24, 0x7F	; 127
    19ac:	99 27       	eor	r25, r25
    19ae:	40 91 59 07 	lds	r20, 0x0759	; 0x800759 <UART1_RxTail>
    19b2:	50 e0       	ldi	r21, 0x00	; 0
    19b4:	84 17       	cp	r24, r20
    19b6:	95 07       	cpc	r25, r21
    19b8:	39 f0       	breq	.+14     	; 0x19c8 <__vector_36+0x4e>
    19ba:	80 93 5a 07 	sts	0x075A, r24	; 0x80075a <UART1_RxHead>
    19be:	fc 01       	movw	r30, r24
    19c0:	e3 5a       	subi	r30, 0xA3	; 163
    19c2:	f8 4f       	sbci	r31, 0xF8	; 248
    19c4:	30 83       	st	Z, r19
    19c6:	01 c0       	rjmp	.+2      	; 0x19ca <__vector_36+0x50>
    19c8:	22 e0       	ldi	r18, 0x02	; 2
    19ca:	20 93 58 07 	sts	0x0758, r18	; 0x800758 <UART1_LastRxError>
    19ce:	ff 91       	pop	r31
    19d0:	ef 91       	pop	r30
    19d2:	9f 91       	pop	r25
    19d4:	8f 91       	pop	r24
    19d6:	5f 91       	pop	r21
    19d8:	4f 91       	pop	r20
    19da:	3f 91       	pop	r19
    19dc:	2f 91       	pop	r18
    19de:	0f 90       	pop	r0
    19e0:	0b be       	out	0x3b, r0	; 59
    19e2:	0f 90       	pop	r0
    19e4:	0f be       	out	0x3f, r0	; 63
    19e6:	0f 90       	pop	r0
    19e8:	1f 90       	pop	r1
    19ea:	18 95       	reti

000019ec <__vector_37>:
    19ec:	1f 92       	push	r1
    19ee:	0f 92       	push	r0
    19f0:	0f b6       	in	r0, 0x3f	; 63
    19f2:	0f 92       	push	r0
    19f4:	11 24       	eor	r1, r1
    19f6:	0b b6       	in	r0, 0x3b	; 59
    19f8:	0f 92       	push	r0
    19fa:	8f 93       	push	r24
    19fc:	9f 93       	push	r25
    19fe:	ef 93       	push	r30
    1a00:	ff 93       	push	r31
    1a02:	90 91 5c 07 	lds	r25, 0x075C	; 0x80075c <UART1_TxHead>
    1a06:	80 91 5b 07 	lds	r24, 0x075B	; 0x80075b <UART1_TxTail>
    1a0a:	98 17       	cp	r25, r24
    1a0c:	89 f0       	breq	.+34     	; 0x1a30 <__vector_37+0x44>
    1a0e:	80 91 5b 07 	lds	r24, 0x075B	; 0x80075b <UART1_TxTail>
    1a12:	90 e0       	ldi	r25, 0x00	; 0
    1a14:	01 96       	adiw	r24, 0x01	; 1
    1a16:	8f 77       	andi	r24, 0x7F	; 127
    1a18:	99 27       	eor	r25, r25
    1a1a:	80 93 5b 07 	sts	0x075B, r24	; 0x80075b <UART1_TxTail>
    1a1e:	fc 01       	movw	r30, r24
    1a20:	e3 52       	subi	r30, 0x23	; 35
    1a22:	f8 4f       	sbci	r31, 0xF8	; 248
    1a24:	80 81       	ld	r24, Z
    1a26:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
    1a2a:	10 92 4c 05 	sts	0x054C, r1	; 0x80054c <UART1_Transmission_end>
    1a2e:	08 c0       	rjmp	.+16     	; 0x1a40 <__vector_37+0x54>
    1a30:	e9 ec       	ldi	r30, 0xC9	; 201
    1a32:	f0 e0       	ldi	r31, 0x00	; 0
    1a34:	80 81       	ld	r24, Z
    1a36:	8f 7d       	andi	r24, 0xDF	; 223
    1a38:	80 83       	st	Z, r24
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	80 93 4c 05 	sts	0x054C, r24	; 0x80054c <UART1_Transmission_end>
    1a40:	ff 91       	pop	r31
    1a42:	ef 91       	pop	r30
    1a44:	9f 91       	pop	r25
    1a46:	8f 91       	pop	r24
    1a48:	0f 90       	pop	r0
    1a4a:	0b be       	out	0x3b, r0	; 59
    1a4c:	0f 90       	pop	r0
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	0f 90       	pop	r0
    1a52:	1f 90       	pop	r1
    1a54:	18 95       	reti

00001a56 <UART1_init>:
    1a56:	0f 93       	push	r16
    1a58:	1f 93       	push	r17
    1a5a:	8b 01       	movw	r16, r22
    1a5c:	9c 01       	movw	r18, r24
    1a5e:	f8 94       	cli
    1a60:	10 92 5c 07 	sts	0x075C, r1	; 0x80075c <UART1_TxHead>
    1a64:	10 92 5b 07 	sts	0x075B, r1	; 0x80075b <UART1_TxTail>
    1a68:	10 92 5a 07 	sts	0x075A, r1	; 0x80075a <UART1_RxHead>
    1a6c:	10 92 59 07 	sts	0x0759, r1	; 0x800759 <UART1_RxTail>
    1a70:	78 94       	sei
    1a72:	dc 01       	movw	r26, r24
    1a74:	cb 01       	movw	r24, r22
    1a76:	80 58       	subi	r24, 0x80	; 128
    1a78:	9b 47       	sbci	r25, 0x7B	; 123
    1a7a:	a1 4e       	sbci	r26, 0xE1	; 225
    1a7c:	bf 4f       	sbci	r27, 0xFF	; 255
    1a7e:	88 0f       	add	r24, r24
    1a80:	99 1f       	adc	r25, r25
    1a82:	aa 1f       	adc	r26, r26
    1a84:	bb 1f       	adc	r27, r27
    1a86:	88 0f       	add	r24, r24
    1a88:	99 1f       	adc	r25, r25
    1a8a:	aa 1f       	adc	r26, r26
    1a8c:	bb 1f       	adc	r27, r27
    1a8e:	bc 01       	movw	r22, r24
    1a90:	cd 01       	movw	r24, r26
    1a92:	66 0f       	add	r22, r22
    1a94:	77 1f       	adc	r23, r23
    1a96:	88 1f       	adc	r24, r24
    1a98:	99 1f       	adc	r25, r25
    1a9a:	00 0f       	add	r16, r16
    1a9c:	11 1f       	adc	r17, r17
    1a9e:	22 1f       	adc	r18, r18
    1aa0:	33 1f       	adc	r19, r19
    1aa2:	00 0f       	add	r16, r16
    1aa4:	11 1f       	adc	r17, r17
    1aa6:	22 1f       	adc	r18, r18
    1aa8:	33 1f       	adc	r19, r19
    1aaa:	a9 01       	movw	r20, r18
    1aac:	98 01       	movw	r18, r16
    1aae:	22 0f       	add	r18, r18
    1ab0:	33 1f       	adc	r19, r19
    1ab2:	44 1f       	adc	r20, r20
    1ab4:	55 1f       	adc	r21, r21
    1ab6:	22 0f       	add	r18, r18
    1ab8:	33 1f       	adc	r19, r19
    1aba:	44 1f       	adc	r20, r20
    1abc:	55 1f       	adc	r21, r21
    1abe:	0e 94 98 1f 	call	0x3f30	; 0x3f30 <__udivmodsi4>
    1ac2:	ba 01       	movw	r22, r20
    1ac4:	a9 01       	movw	r20, r18
    1ac6:	41 50       	subi	r20, 0x01	; 1
    1ac8:	51 09       	sbc	r21, r1
    1aca:	61 09       	sbc	r22, r1
    1acc:	71 09       	sbc	r23, r1
    1ace:	57 ff       	sbrs	r21, 7
    1ad0:	06 c0       	rjmp	.+12     	; 0x1ade <UART1_init+0x88>
    1ad2:	82 e0       	ldi	r24, 0x02	; 2
    1ad4:	80 93 c8 00 	sts	0x00C8, r24	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
    1ad8:	5f 77       	andi	r21, 0x7F	; 127
    1ada:	66 27       	eor	r22, r22
    1adc:	77 27       	eor	r23, r23
    1ade:	bb 27       	eor	r27, r27
    1ae0:	a7 2f       	mov	r26, r23
    1ae2:	96 2f       	mov	r25, r22
    1ae4:	85 2f       	mov	r24, r21
    1ae6:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    1aea:	40 93 cc 00 	sts	0x00CC, r20	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
    1aee:	88 e9       	ldi	r24, 0x98	; 152
    1af0:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
    1af4:	86 e0       	ldi	r24, 0x06	; 6
    1af6:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
    1afa:	1f 91       	pop	r17
    1afc:	0f 91       	pop	r16
    1afe:	08 95       	ret

00001b00 <UART1_getc>:
    1b00:	f8 94       	cli
    1b02:	90 91 5a 07 	lds	r25, 0x075A	; 0x80075a <UART1_RxHead>
    1b06:	80 91 59 07 	lds	r24, 0x0759	; 0x800759 <UART1_RxTail>
    1b0a:	98 13       	cpse	r25, r24
    1b0c:	04 c0       	rjmp	.+8      	; 0x1b16 <UART1_getc+0x16>
    1b0e:	78 94       	sei
    1b10:	80 e0       	ldi	r24, 0x00	; 0
    1b12:	91 e0       	ldi	r25, 0x01	; 1
    1b14:	08 95       	ret
    1b16:	80 91 59 07 	lds	r24, 0x0759	; 0x800759 <UART1_RxTail>
    1b1a:	90 e0       	ldi	r25, 0x00	; 0
    1b1c:	01 96       	adiw	r24, 0x01	; 1
    1b1e:	8f 77       	andi	r24, 0x7F	; 127
    1b20:	99 27       	eor	r25, r25
    1b22:	80 93 59 07 	sts	0x0759, r24	; 0x800759 <UART1_RxTail>
    1b26:	78 94       	sei
    1b28:	fc 01       	movw	r30, r24
    1b2a:	e3 5a       	subi	r30, 0xA3	; 163
    1b2c:	f8 4f       	sbci	r31, 0xF8	; 248
    1b2e:	20 81       	ld	r18, Z
    1b30:	80 91 58 07 	lds	r24, 0x0758	; 0x800758 <UART1_LastRxError>
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	98 2f       	mov	r25, r24
    1b38:	88 27       	eor	r24, r24
    1b3a:	82 0f       	add	r24, r18
    1b3c:	91 1d       	adc	r25, r1
    1b3e:	08 95       	ret

00001b40 <UART1_putc>:
    1b40:	40 91 5c 07 	lds	r20, 0x075C	; 0x80075c <UART1_TxHead>
    1b44:	50 e0       	ldi	r21, 0x00	; 0
    1b46:	4f 5f       	subi	r20, 0xFF	; 255
    1b48:	5f 4f       	sbci	r21, 0xFF	; 255
    1b4a:	4f 77       	andi	r20, 0x7F	; 127
    1b4c:	55 27       	eor	r21, r21
    1b4e:	20 91 5b 07 	lds	r18, 0x075B	; 0x80075b <UART1_TxTail>
    1b52:	30 e0       	ldi	r19, 0x00	; 0
    1b54:	42 17       	cp	r20, r18
    1b56:	53 07       	cpc	r21, r19
    1b58:	d1 f3       	breq	.-12     	; 0x1b4e <UART1_putc+0xe>
    1b5a:	fa 01       	movw	r30, r20
    1b5c:	e3 52       	subi	r30, 0x23	; 35
    1b5e:	f8 4f       	sbci	r31, 0xF8	; 248
    1b60:	80 83       	st	Z, r24
    1b62:	40 93 5c 07 	sts	0x075C, r20	; 0x80075c <UART1_TxHead>
    1b66:	e9 ec       	ldi	r30, 0xC9	; 201
    1b68:	f0 e0       	ldi	r31, 0x00	; 0
    1b6a:	80 81       	ld	r24, Z
    1b6c:	80 62       	ori	r24, 0x20	; 32
    1b6e:	80 83       	st	Z, r24
    1b70:	08 95       	ret

00001b72 <UART1_available>:
    1b72:	f8 94       	cli
    1b74:	80 91 5a 07 	lds	r24, 0x075A	; 0x80075a <UART1_RxHead>
    1b78:	20 91 59 07 	lds	r18, 0x0759	; 0x800759 <UART1_RxTail>
    1b7c:	78 94       	sei
    1b7e:	90 e0       	ldi	r25, 0x00	; 0
    1b80:	80 58       	subi	r24, 0x80	; 128
    1b82:	9f 4f       	sbci	r25, 0xFF	; 255
    1b84:	82 1b       	sub	r24, r18
    1b86:	91 09       	sbc	r25, r1
    1b88:	8f 77       	andi	r24, 0x7F	; 127
    1b8a:	99 27       	eor	r25, r25
    1b8c:	08 95       	ret

00001b8e <UART1_flush>:
    1b8e:	80 91 4c 05 	lds	r24, 0x054C	; 0x80054c <UART1_Transmission_end>
    1b92:	88 23       	and	r24, r24
    1b94:	e1 f3       	breq	.-8      	; 0x1b8e <UART1_flush>
    1b96:	08 95       	ret

00001b98 <__vector_51>:
    1b98:	1f 92       	push	r1
    1b9a:	0f 92       	push	r0
    1b9c:	0f b6       	in	r0, 0x3f	; 63
    1b9e:	0f 92       	push	r0
    1ba0:	11 24       	eor	r1, r1
    1ba2:	0b b6       	in	r0, 0x3b	; 59
    1ba4:	0f 92       	push	r0
    1ba6:	2f 93       	push	r18
    1ba8:	3f 93       	push	r19
    1baa:	4f 93       	push	r20
    1bac:	5f 93       	push	r21
    1bae:	8f 93       	push	r24
    1bb0:	9f 93       	push	r25
    1bb2:	ef 93       	push	r30
    1bb4:	ff 93       	push	r31
    1bb6:	20 91 d0 00 	lds	r18, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
    1bba:	30 91 d6 00 	lds	r19, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    1bbe:	28 71       	andi	r18, 0x18	; 24
    1bc0:	80 91 55 06 	lds	r24, 0x0655	; 0x800655 <UART2_RxHead>
    1bc4:	90 e0       	ldi	r25, 0x00	; 0
    1bc6:	01 96       	adiw	r24, 0x01	; 1
    1bc8:	8f 77       	andi	r24, 0x7F	; 127
    1bca:	99 27       	eor	r25, r25
    1bcc:	40 91 54 06 	lds	r20, 0x0654	; 0x800654 <UART2_RxTail>
    1bd0:	50 e0       	ldi	r21, 0x00	; 0
    1bd2:	84 17       	cp	r24, r20
    1bd4:	95 07       	cpc	r25, r21
    1bd6:	39 f0       	breq	.+14     	; 0x1be6 <__vector_51+0x4e>
    1bd8:	80 93 55 06 	sts	0x0655, r24	; 0x800655 <UART2_RxHead>
    1bdc:	fc 01       	movw	r30, r24
    1bde:	e8 5a       	subi	r30, 0xA8	; 168
    1be0:	f9 4f       	sbci	r31, 0xF9	; 249
    1be2:	30 83       	st	Z, r19
    1be4:	01 c0       	rjmp	.+2      	; 0x1be8 <__vector_51+0x50>
    1be6:	22 e0       	ldi	r18, 0x02	; 2
    1be8:	20 93 53 06 	sts	0x0653, r18	; 0x800653 <UART2_LastRxError>
    1bec:	ff 91       	pop	r31
    1bee:	ef 91       	pop	r30
    1bf0:	9f 91       	pop	r25
    1bf2:	8f 91       	pop	r24
    1bf4:	5f 91       	pop	r21
    1bf6:	4f 91       	pop	r20
    1bf8:	3f 91       	pop	r19
    1bfa:	2f 91       	pop	r18
    1bfc:	0f 90       	pop	r0
    1bfe:	0b be       	out	0x3b, r0	; 59
    1c00:	0f 90       	pop	r0
    1c02:	0f be       	out	0x3f, r0	; 63
    1c04:	0f 90       	pop	r0
    1c06:	1f 90       	pop	r1
    1c08:	18 95       	reti

00001c0a <__vector_52>:
    1c0a:	1f 92       	push	r1
    1c0c:	0f 92       	push	r0
    1c0e:	0f b6       	in	r0, 0x3f	; 63
    1c10:	0f 92       	push	r0
    1c12:	11 24       	eor	r1, r1
    1c14:	0b b6       	in	r0, 0x3b	; 59
    1c16:	0f 92       	push	r0
    1c18:	8f 93       	push	r24
    1c1a:	9f 93       	push	r25
    1c1c:	ef 93       	push	r30
    1c1e:	ff 93       	push	r31
    1c20:	90 91 57 06 	lds	r25, 0x0657	; 0x800657 <UART2_TxHead>
    1c24:	80 91 56 06 	lds	r24, 0x0656	; 0x800656 <UART2_TxTail>
    1c28:	98 17       	cp	r25, r24
    1c2a:	89 f0       	breq	.+34     	; 0x1c4e <__vector_52+0x44>
    1c2c:	80 91 56 06 	lds	r24, 0x0656	; 0x800656 <UART2_TxTail>
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	01 96       	adiw	r24, 0x01	; 1
    1c34:	8f 77       	andi	r24, 0x7F	; 127
    1c36:	99 27       	eor	r25, r25
    1c38:	80 93 56 06 	sts	0x0656, r24	; 0x800656 <UART2_TxTail>
    1c3c:	fc 01       	movw	r30, r24
    1c3e:	e8 52       	subi	r30, 0x28	; 40
    1c40:	f9 4f       	sbci	r31, 0xF9	; 249
    1c42:	80 81       	ld	r24, Z
    1c44:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    1c48:	10 92 4b 05 	sts	0x054B, r1	; 0x80054b <UART2_Transmission_end>
    1c4c:	08 c0       	rjmp	.+16     	; 0x1c5e <__vector_52+0x54>
    1c4e:	e1 ed       	ldi	r30, 0xD1	; 209
    1c50:	f0 e0       	ldi	r31, 0x00	; 0
    1c52:	80 81       	ld	r24, Z
    1c54:	8f 7d       	andi	r24, 0xDF	; 223
    1c56:	80 83       	st	Z, r24
    1c58:	81 e0       	ldi	r24, 0x01	; 1
    1c5a:	80 93 4b 05 	sts	0x054B, r24	; 0x80054b <UART2_Transmission_end>
    1c5e:	ff 91       	pop	r31
    1c60:	ef 91       	pop	r30
    1c62:	9f 91       	pop	r25
    1c64:	8f 91       	pop	r24
    1c66:	0f 90       	pop	r0
    1c68:	0b be       	out	0x3b, r0	; 59
    1c6a:	0f 90       	pop	r0
    1c6c:	0f be       	out	0x3f, r0	; 63
    1c6e:	0f 90       	pop	r0
    1c70:	1f 90       	pop	r1
    1c72:	18 95       	reti

00001c74 <UART2_init>:
    1c74:	0f 93       	push	r16
    1c76:	1f 93       	push	r17
    1c78:	8b 01       	movw	r16, r22
    1c7a:	9c 01       	movw	r18, r24
    1c7c:	f8 94       	cli
    1c7e:	10 92 57 06 	sts	0x0657, r1	; 0x800657 <UART2_TxHead>
    1c82:	10 92 56 06 	sts	0x0656, r1	; 0x800656 <UART2_TxTail>
    1c86:	10 92 55 06 	sts	0x0655, r1	; 0x800655 <UART2_RxHead>
    1c8a:	10 92 54 06 	sts	0x0654, r1	; 0x800654 <UART2_RxTail>
    1c8e:	78 94       	sei
    1c90:	dc 01       	movw	r26, r24
    1c92:	cb 01       	movw	r24, r22
    1c94:	80 58       	subi	r24, 0x80	; 128
    1c96:	9b 47       	sbci	r25, 0x7B	; 123
    1c98:	a1 4e       	sbci	r26, 0xE1	; 225
    1c9a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c9c:	88 0f       	add	r24, r24
    1c9e:	99 1f       	adc	r25, r25
    1ca0:	aa 1f       	adc	r26, r26
    1ca2:	bb 1f       	adc	r27, r27
    1ca4:	88 0f       	add	r24, r24
    1ca6:	99 1f       	adc	r25, r25
    1ca8:	aa 1f       	adc	r26, r26
    1caa:	bb 1f       	adc	r27, r27
    1cac:	bc 01       	movw	r22, r24
    1cae:	cd 01       	movw	r24, r26
    1cb0:	66 0f       	add	r22, r22
    1cb2:	77 1f       	adc	r23, r23
    1cb4:	88 1f       	adc	r24, r24
    1cb6:	99 1f       	adc	r25, r25
    1cb8:	00 0f       	add	r16, r16
    1cba:	11 1f       	adc	r17, r17
    1cbc:	22 1f       	adc	r18, r18
    1cbe:	33 1f       	adc	r19, r19
    1cc0:	00 0f       	add	r16, r16
    1cc2:	11 1f       	adc	r17, r17
    1cc4:	22 1f       	adc	r18, r18
    1cc6:	33 1f       	adc	r19, r19
    1cc8:	a9 01       	movw	r20, r18
    1cca:	98 01       	movw	r18, r16
    1ccc:	22 0f       	add	r18, r18
    1cce:	33 1f       	adc	r19, r19
    1cd0:	44 1f       	adc	r20, r20
    1cd2:	55 1f       	adc	r21, r21
    1cd4:	22 0f       	add	r18, r18
    1cd6:	33 1f       	adc	r19, r19
    1cd8:	44 1f       	adc	r20, r20
    1cda:	55 1f       	adc	r21, r21
    1cdc:	0e 94 98 1f 	call	0x3f30	; 0x3f30 <__udivmodsi4>
    1ce0:	ba 01       	movw	r22, r20
    1ce2:	a9 01       	movw	r20, r18
    1ce4:	41 50       	subi	r20, 0x01	; 1
    1ce6:	51 09       	sbc	r21, r1
    1ce8:	61 09       	sbc	r22, r1
    1cea:	71 09       	sbc	r23, r1
    1cec:	57 ff       	sbrs	r21, 7
    1cee:	06 c0       	rjmp	.+12     	; 0x1cfc <UART2_init+0x88>
    1cf0:	82 e0       	ldi	r24, 0x02	; 2
    1cf2:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
    1cf6:	5f 77       	andi	r21, 0x7F	; 127
    1cf8:	66 27       	eor	r22, r22
    1cfa:	77 27       	eor	r23, r23
    1cfc:	bb 27       	eor	r27, r27
    1cfe:	a7 2f       	mov	r26, r23
    1d00:	96 2f       	mov	r25, r22
    1d02:	85 2f       	mov	r24, r21
    1d04:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7000d5>
    1d08:	40 93 d4 00 	sts	0x00D4, r20	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7000d4>
    1d0c:	88 e9       	ldi	r24, 0x98	; 152
    1d0e:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7000d1>
    1d12:	86 e0       	ldi	r24, 0x06	; 6
    1d14:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7000d2>
    1d18:	1f 91       	pop	r17
    1d1a:	0f 91       	pop	r16
    1d1c:	08 95       	ret

00001d1e <UART2_getc>:
    1d1e:	90 91 55 06 	lds	r25, 0x0655	; 0x800655 <UART2_RxHead>
    1d22:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <UART2_RxTail>
    1d26:	98 17       	cp	r25, r24
    1d28:	a1 f0       	breq	.+40     	; 0x1d52 <UART2_getc+0x34>
    1d2a:	80 91 54 06 	lds	r24, 0x0654	; 0x800654 <UART2_RxTail>
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	01 96       	adiw	r24, 0x01	; 1
    1d32:	8f 77       	andi	r24, 0x7F	; 127
    1d34:	99 27       	eor	r25, r25
    1d36:	80 93 54 06 	sts	0x0654, r24	; 0x800654 <UART2_RxTail>
    1d3a:	fc 01       	movw	r30, r24
    1d3c:	e8 5a       	subi	r30, 0xA8	; 168
    1d3e:	f9 4f       	sbci	r31, 0xF9	; 249
    1d40:	20 81       	ld	r18, Z
    1d42:	80 91 53 06 	lds	r24, 0x0653	; 0x800653 <UART2_LastRxError>
    1d46:	90 e0       	ldi	r25, 0x00	; 0
    1d48:	98 2f       	mov	r25, r24
    1d4a:	88 27       	eor	r24, r24
    1d4c:	82 0f       	add	r24, r18
    1d4e:	91 1d       	adc	r25, r1
    1d50:	08 95       	ret
    1d52:	80 e0       	ldi	r24, 0x00	; 0
    1d54:	91 e0       	ldi	r25, 0x01	; 1
    1d56:	08 95       	ret

00001d58 <UART2_putc>:
    1d58:	40 91 57 06 	lds	r20, 0x0657	; 0x800657 <UART2_TxHead>
    1d5c:	50 e0       	ldi	r21, 0x00	; 0
    1d5e:	4f 5f       	subi	r20, 0xFF	; 255
    1d60:	5f 4f       	sbci	r21, 0xFF	; 255
    1d62:	4f 77       	andi	r20, 0x7F	; 127
    1d64:	55 27       	eor	r21, r21
    1d66:	20 91 56 06 	lds	r18, 0x0656	; 0x800656 <UART2_TxTail>
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	42 17       	cp	r20, r18
    1d6e:	53 07       	cpc	r21, r19
    1d70:	d1 f3       	breq	.-12     	; 0x1d66 <UART2_putc+0xe>
    1d72:	fa 01       	movw	r30, r20
    1d74:	e8 52       	subi	r30, 0x28	; 40
    1d76:	f9 4f       	sbci	r31, 0xF9	; 249
    1d78:	80 83       	st	Z, r24
    1d7a:	40 93 57 06 	sts	0x0657, r20	; 0x800657 <UART2_TxHead>
    1d7e:	e1 ed       	ldi	r30, 0xD1	; 209
    1d80:	f0 e0       	ldi	r31, 0x00	; 0
    1d82:	80 81       	ld	r24, Z
    1d84:	80 62       	ori	r24, 0x20	; 32
    1d86:	80 83       	st	Z, r24
    1d88:	08 95       	ret

00001d8a <UART2_available>:
    1d8a:	f8 94       	cli
    1d8c:	80 91 55 06 	lds	r24, 0x0655	; 0x800655 <UART2_RxHead>
    1d90:	20 91 54 06 	lds	r18, 0x0654	; 0x800654 <UART2_RxTail>
    1d94:	78 94       	sei
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	80 58       	subi	r24, 0x80	; 128
    1d9a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d9c:	82 1b       	sub	r24, r18
    1d9e:	91 09       	sbc	r25, r1
    1da0:	8f 77       	andi	r24, 0x7F	; 127
    1da2:	99 27       	eor	r25, r25
    1da4:	08 95       	ret

00001da6 <UART2_flush>:
    1da6:	80 91 4b 05 	lds	r24, 0x054B	; 0x80054b <UART2_Transmission_end>
    1daa:	88 23       	and	r24, r24
    1dac:	e1 f3       	breq	.-8      	; 0x1da6 <UART2_flush>
    1dae:	08 95       	ret

00001db0 <__vector_54>:
    1db0:	1f 92       	push	r1
    1db2:	0f 92       	push	r0
    1db4:	0f b6       	in	r0, 0x3f	; 63
    1db6:	0f 92       	push	r0
    1db8:	11 24       	eor	r1, r1
    1dba:	0b b6       	in	r0, 0x3b	; 59
    1dbc:	0f 92       	push	r0
    1dbe:	2f 93       	push	r18
    1dc0:	3f 93       	push	r19
    1dc2:	4f 93       	push	r20
    1dc4:	5f 93       	push	r21
    1dc6:	8f 93       	push	r24
    1dc8:	9f 93       	push	r25
    1dca:	ef 93       	push	r30
    1dcc:	ff 93       	push	r31
    1dce:	20 91 30 01 	lds	r18, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
    1dd2:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    1dd6:	28 71       	andi	r18, 0x18	; 24
    1dd8:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <UART3_RxHead>
    1ddc:	90 e0       	ldi	r25, 0x00	; 0
    1dde:	01 96       	adiw	r24, 0x01	; 1
    1de0:	8f 77       	andi	r24, 0x7F	; 127
    1de2:	99 27       	eor	r25, r25
    1de4:	40 91 4f 05 	lds	r20, 0x054F	; 0x80054f <UART3_RxTail>
    1de8:	50 e0       	ldi	r21, 0x00	; 0
    1dea:	84 17       	cp	r24, r20
    1dec:	95 07       	cpc	r25, r21
    1dee:	39 f0       	breq	.+14     	; 0x1dfe <__vector_54+0x4e>
    1df0:	80 93 50 05 	sts	0x0550, r24	; 0x800550 <UART3_RxHead>
    1df4:	fc 01       	movw	r30, r24
    1df6:	ed 5a       	subi	r30, 0xAD	; 173
    1df8:	fa 4f       	sbci	r31, 0xFA	; 250
    1dfa:	30 83       	st	Z, r19
    1dfc:	01 c0       	rjmp	.+2      	; 0x1e00 <__vector_54+0x50>
    1dfe:	22 e0       	ldi	r18, 0x02	; 2
    1e00:	20 93 4e 05 	sts	0x054E, r18	; 0x80054e <UART3_LastRxError>
    1e04:	ff 91       	pop	r31
    1e06:	ef 91       	pop	r30
    1e08:	9f 91       	pop	r25
    1e0a:	8f 91       	pop	r24
    1e0c:	5f 91       	pop	r21
    1e0e:	4f 91       	pop	r20
    1e10:	3f 91       	pop	r19
    1e12:	2f 91       	pop	r18
    1e14:	0f 90       	pop	r0
    1e16:	0b be       	out	0x3b, r0	; 59
    1e18:	0f 90       	pop	r0
    1e1a:	0f be       	out	0x3f, r0	; 63
    1e1c:	0f 90       	pop	r0
    1e1e:	1f 90       	pop	r1
    1e20:	18 95       	reti

00001e22 <__vector_55>:
    1e22:	1f 92       	push	r1
    1e24:	0f 92       	push	r0
    1e26:	0f b6       	in	r0, 0x3f	; 63
    1e28:	0f 92       	push	r0
    1e2a:	11 24       	eor	r1, r1
    1e2c:	0b b6       	in	r0, 0x3b	; 59
    1e2e:	0f 92       	push	r0
    1e30:	8f 93       	push	r24
    1e32:	9f 93       	push	r25
    1e34:	ef 93       	push	r30
    1e36:	ff 93       	push	r31
    1e38:	90 91 52 05 	lds	r25, 0x0552	; 0x800552 <UART3_TxHead>
    1e3c:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <UART3_TxTail>
    1e40:	98 17       	cp	r25, r24
    1e42:	89 f0       	breq	.+34     	; 0x1e66 <__vector_55+0x44>
    1e44:	80 91 51 05 	lds	r24, 0x0551	; 0x800551 <UART3_TxTail>
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	01 96       	adiw	r24, 0x01	; 1
    1e4c:	8f 77       	andi	r24, 0x7F	; 127
    1e4e:	99 27       	eor	r25, r25
    1e50:	80 93 51 05 	sts	0x0551, r24	; 0x800551 <UART3_TxTail>
    1e54:	fc 01       	movw	r30, r24
    1e56:	ed 52       	subi	r30, 0x2D	; 45
    1e58:	fa 4f       	sbci	r31, 0xFA	; 250
    1e5a:	80 81       	ld	r24, Z
    1e5c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    1e60:	10 92 4a 05 	sts	0x054A, r1	; 0x80054a <UART3_Transmission_end>
    1e64:	08 c0       	rjmp	.+16     	; 0x1e76 <__vector_55+0x54>
    1e66:	e1 e3       	ldi	r30, 0x31	; 49
    1e68:	f1 e0       	ldi	r31, 0x01	; 1
    1e6a:	80 81       	ld	r24, Z
    1e6c:	8f 7d       	andi	r24, 0xDF	; 223
    1e6e:	80 83       	st	Z, r24
    1e70:	81 e0       	ldi	r24, 0x01	; 1
    1e72:	80 93 4a 05 	sts	0x054A, r24	; 0x80054a <UART3_Transmission_end>
    1e76:	ff 91       	pop	r31
    1e78:	ef 91       	pop	r30
    1e7a:	9f 91       	pop	r25
    1e7c:	8f 91       	pop	r24
    1e7e:	0f 90       	pop	r0
    1e80:	0b be       	out	0x3b, r0	; 59
    1e82:	0f 90       	pop	r0
    1e84:	0f be       	out	0x3f, r0	; 63
    1e86:	0f 90       	pop	r0
    1e88:	1f 90       	pop	r1
    1e8a:	18 95       	reti

00001e8c <UART3_init>:
    1e8c:	0f 93       	push	r16
    1e8e:	1f 93       	push	r17
    1e90:	8b 01       	movw	r16, r22
    1e92:	9c 01       	movw	r18, r24
    1e94:	f8 94       	cli
    1e96:	10 92 52 05 	sts	0x0552, r1	; 0x800552 <UART3_TxHead>
    1e9a:	10 92 51 05 	sts	0x0551, r1	; 0x800551 <UART3_TxTail>
    1e9e:	10 92 50 05 	sts	0x0550, r1	; 0x800550 <UART3_RxHead>
    1ea2:	10 92 4f 05 	sts	0x054F, r1	; 0x80054f <UART3_RxTail>
    1ea6:	78 94       	sei
    1ea8:	dc 01       	movw	r26, r24
    1eaa:	cb 01       	movw	r24, r22
    1eac:	80 58       	subi	r24, 0x80	; 128
    1eae:	9b 47       	sbci	r25, 0x7B	; 123
    1eb0:	a1 4e       	sbci	r26, 0xE1	; 225
    1eb2:	bf 4f       	sbci	r27, 0xFF	; 255
    1eb4:	88 0f       	add	r24, r24
    1eb6:	99 1f       	adc	r25, r25
    1eb8:	aa 1f       	adc	r26, r26
    1eba:	bb 1f       	adc	r27, r27
    1ebc:	88 0f       	add	r24, r24
    1ebe:	99 1f       	adc	r25, r25
    1ec0:	aa 1f       	adc	r26, r26
    1ec2:	bb 1f       	adc	r27, r27
    1ec4:	bc 01       	movw	r22, r24
    1ec6:	cd 01       	movw	r24, r26
    1ec8:	66 0f       	add	r22, r22
    1eca:	77 1f       	adc	r23, r23
    1ecc:	88 1f       	adc	r24, r24
    1ece:	99 1f       	adc	r25, r25
    1ed0:	00 0f       	add	r16, r16
    1ed2:	11 1f       	adc	r17, r17
    1ed4:	22 1f       	adc	r18, r18
    1ed6:	33 1f       	adc	r19, r19
    1ed8:	00 0f       	add	r16, r16
    1eda:	11 1f       	adc	r17, r17
    1edc:	22 1f       	adc	r18, r18
    1ede:	33 1f       	adc	r19, r19
    1ee0:	a9 01       	movw	r20, r18
    1ee2:	98 01       	movw	r18, r16
    1ee4:	22 0f       	add	r18, r18
    1ee6:	33 1f       	adc	r19, r19
    1ee8:	44 1f       	adc	r20, r20
    1eea:	55 1f       	adc	r21, r21
    1eec:	22 0f       	add	r18, r18
    1eee:	33 1f       	adc	r19, r19
    1ef0:	44 1f       	adc	r20, r20
    1ef2:	55 1f       	adc	r21, r21
    1ef4:	0e 94 98 1f 	call	0x3f30	; 0x3f30 <__udivmodsi4>
    1ef8:	ba 01       	movw	r22, r20
    1efa:	a9 01       	movw	r20, r18
    1efc:	41 50       	subi	r20, 0x01	; 1
    1efe:	51 09       	sbc	r21, r1
    1f00:	61 09       	sbc	r22, r1
    1f02:	71 09       	sbc	r23, r1
    1f04:	57 ff       	sbrs	r21, 7
    1f06:	06 c0       	rjmp	.+12     	; 0x1f14 <UART3_init+0x88>
    1f08:	82 e0       	ldi	r24, 0x02	; 2
    1f0a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
    1f0e:	5f 77       	andi	r21, 0x7F	; 127
    1f10:	66 27       	eor	r22, r22
    1f12:	77 27       	eor	r23, r23
    1f14:	bb 27       	eor	r27, r27
    1f16:	a7 2f       	mov	r26, r23
    1f18:	96 2f       	mov	r25, r22
    1f1a:	85 2f       	mov	r24, r21
    1f1c:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
    1f20:	40 93 34 01 	sts	0x0134, r20	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
    1f24:	88 e9       	ldi	r24, 0x98	; 152
    1f26:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
    1f2a:	86 e0       	ldi	r24, 0x06	; 6
    1f2c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x700132>
    1f30:	1f 91       	pop	r17
    1f32:	0f 91       	pop	r16
    1f34:	08 95       	ret

00001f36 <UART3_getc>:
    1f36:	90 91 50 05 	lds	r25, 0x0550	; 0x800550 <UART3_RxHead>
    1f3a:	80 91 4f 05 	lds	r24, 0x054F	; 0x80054f <UART3_RxTail>
    1f3e:	98 17       	cp	r25, r24
    1f40:	a1 f0       	breq	.+40     	; 0x1f6a <UART3_getc+0x34>
    1f42:	80 91 4f 05 	lds	r24, 0x054F	; 0x80054f <UART3_RxTail>
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	01 96       	adiw	r24, 0x01	; 1
    1f4a:	8f 77       	andi	r24, 0x7F	; 127
    1f4c:	99 27       	eor	r25, r25
    1f4e:	80 93 4f 05 	sts	0x054F, r24	; 0x80054f <UART3_RxTail>
    1f52:	fc 01       	movw	r30, r24
    1f54:	ed 5a       	subi	r30, 0xAD	; 173
    1f56:	fa 4f       	sbci	r31, 0xFA	; 250
    1f58:	20 81       	ld	r18, Z
    1f5a:	80 91 4e 05 	lds	r24, 0x054E	; 0x80054e <UART3_LastRxError>
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	98 2f       	mov	r25, r24
    1f62:	88 27       	eor	r24, r24
    1f64:	82 0f       	add	r24, r18
    1f66:	91 1d       	adc	r25, r1
    1f68:	08 95       	ret
    1f6a:	80 e0       	ldi	r24, 0x00	; 0
    1f6c:	91 e0       	ldi	r25, 0x01	; 1
    1f6e:	08 95       	ret

00001f70 <UART3_putc>:
    1f70:	40 91 52 05 	lds	r20, 0x0552	; 0x800552 <UART3_TxHead>
    1f74:	50 e0       	ldi	r21, 0x00	; 0
    1f76:	4f 5f       	subi	r20, 0xFF	; 255
    1f78:	5f 4f       	sbci	r21, 0xFF	; 255
    1f7a:	4f 77       	andi	r20, 0x7F	; 127
    1f7c:	55 27       	eor	r21, r21
    1f7e:	20 91 51 05 	lds	r18, 0x0551	; 0x800551 <UART3_TxTail>
    1f82:	30 e0       	ldi	r19, 0x00	; 0
    1f84:	42 17       	cp	r20, r18
    1f86:	53 07       	cpc	r21, r19
    1f88:	d1 f3       	breq	.-12     	; 0x1f7e <UART3_putc+0xe>
    1f8a:	fa 01       	movw	r30, r20
    1f8c:	ed 52       	subi	r30, 0x2D	; 45
    1f8e:	fa 4f       	sbci	r31, 0xFA	; 250
    1f90:	80 83       	st	Z, r24
    1f92:	40 93 52 05 	sts	0x0552, r20	; 0x800552 <UART3_TxHead>
    1f96:	e1 e3       	ldi	r30, 0x31	; 49
    1f98:	f1 e0       	ldi	r31, 0x01	; 1
    1f9a:	80 81       	ld	r24, Z
    1f9c:	80 62       	ori	r24, 0x20	; 32
    1f9e:	80 83       	st	Z, r24
    1fa0:	08 95       	ret

00001fa2 <UART3_available>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1fa2:	f8 94       	cli
    1fa4:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <UART3_RxHead>
    1fa8:	20 91 4f 05 	lds	r18, 0x054F	; 0x80054f <UART3_RxTail>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    1fac:	78 94       	sei
    1fae:	90 e0       	ldi	r25, 0x00	; 0
    1fb0:	80 58       	subi	r24, 0x80	; 128
    1fb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb4:	82 1b       	sub	r24, r18
    1fb6:	91 09       	sbc	r25, r1
    1fb8:	8f 77       	andi	r24, 0x7F	; 127
    1fba:	99 27       	eor	r25, r25
    1fbc:	08 95       	ret

00001fbe <UART3_flush>:
    1fbe:	80 91 4a 05 	lds	r24, 0x054A	; 0x80054a <UART3_Transmission_end>
    1fc2:	88 23       	and	r24, r24
    1fc4:	e1 f3       	breq	.-8      	; 0x1fbe <UART3_flush>
    1fc6:	08 95       	ret

00001fc8 <vApplicationStackOverflowHook>:
    1fc8:	27 9a       	sbi	0x04, 7	; 4
    1fca:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1fcc:	2f e7       	ldi	r18, 0x7F	; 127
    1fce:	8a e1       	ldi	r24, 0x1A	; 26
    1fd0:	96 e0       	ldi	r25, 0x06	; 6
    1fd2:	21 50       	subi	r18, 0x01	; 1
    1fd4:	80 40       	sbci	r24, 0x00	; 0
    1fd6:	90 40       	sbci	r25, 0x00	; 0
    1fd8:	e1 f7       	brne	.-8      	; 0x1fd2 <vApplicationStackOverflowHook+0xa>
    1fda:	00 c0       	rjmp	.+0      	; 0x1fdc <vApplicationStackOverflowHook+0x14>
    1fdc:	00 00       	nop
    1fde:	1f 9a       	sbi	0x03, 7	; 3
    1fe0:	f5 cf       	rjmp	.-22     	; 0x1fcc <vApplicationStackOverflowHook+0x4>

00001fe2 <vApplicationGetIdleTaskMemory>:
    1fe2:	24 e3       	ldi	r18, 0x34	; 52
    1fe4:	3a e0       	ldi	r19, 0x0A	; 10
    1fe6:	fc 01       	movw	r30, r24
    1fe8:	31 83       	std	Z+1, r19	; 0x01
    1fea:	20 83       	st	Z, r18
    1fec:	8f ed       	ldi	r24, 0xDF	; 223
    1fee:	99 e0       	ldi	r25, 0x09	; 9
    1ff0:	fb 01       	movw	r30, r22
    1ff2:	91 83       	std	Z+1, r25	; 0x01
    1ff4:	80 83       	st	Z, r24
    1ff6:	85 e5       	ldi	r24, 0x55	; 85
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	fa 01       	movw	r30, r20
    1ffc:	91 83       	std	Z+1, r25	; 0x01
    1ffe:	80 83       	st	Z, r24
    2000:	08 95       	ret

00002002 <vApplicationGetTimerTaskMemory>:
    2002:	27 eb       	ldi	r18, 0xB7	; 183
    2004:	39 e0       	ldi	r19, 0x09	; 9
    2006:	fc 01       	movw	r30, r24
    2008:	31 83       	std	Z+1, r19	; 0x01
    200a:	20 83       	st	Z, r18
    200c:	82 e6       	ldi	r24, 0x62	; 98
    200e:	99 e0       	ldi	r25, 0x09	; 9
    2010:	fb 01       	movw	r30, r22
    2012:	91 83       	std	Z+1, r25	; 0x01
    2014:	80 83       	st	Z, r24
    2016:	85 e5       	ldi	r24, 0x55	; 85
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	fa 01       	movw	r30, r20
    201c:	91 83       	std	Z+1, r25	; 0x01
    201e:	80 83       	st	Z, r24
    2020:	08 95       	ret

00002022 <vListInitialise>:
    2022:	fc 01       	movw	r30, r24
    2024:	03 96       	adiw	r24, 0x03	; 3
    2026:	92 83       	std	Z+2, r25	; 0x02
    2028:	81 83       	std	Z+1, r24	; 0x01
    202a:	2f ef       	ldi	r18, 0xFF	; 255
    202c:	3f ef       	ldi	r19, 0xFF	; 255
    202e:	34 83       	std	Z+4, r19	; 0x04
    2030:	23 83       	std	Z+3, r18	; 0x03
    2032:	96 83       	std	Z+6, r25	; 0x06
    2034:	85 83       	std	Z+5, r24	; 0x05
    2036:	90 87       	std	Z+8, r25	; 0x08
    2038:	87 83       	std	Z+7, r24	; 0x07
    203a:	10 82       	st	Z, r1
    203c:	08 95       	ret

0000203e <vListInitialiseItem>:
    203e:	fc 01       	movw	r30, r24
    2040:	11 86       	std	Z+9, r1	; 0x09
    2042:	10 86       	std	Z+8, r1	; 0x08
    2044:	08 95       	ret

00002046 <vListInsertEnd>:
    2046:	cf 93       	push	r28
    2048:	df 93       	push	r29
    204a:	9c 01       	movw	r18, r24
    204c:	fb 01       	movw	r30, r22
    204e:	dc 01       	movw	r26, r24
    2050:	11 96       	adiw	r26, 0x01	; 1
    2052:	cd 91       	ld	r28, X+
    2054:	dc 91       	ld	r29, X
    2056:	12 97       	sbiw	r26, 0x02	; 2
    2058:	d3 83       	std	Z+3, r29	; 0x03
    205a:	c2 83       	std	Z+2, r28	; 0x02
    205c:	8c 81       	ldd	r24, Y+4	; 0x04
    205e:	9d 81       	ldd	r25, Y+5	; 0x05
    2060:	95 83       	std	Z+5, r25	; 0x05
    2062:	84 83       	std	Z+4, r24	; 0x04
    2064:	8c 81       	ldd	r24, Y+4	; 0x04
    2066:	9d 81       	ldd	r25, Y+5	; 0x05
    2068:	dc 01       	movw	r26, r24
    206a:	13 96       	adiw	r26, 0x03	; 3
    206c:	7c 93       	st	X, r23
    206e:	6e 93       	st	-X, r22
    2070:	12 97       	sbiw	r26, 0x02	; 2
    2072:	7d 83       	std	Y+5, r23	; 0x05
    2074:	6c 83       	std	Y+4, r22	; 0x04
    2076:	31 87       	std	Z+9, r19	; 0x09
    2078:	20 87       	std	Z+8, r18	; 0x08
    207a:	f9 01       	movw	r30, r18
    207c:	80 81       	ld	r24, Z
    207e:	8f 5f       	subi	r24, 0xFF	; 255
    2080:	80 83       	st	Z, r24
    2082:	df 91       	pop	r29
    2084:	cf 91       	pop	r28
    2086:	08 95       	ret

00002088 <vListInsert>:
    2088:	cf 93       	push	r28
    208a:	df 93       	push	r29
    208c:	eb 01       	movw	r28, r22
    208e:	48 81       	ld	r20, Y
    2090:	59 81       	ldd	r21, Y+1	; 0x01
    2092:	4f 3f       	cpi	r20, 0xFF	; 255
    2094:	2f ef       	ldi	r18, 0xFF	; 255
    2096:	52 07       	cpc	r21, r18
    2098:	21 f4       	brne	.+8      	; 0x20a2 <vListInsert+0x1a>
    209a:	fc 01       	movw	r30, r24
    209c:	a7 81       	ldd	r26, Z+7	; 0x07
    209e:	b0 85       	ldd	r27, Z+8	; 0x08
    20a0:	0d c0       	rjmp	.+26     	; 0x20bc <vListInsert+0x34>
    20a2:	dc 01       	movw	r26, r24
    20a4:	13 96       	adiw	r26, 0x03	; 3
    20a6:	01 c0       	rjmp	.+2      	; 0x20aa <vListInsert+0x22>
    20a8:	df 01       	movw	r26, r30
    20aa:	12 96       	adiw	r26, 0x02	; 2
    20ac:	ed 91       	ld	r30, X+
    20ae:	fc 91       	ld	r31, X
    20b0:	13 97       	sbiw	r26, 0x03	; 3
    20b2:	20 81       	ld	r18, Z
    20b4:	31 81       	ldd	r19, Z+1	; 0x01
    20b6:	42 17       	cp	r20, r18
    20b8:	53 07       	cpc	r21, r19
    20ba:	b0 f7       	brcc	.-20     	; 0x20a8 <vListInsert+0x20>
    20bc:	12 96       	adiw	r26, 0x02	; 2
    20be:	ed 91       	ld	r30, X+
    20c0:	fc 91       	ld	r31, X
    20c2:	13 97       	sbiw	r26, 0x03	; 3
    20c4:	fb 83       	std	Y+3, r31	; 0x03
    20c6:	ea 83       	std	Y+2, r30	; 0x02
    20c8:	d5 83       	std	Z+5, r29	; 0x05
    20ca:	c4 83       	std	Z+4, r28	; 0x04
    20cc:	bd 83       	std	Y+5, r27	; 0x05
    20ce:	ac 83       	std	Y+4, r26	; 0x04
    20d0:	13 96       	adiw	r26, 0x03	; 3
    20d2:	dc 93       	st	X, r29
    20d4:	ce 93       	st	-X, r28
    20d6:	12 97       	sbiw	r26, 0x02	; 2
    20d8:	99 87       	std	Y+9, r25	; 0x09
    20da:	88 87       	std	Y+8, r24	; 0x08
    20dc:	fc 01       	movw	r30, r24
    20de:	20 81       	ld	r18, Z
    20e0:	2f 5f       	subi	r18, 0xFF	; 255
    20e2:	20 83       	st	Z, r18
    20e4:	df 91       	pop	r29
    20e6:	cf 91       	pop	r28
    20e8:	08 95       	ret

000020ea <uxListRemove>:
    20ea:	cf 93       	push	r28
    20ec:	df 93       	push	r29
    20ee:	fc 01       	movw	r30, r24
    20f0:	a0 85       	ldd	r26, Z+8	; 0x08
    20f2:	b1 85       	ldd	r27, Z+9	; 0x09
    20f4:	c2 81       	ldd	r28, Z+2	; 0x02
    20f6:	d3 81       	ldd	r29, Z+3	; 0x03
    20f8:	84 81       	ldd	r24, Z+4	; 0x04
    20fa:	95 81       	ldd	r25, Z+5	; 0x05
    20fc:	9d 83       	std	Y+5, r25	; 0x05
    20fe:	8c 83       	std	Y+4, r24	; 0x04
    2100:	c4 81       	ldd	r28, Z+4	; 0x04
    2102:	d5 81       	ldd	r29, Z+5	; 0x05
    2104:	82 81       	ldd	r24, Z+2	; 0x02
    2106:	93 81       	ldd	r25, Z+3	; 0x03
    2108:	9b 83       	std	Y+3, r25	; 0x03
    210a:	8a 83       	std	Y+2, r24	; 0x02
    210c:	11 96       	adiw	r26, 0x01	; 1
    210e:	8d 91       	ld	r24, X+
    2110:	9c 91       	ld	r25, X
    2112:	12 97       	sbiw	r26, 0x02	; 2
    2114:	e8 17       	cp	r30, r24
    2116:	f9 07       	cpc	r31, r25
    2118:	31 f4       	brne	.+12     	; 0x2126 <uxListRemove+0x3c>
    211a:	84 81       	ldd	r24, Z+4	; 0x04
    211c:	95 81       	ldd	r25, Z+5	; 0x05
    211e:	12 96       	adiw	r26, 0x02	; 2
    2120:	9c 93       	st	X, r25
    2122:	8e 93       	st	-X, r24
    2124:	11 97       	sbiw	r26, 0x01	; 1
    2126:	11 86       	std	Z+9, r1	; 0x09
    2128:	10 86       	std	Z+8, r1	; 0x08
    212a:	8c 91       	ld	r24, X
    212c:	81 50       	subi	r24, 0x01	; 1
    212e:	8c 93       	st	X, r24
    2130:	8c 91       	ld	r24, X
    2132:	df 91       	pop	r29
    2134:	cf 91       	pop	r28
    2136:	08 95       	ret

00002138 <pxPortInitialiseStack>:
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    2138:	31 e1       	ldi	r19, 0x11	; 17
    213a:	fc 01       	movw	r30, r24
    213c:	30 83       	st	Z, r19
    213e:	31 97       	sbiw	r30, 0x01	; 1
    2140:	22 e2       	ldi	r18, 0x22	; 34
    2142:	20 83       	st	Z, r18
    2144:	31 97       	sbiw	r30, 0x01	; 1
    2146:	a3 e3       	ldi	r26, 0x33	; 51
    2148:	a0 83       	st	Z, r26
    214a:	31 97       	sbiw	r30, 0x01	; 1
    214c:	60 83       	st	Z, r22
    214e:	31 97       	sbiw	r30, 0x01	; 1
    2150:	70 83       	st	Z, r23
    2152:	31 97       	sbiw	r30, 0x01	; 1
    2154:	10 82       	st	Z, r1
    2156:	31 97       	sbiw	r30, 0x01	; 1
    2158:	10 82       	st	Z, r1
    215a:	31 97       	sbiw	r30, 0x01	; 1
    215c:	60 e8       	ldi	r22, 0x80	; 128
    215e:	60 83       	st	Z, r22
    2160:	31 97       	sbiw	r30, 0x01	; 1
    2162:	10 82       	st	Z, r1
    2164:	31 97       	sbiw	r30, 0x01	; 1
    2166:	10 82       	st	Z, r1
    2168:	31 97       	sbiw	r30, 0x01	; 1
    216a:	10 82       	st	Z, r1
    216c:	31 97       	sbiw	r30, 0x01	; 1
    216e:	62 e0       	ldi	r22, 0x02	; 2
    2170:	60 83       	st	Z, r22
    2172:	31 97       	sbiw	r30, 0x01	; 1
    2174:	63 e0       	ldi	r22, 0x03	; 3
    2176:	60 83       	st	Z, r22
    2178:	31 97       	sbiw	r30, 0x01	; 1
    217a:	64 e0       	ldi	r22, 0x04	; 4
    217c:	60 83       	st	Z, r22
    217e:	31 97       	sbiw	r30, 0x01	; 1
    2180:	65 e0       	ldi	r22, 0x05	; 5
    2182:	60 83       	st	Z, r22
    2184:	31 97       	sbiw	r30, 0x01	; 1
    2186:	66 e0       	ldi	r22, 0x06	; 6
    2188:	60 83       	st	Z, r22
    218a:	31 97       	sbiw	r30, 0x01	; 1
    218c:	67 e0       	ldi	r22, 0x07	; 7
    218e:	60 83       	st	Z, r22
    2190:	31 97       	sbiw	r30, 0x01	; 1
    2192:	68 e0       	ldi	r22, 0x08	; 8
    2194:	60 83       	st	Z, r22
    2196:	31 97       	sbiw	r30, 0x01	; 1
    2198:	69 e0       	ldi	r22, 0x09	; 9
    219a:	60 83       	st	Z, r22
    219c:	31 97       	sbiw	r30, 0x01	; 1
    219e:	60 e1       	ldi	r22, 0x10	; 16
    21a0:	60 83       	st	Z, r22
    21a2:	31 97       	sbiw	r30, 0x01	; 1
    21a4:	30 83       	st	Z, r19
    21a6:	31 97       	sbiw	r30, 0x01	; 1
    21a8:	32 e1       	ldi	r19, 0x12	; 18
    21aa:	30 83       	st	Z, r19
    21ac:	31 97       	sbiw	r30, 0x01	; 1
    21ae:	33 e1       	ldi	r19, 0x13	; 19
    21b0:	30 83       	st	Z, r19
    21b2:	31 97       	sbiw	r30, 0x01	; 1
    21b4:	34 e1       	ldi	r19, 0x14	; 20
    21b6:	30 83       	st	Z, r19
    21b8:	31 97       	sbiw	r30, 0x01	; 1
    21ba:	35 e1       	ldi	r19, 0x15	; 21
    21bc:	30 83       	st	Z, r19
    21be:	31 97       	sbiw	r30, 0x01	; 1
    21c0:	36 e1       	ldi	r19, 0x16	; 22
    21c2:	30 83       	st	Z, r19
    21c4:	31 97       	sbiw	r30, 0x01	; 1
    21c6:	37 e1       	ldi	r19, 0x17	; 23
    21c8:	30 83       	st	Z, r19
    21ca:	31 97       	sbiw	r30, 0x01	; 1
    21cc:	38 e1       	ldi	r19, 0x18	; 24
    21ce:	30 83       	st	Z, r19
    21d0:	31 97       	sbiw	r30, 0x01	; 1
    21d2:	39 e1       	ldi	r19, 0x19	; 25
    21d4:	30 83       	st	Z, r19
    21d6:	31 97       	sbiw	r30, 0x01	; 1
    21d8:	30 e2       	ldi	r19, 0x20	; 32
    21da:	30 83       	st	Z, r19
    21dc:	31 97       	sbiw	r30, 0x01	; 1
    21de:	31 e2       	ldi	r19, 0x21	; 33
    21e0:	30 83       	st	Z, r19
    21e2:	31 97       	sbiw	r30, 0x01	; 1
    21e4:	20 83       	st	Z, r18
    21e6:	31 97       	sbiw	r30, 0x01	; 1
    21e8:	23 e2       	ldi	r18, 0x23	; 35
    21ea:	20 83       	st	Z, r18
    21ec:	31 97       	sbiw	r30, 0x01	; 1
    21ee:	40 83       	st	Z, r20
    21f0:	31 97       	sbiw	r30, 0x01	; 1
    21f2:	50 83       	st	Z, r21
    21f4:	31 97       	sbiw	r30, 0x01	; 1
    21f6:	26 e2       	ldi	r18, 0x26	; 38
    21f8:	20 83       	st	Z, r18
    21fa:	31 97       	sbiw	r30, 0x01	; 1
    21fc:	27 e2       	ldi	r18, 0x27	; 39
    21fe:	20 83       	st	Z, r18
    2200:	31 97       	sbiw	r30, 0x01	; 1
    2202:	28 e2       	ldi	r18, 0x28	; 40
    2204:	20 83       	st	Z, r18
    2206:	31 97       	sbiw	r30, 0x01	; 1
    2208:	29 e2       	ldi	r18, 0x29	; 41
    220a:	20 83       	st	Z, r18
    220c:	31 97       	sbiw	r30, 0x01	; 1
    220e:	20 e3       	ldi	r18, 0x30	; 48
    2210:	20 83       	st	Z, r18
    2212:	31 97       	sbiw	r30, 0x01	; 1
    2214:	21 e3       	ldi	r18, 0x31	; 49
    2216:	20 83       	st	Z, r18
    2218:	89 97       	sbiw	r24, 0x29	; 41
    221a:	08 95       	ret

0000221c <xPortStartScheduler>:
    221c:	a8 95       	wdr
    221e:	90 ec       	ldi	r25, 0xC0	; 192
    2220:	88 e1       	ldi	r24, 0x18	; 24
    2222:	0f b6       	in	r0, 0x3f	; 63
    2224:	f8 94       	cli
    2226:	a8 95       	wdr
    2228:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
    222c:	0f be       	out	0x3f, r0	; 63
    222e:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
    2232:	a0 91 be 0a 	lds	r26, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2236:	b0 91 bf 0a 	lds	r27, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    223a:	cd 91       	ld	r28, X+
    223c:	cd bf       	out	0x3d, r28	; 61
    223e:	dd 91       	ld	r29, X+
    2240:	de bf       	out	0x3e, r29	; 62
    2242:	ff 91       	pop	r31
    2244:	ef 91       	pop	r30
    2246:	df 91       	pop	r29
    2248:	cf 91       	pop	r28
    224a:	bf 91       	pop	r27
    224c:	af 91       	pop	r26
    224e:	9f 91       	pop	r25
    2250:	8f 91       	pop	r24
    2252:	7f 91       	pop	r23
    2254:	6f 91       	pop	r22
    2256:	5f 91       	pop	r21
    2258:	4f 91       	pop	r20
    225a:	3f 91       	pop	r19
    225c:	2f 91       	pop	r18
    225e:	1f 91       	pop	r17
    2260:	0f 91       	pop	r16
    2262:	ff 90       	pop	r15
    2264:	ef 90       	pop	r14
    2266:	df 90       	pop	r13
    2268:	cf 90       	pop	r12
    226a:	bf 90       	pop	r11
    226c:	af 90       	pop	r10
    226e:	9f 90       	pop	r9
    2270:	8f 90       	pop	r8
    2272:	7f 90       	pop	r7
    2274:	6f 90       	pop	r6
    2276:	5f 90       	pop	r5
    2278:	4f 90       	pop	r4
    227a:	3f 90       	pop	r3
    227c:	2f 90       	pop	r2
    227e:	1f 90       	pop	r1
    2280:	0f 90       	pop	r0
    2282:	0c be       	out	0x3c, r0	; 60
    2284:	0f 90       	pop	r0
    2286:	0b be       	out	0x3b, r0	; 59
    2288:	0f 90       	pop	r0
    228a:	0f be       	out	0x3f, r0	; 63
    228c:	0f 90       	pop	r0
    228e:	08 95       	ret
    2290:	81 e0       	ldi	r24, 0x01	; 1
    2292:	08 95       	ret

00002294 <vPortYield>:
    2294:	0f 92       	push	r0
    2296:	0f b6       	in	r0, 0x3f	; 63
    2298:	f8 94       	cli
    229a:	0f 92       	push	r0
    229c:	0b b6       	in	r0, 0x3b	; 59
    229e:	0f 92       	push	r0
    22a0:	0c b6       	in	r0, 0x3c	; 60
    22a2:	0f 92       	push	r0
    22a4:	1f 92       	push	r1
    22a6:	11 24       	eor	r1, r1
    22a8:	2f 92       	push	r2
    22aa:	3f 92       	push	r3
    22ac:	4f 92       	push	r4
    22ae:	5f 92       	push	r5
    22b0:	6f 92       	push	r6
    22b2:	7f 92       	push	r7
    22b4:	8f 92       	push	r8
    22b6:	9f 92       	push	r9
    22b8:	af 92       	push	r10
    22ba:	bf 92       	push	r11
    22bc:	cf 92       	push	r12
    22be:	df 92       	push	r13
    22c0:	ef 92       	push	r14
    22c2:	ff 92       	push	r15
    22c4:	0f 93       	push	r16
    22c6:	1f 93       	push	r17
    22c8:	2f 93       	push	r18
    22ca:	3f 93       	push	r19
    22cc:	4f 93       	push	r20
    22ce:	5f 93       	push	r21
    22d0:	6f 93       	push	r22
    22d2:	7f 93       	push	r23
    22d4:	8f 93       	push	r24
    22d6:	9f 93       	push	r25
    22d8:	af 93       	push	r26
    22da:	bf 93       	push	r27
    22dc:	cf 93       	push	r28
    22de:	df 93       	push	r29
    22e0:	ef 93       	push	r30
    22e2:	ff 93       	push	r31
    22e4:	a0 91 be 0a 	lds	r26, 0x0ABE	; 0x800abe <pxCurrentTCB>
    22e8:	b0 91 bf 0a 	lds	r27, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    22ec:	0d b6       	in	r0, 0x3d	; 61
    22ee:	0d 92       	st	X+, r0
    22f0:	0e b6       	in	r0, 0x3e	; 62
    22f2:	0d 92       	st	X+, r0
    22f4:	0e 94 13 1a 	call	0x3426	; 0x3426 <vTaskSwitchContext>
    22f8:	a0 91 be 0a 	lds	r26, 0x0ABE	; 0x800abe <pxCurrentTCB>
    22fc:	b0 91 bf 0a 	lds	r27, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2300:	cd 91       	ld	r28, X+
    2302:	cd bf       	out	0x3d, r28	; 61
    2304:	dd 91       	ld	r29, X+
    2306:	de bf       	out	0x3e, r29	; 62
    2308:	ff 91       	pop	r31
    230a:	ef 91       	pop	r30
    230c:	df 91       	pop	r29
    230e:	cf 91       	pop	r28
    2310:	bf 91       	pop	r27
    2312:	af 91       	pop	r26
    2314:	9f 91       	pop	r25
    2316:	8f 91       	pop	r24
    2318:	7f 91       	pop	r23
    231a:	6f 91       	pop	r22
    231c:	5f 91       	pop	r21
    231e:	4f 91       	pop	r20
    2320:	3f 91       	pop	r19
    2322:	2f 91       	pop	r18
    2324:	1f 91       	pop	r17
    2326:	0f 91       	pop	r16
    2328:	ff 90       	pop	r15
    232a:	ef 90       	pop	r14
    232c:	df 90       	pop	r13
    232e:	cf 90       	pop	r12
    2330:	bf 90       	pop	r11
    2332:	af 90       	pop	r10
    2334:	9f 90       	pop	r9
    2336:	8f 90       	pop	r8
    2338:	7f 90       	pop	r7
    233a:	6f 90       	pop	r6
    233c:	5f 90       	pop	r5
    233e:	4f 90       	pop	r4
    2340:	3f 90       	pop	r3
    2342:	2f 90       	pop	r2
    2344:	1f 90       	pop	r1
    2346:	0f 90       	pop	r0
    2348:	0c be       	out	0x3c, r0	; 60
    234a:	0f 90       	pop	r0
    234c:	0b be       	out	0x3b, r0	; 59
    234e:	0f 90       	pop	r0
    2350:	0f be       	out	0x3f, r0	; 63
    2352:	0f 90       	pop	r0
    2354:	08 95       	ret

00002356 <vPortYieldFromTick>:
    2356:	0f 92       	push	r0
    2358:	0f b6       	in	r0, 0x3f	; 63
    235a:	f8 94       	cli
    235c:	0f 92       	push	r0
    235e:	0b b6       	in	r0, 0x3b	; 59
    2360:	0f 92       	push	r0
    2362:	0c b6       	in	r0, 0x3c	; 60
    2364:	0f 92       	push	r0
    2366:	1f 92       	push	r1
    2368:	11 24       	eor	r1, r1
    236a:	2f 92       	push	r2
    236c:	3f 92       	push	r3
    236e:	4f 92       	push	r4
    2370:	5f 92       	push	r5
    2372:	6f 92       	push	r6
    2374:	7f 92       	push	r7
    2376:	8f 92       	push	r8
    2378:	9f 92       	push	r9
    237a:	af 92       	push	r10
    237c:	bf 92       	push	r11
    237e:	cf 92       	push	r12
    2380:	df 92       	push	r13
    2382:	ef 92       	push	r14
    2384:	ff 92       	push	r15
    2386:	0f 93       	push	r16
    2388:	1f 93       	push	r17
    238a:	2f 93       	push	r18
    238c:	3f 93       	push	r19
    238e:	4f 93       	push	r20
    2390:	5f 93       	push	r21
    2392:	6f 93       	push	r22
    2394:	7f 93       	push	r23
    2396:	8f 93       	push	r24
    2398:	9f 93       	push	r25
    239a:	af 93       	push	r26
    239c:	bf 93       	push	r27
    239e:	cf 93       	push	r28
    23a0:	df 93       	push	r29
    23a2:	ef 93       	push	r30
    23a4:	ff 93       	push	r31
    23a6:	a0 91 be 0a 	lds	r26, 0x0ABE	; 0x800abe <pxCurrentTCB>
    23aa:	b0 91 bf 0a 	lds	r27, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    23ae:	0d b6       	in	r0, 0x3d	; 61
    23b0:	0d 92       	st	X+, r0
    23b2:	0e b6       	in	r0, 0x3e	; 62
    23b4:	0d 92       	st	X+, r0
    23b6:	13 be       	out	0x33, r1	; 51
    23b8:	ee d6       	rcall	.+3548   	; 0x3196 <xTaskIncrementTick>
    23ba:	81 11       	cpse	r24, r1
    23bc:	0e 94 13 1a 	call	0x3426	; 0x3426 <vTaskSwitchContext>
    23c0:	a0 91 be 0a 	lds	r26, 0x0ABE	; 0x800abe <pxCurrentTCB>
    23c4:	b0 91 bf 0a 	lds	r27, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    23c8:	cd 91       	ld	r28, X+
    23ca:	cd bf       	out	0x3d, r28	; 61
    23cc:	dd 91       	ld	r29, X+
    23ce:	de bf       	out	0x3e, r29	; 62
    23d0:	ff 91       	pop	r31
    23d2:	ef 91       	pop	r30
    23d4:	df 91       	pop	r29
    23d6:	cf 91       	pop	r28
    23d8:	bf 91       	pop	r27
    23da:	af 91       	pop	r26
    23dc:	9f 91       	pop	r25
    23de:	8f 91       	pop	r24
    23e0:	7f 91       	pop	r23
    23e2:	6f 91       	pop	r22
    23e4:	5f 91       	pop	r21
    23e6:	4f 91       	pop	r20
    23e8:	3f 91       	pop	r19
    23ea:	2f 91       	pop	r18
    23ec:	1f 91       	pop	r17
    23ee:	0f 91       	pop	r16
    23f0:	ff 90       	pop	r15
    23f2:	ef 90       	pop	r14
    23f4:	df 90       	pop	r13
    23f6:	cf 90       	pop	r12
    23f8:	bf 90       	pop	r11
    23fa:	af 90       	pop	r10
    23fc:	9f 90       	pop	r9
    23fe:	8f 90       	pop	r8
    2400:	7f 90       	pop	r7
    2402:	6f 90       	pop	r6
    2404:	5f 90       	pop	r5
    2406:	4f 90       	pop	r4
    2408:	3f 90       	pop	r3
    240a:	2f 90       	pop	r2
    240c:	1f 90       	pop	r1
    240e:	0f 90       	pop	r0
    2410:	0c be       	out	0x3c, r0	; 60
    2412:	0f 90       	pop	r0
    2414:	0b be       	out	0x3b, r0	; 59
    2416:	0f 90       	pop	r0
    2418:	0f be       	out	0x3f, r0	; 63
    241a:	0f 90       	pop	r0
    241c:	08 95       	ret

0000241e <__vector_12>:
    241e:	9b df       	rcall	.-202    	; 0x2356 <vPortYieldFromTick>
    2420:	18 95       	reti

00002422 <prvIsQueueEmpty>:
    2422:	0f b6       	in	r0, 0x3f	; 63
    2424:	f8 94       	cli
    2426:	0f 92       	push	r0
    2428:	fc 01       	movw	r30, r24
    242a:	92 8d       	ldd	r25, Z+26	; 0x1a
    242c:	0f 90       	pop	r0
    242e:	0f be       	out	0x3f, r0	; 63
    2430:	81 e0       	ldi	r24, 0x01	; 1
    2432:	91 11       	cpse	r25, r1
    2434:	80 e0       	ldi	r24, 0x00	; 0
    2436:	08 95       	ret

00002438 <prvCopyDataToQueue>:
    2438:	0f 93       	push	r16
    243a:	1f 93       	push	r17
    243c:	cf 93       	push	r28
    243e:	df 93       	push	r29
    2440:	ec 01       	movw	r28, r24
    2442:	04 2f       	mov	r16, r20
    2444:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2446:	4c 8d       	ldd	r20, Y+28	; 0x1c
    2448:	41 11       	cpse	r20, r1
    244a:	0c c0       	rjmp	.+24     	; 0x2464 <prvCopyDataToQueue+0x2c>
    244c:	88 81       	ld	r24, Y
    244e:	99 81       	ldd	r25, Y+1	; 0x01
    2450:	89 2b       	or	r24, r25
    2452:	09 f0       	breq	.+2      	; 0x2456 <prvCopyDataToQueue+0x1e>
    2454:	42 c0       	rjmp	.+132    	; 0x24da <prvCopyDataToQueue+0xa2>
    2456:	8c 81       	ldd	r24, Y+4	; 0x04
    2458:	9d 81       	ldd	r25, Y+5	; 0x05
    245a:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <xTaskPriorityDisinherit>
    245e:	1d 82       	std	Y+5, r1	; 0x05
    2460:	1c 82       	std	Y+4, r1	; 0x04
    2462:	42 c0       	rjmp	.+132    	; 0x24e8 <prvCopyDataToQueue+0xb0>
    2464:	01 11       	cpse	r16, r1
    2466:	17 c0       	rjmp	.+46     	; 0x2496 <prvCopyDataToQueue+0x5e>
    2468:	50 e0       	ldi	r21, 0x00	; 0
    246a:	8a 81       	ldd	r24, Y+2	; 0x02
    246c:	9b 81       	ldd	r25, Y+3	; 0x03
    246e:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <memcpy>
    2472:	2c 8d       	ldd	r18, Y+28	; 0x1c
    2474:	8a 81       	ldd	r24, Y+2	; 0x02
    2476:	9b 81       	ldd	r25, Y+3	; 0x03
    2478:	82 0f       	add	r24, r18
    247a:	91 1d       	adc	r25, r1
    247c:	9b 83       	std	Y+3, r25	; 0x03
    247e:	8a 83       	std	Y+2, r24	; 0x02
    2480:	2c 81       	ldd	r18, Y+4	; 0x04
    2482:	3d 81       	ldd	r19, Y+5	; 0x05
    2484:	82 17       	cp	r24, r18
    2486:	93 07       	cpc	r25, r19
    2488:	50 f1       	brcs	.+84     	; 0x24de <prvCopyDataToQueue+0xa6>
    248a:	88 81       	ld	r24, Y
    248c:	99 81       	ldd	r25, Y+1	; 0x01
    248e:	9b 83       	std	Y+3, r25	; 0x03
    2490:	8a 83       	std	Y+2, r24	; 0x02
    2492:	80 e0       	ldi	r24, 0x00	; 0
    2494:	29 c0       	rjmp	.+82     	; 0x24e8 <prvCopyDataToQueue+0xb0>
    2496:	50 e0       	ldi	r21, 0x00	; 0
    2498:	8e 81       	ldd	r24, Y+6	; 0x06
    249a:	9f 81       	ldd	r25, Y+7	; 0x07
    249c:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <memcpy>
    24a0:	8c 8d       	ldd	r24, Y+28	; 0x1c
    24a2:	90 e0       	ldi	r25, 0x00	; 0
    24a4:	91 95       	neg	r25
    24a6:	81 95       	neg	r24
    24a8:	91 09       	sbc	r25, r1
    24aa:	2e 81       	ldd	r18, Y+6	; 0x06
    24ac:	3f 81       	ldd	r19, Y+7	; 0x07
    24ae:	28 0f       	add	r18, r24
    24b0:	39 1f       	adc	r19, r25
    24b2:	3f 83       	std	Y+7, r19	; 0x07
    24b4:	2e 83       	std	Y+6, r18	; 0x06
    24b6:	48 81       	ld	r20, Y
    24b8:	59 81       	ldd	r21, Y+1	; 0x01
    24ba:	24 17       	cp	r18, r20
    24bc:	35 07       	cpc	r19, r21
    24be:	30 f4       	brcc	.+12     	; 0x24cc <prvCopyDataToQueue+0x94>
    24c0:	2c 81       	ldd	r18, Y+4	; 0x04
    24c2:	3d 81       	ldd	r19, Y+5	; 0x05
    24c4:	82 0f       	add	r24, r18
    24c6:	93 1f       	adc	r25, r19
    24c8:	9f 83       	std	Y+7, r25	; 0x07
    24ca:	8e 83       	std	Y+6, r24	; 0x06
    24cc:	02 30       	cpi	r16, 0x02	; 2
    24ce:	49 f4       	brne	.+18     	; 0x24e2 <prvCopyDataToQueue+0xaa>
    24d0:	11 23       	and	r17, r17
    24d2:	49 f0       	breq	.+18     	; 0x24e6 <prvCopyDataToQueue+0xae>
    24d4:	11 50       	subi	r17, 0x01	; 1
    24d6:	80 e0       	ldi	r24, 0x00	; 0
    24d8:	07 c0       	rjmp	.+14     	; 0x24e8 <prvCopyDataToQueue+0xb0>
    24da:	80 e0       	ldi	r24, 0x00	; 0
    24dc:	05 c0       	rjmp	.+10     	; 0x24e8 <prvCopyDataToQueue+0xb0>
    24de:	80 e0       	ldi	r24, 0x00	; 0
    24e0:	03 c0       	rjmp	.+6      	; 0x24e8 <prvCopyDataToQueue+0xb0>
    24e2:	80 e0       	ldi	r24, 0x00	; 0
    24e4:	01 c0       	rjmp	.+2      	; 0x24e8 <prvCopyDataToQueue+0xb0>
    24e6:	80 e0       	ldi	r24, 0x00	; 0
    24e8:	1f 5f       	subi	r17, 0xFF	; 255
    24ea:	1a 8f       	std	Y+26, r17	; 0x1a
    24ec:	df 91       	pop	r29
    24ee:	cf 91       	pop	r28
    24f0:	1f 91       	pop	r17
    24f2:	0f 91       	pop	r16
    24f4:	08 95       	ret

000024f6 <prvCopyDataFromQueue>:
    24f6:	fc 01       	movw	r30, r24
    24f8:	44 8d       	ldd	r20, Z+28	; 0x1c
    24fa:	44 23       	and	r20, r20
    24fc:	a9 f0       	breq	.+42     	; 0x2528 <prvCopyDataFromQueue+0x32>
    24fe:	50 e0       	ldi	r21, 0x00	; 0
    2500:	26 81       	ldd	r18, Z+6	; 0x06
    2502:	37 81       	ldd	r19, Z+7	; 0x07
    2504:	24 0f       	add	r18, r20
    2506:	35 1f       	adc	r19, r21
    2508:	37 83       	std	Z+7, r19	; 0x07
    250a:	26 83       	std	Z+6, r18	; 0x06
    250c:	84 81       	ldd	r24, Z+4	; 0x04
    250e:	95 81       	ldd	r25, Z+5	; 0x05
    2510:	28 17       	cp	r18, r24
    2512:	39 07       	cpc	r19, r25
    2514:	20 f0       	brcs	.+8      	; 0x251e <prvCopyDataFromQueue+0x28>
    2516:	80 81       	ld	r24, Z
    2518:	91 81       	ldd	r25, Z+1	; 0x01
    251a:	97 83       	std	Z+7, r25	; 0x07
    251c:	86 83       	std	Z+6, r24	; 0x06
    251e:	cb 01       	movw	r24, r22
    2520:	66 81       	ldd	r22, Z+6	; 0x06
    2522:	77 81       	ldd	r23, Z+7	; 0x07
    2524:	0c 94 ba 1f 	jmp	0x3f74	; 0x3f74 <memcpy>
    2528:	08 95       	ret

0000252a <prvUnlockQueue>:
    252a:	ef 92       	push	r14
    252c:	ff 92       	push	r15
    252e:	0f 93       	push	r16
    2530:	1f 93       	push	r17
    2532:	cf 93       	push	r28
    2534:	8c 01       	movw	r16, r24
    2536:	0f b6       	in	r0, 0x3f	; 63
    2538:	f8 94       	cli
    253a:	0f 92       	push	r0
    253c:	fc 01       	movw	r30, r24
    253e:	c6 8d       	ldd	r28, Z+30	; 0x1e
    2540:	1c 16       	cp	r1, r28
    2542:	ac f4       	brge	.+42     	; 0x256e <prvUnlockQueue+0x44>
    2544:	81 89       	ldd	r24, Z+17	; 0x11
    2546:	81 11       	cpse	r24, r1
    2548:	06 c0       	rjmp	.+12     	; 0x2556 <prvUnlockQueue+0x2c>
    254a:	11 c0       	rjmp	.+34     	; 0x256e <prvUnlockQueue+0x44>
    254c:	f8 01       	movw	r30, r16
    254e:	81 89       	ldd	r24, Z+17	; 0x11
    2550:	81 11       	cpse	r24, r1
    2552:	05 c0       	rjmp	.+10     	; 0x255e <prvUnlockQueue+0x34>
    2554:	0c c0       	rjmp	.+24     	; 0x256e <prvUnlockQueue+0x44>
    2556:	78 01       	movw	r14, r16
    2558:	f1 e1       	ldi	r31, 0x11	; 17
    255a:	ef 0e       	add	r14, r31
    255c:	f1 1c       	adc	r15, r1
    255e:	c7 01       	movw	r24, r14
    2560:	0e 94 bd 1a 	call	0x357a	; 0x357a <xTaskRemoveFromEventList>
    2564:	81 11       	cpse	r24, r1
    2566:	0e 94 55 1b 	call	0x36aa	; 0x36aa <vTaskMissedYield>
    256a:	c1 50       	subi	r28, 0x01	; 1
    256c:	79 f7       	brne	.-34     	; 0x254c <prvUnlockQueue+0x22>
    256e:	8f ef       	ldi	r24, 0xFF	; 255
    2570:	f8 01       	movw	r30, r16
    2572:	86 8f       	std	Z+30, r24	; 0x1e
    2574:	0f 90       	pop	r0
    2576:	0f be       	out	0x3f, r0	; 63
    2578:	0f b6       	in	r0, 0x3f	; 63
    257a:	f8 94       	cli
    257c:	0f 92       	push	r0
    257e:	c5 8d       	ldd	r28, Z+29	; 0x1d
    2580:	1c 16       	cp	r1, r28
    2582:	a4 f4       	brge	.+40     	; 0x25ac <prvUnlockQueue+0x82>
    2584:	80 85       	ldd	r24, Z+8	; 0x08
    2586:	81 11       	cpse	r24, r1
    2588:	06 c0       	rjmp	.+12     	; 0x2596 <prvUnlockQueue+0x6c>
    258a:	10 c0       	rjmp	.+32     	; 0x25ac <prvUnlockQueue+0x82>
    258c:	f8 01       	movw	r30, r16
    258e:	80 85       	ldd	r24, Z+8	; 0x08
    2590:	81 11       	cpse	r24, r1
    2592:	05 c0       	rjmp	.+10     	; 0x259e <prvUnlockQueue+0x74>
    2594:	0b c0       	rjmp	.+22     	; 0x25ac <prvUnlockQueue+0x82>
    2596:	78 01       	movw	r14, r16
    2598:	f8 e0       	ldi	r31, 0x08	; 8
    259a:	ef 0e       	add	r14, r31
    259c:	f1 1c       	adc	r15, r1
    259e:	c7 01       	movw	r24, r14
    25a0:	ec d7       	rcall	.+4056   	; 0x357a <xTaskRemoveFromEventList>
    25a2:	81 11       	cpse	r24, r1
    25a4:	0e 94 55 1b 	call	0x36aa	; 0x36aa <vTaskMissedYield>
    25a8:	c1 50       	subi	r28, 0x01	; 1
    25aa:	81 f7       	brne	.-32     	; 0x258c <prvUnlockQueue+0x62>
    25ac:	8f ef       	ldi	r24, 0xFF	; 255
    25ae:	f8 01       	movw	r30, r16
    25b0:	85 8f       	std	Z+29, r24	; 0x1d
    25b2:	0f 90       	pop	r0
    25b4:	0f be       	out	0x3f, r0	; 63
    25b6:	cf 91       	pop	r28
    25b8:	1f 91       	pop	r17
    25ba:	0f 91       	pop	r16
    25bc:	ff 90       	pop	r15
    25be:	ef 90       	pop	r14
    25c0:	08 95       	ret

000025c2 <xQueueGenericReset>:
    25c2:	cf 93       	push	r28
    25c4:	df 93       	push	r29
    25c6:	ec 01       	movw	r28, r24
    25c8:	0f b6       	in	r0, 0x3f	; 63
    25ca:	f8 94       	cli
    25cc:	0f 92       	push	r0
    25ce:	e8 81       	ld	r30, Y
    25d0:	f9 81       	ldd	r31, Y+1	; 0x01
    25d2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    25d4:	2c 8d       	ldd	r18, Y+28	; 0x1c
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	30 e0       	ldi	r19, 0x00	; 0
    25da:	82 9f       	mul	r24, r18
    25dc:	a0 01       	movw	r20, r0
    25de:	83 9f       	mul	r24, r19
    25e0:	50 0d       	add	r21, r0
    25e2:	92 9f       	mul	r25, r18
    25e4:	50 0d       	add	r21, r0
    25e6:	11 24       	eor	r1, r1
    25e8:	4e 0f       	add	r20, r30
    25ea:	5f 1f       	adc	r21, r31
    25ec:	5d 83       	std	Y+5, r21	; 0x05
    25ee:	4c 83       	std	Y+4, r20	; 0x04
    25f0:	1a 8e       	std	Y+26, r1	; 0x1a
    25f2:	fb 83       	std	Y+3, r31	; 0x03
    25f4:	ea 83       	std	Y+2, r30	; 0x02
    25f6:	01 97       	sbiw	r24, 0x01	; 1
    25f8:	82 9f       	mul	r24, r18
    25fa:	a0 01       	movw	r20, r0
    25fc:	83 9f       	mul	r24, r19
    25fe:	50 0d       	add	r21, r0
    2600:	92 9f       	mul	r25, r18
    2602:	50 0d       	add	r21, r0
    2604:	11 24       	eor	r1, r1
    2606:	cf 01       	movw	r24, r30
    2608:	84 0f       	add	r24, r20
    260a:	95 1f       	adc	r25, r21
    260c:	9f 83       	std	Y+7, r25	; 0x07
    260e:	8e 83       	std	Y+6, r24	; 0x06
    2610:	8f ef       	ldi	r24, 0xFF	; 255
    2612:	8d 8f       	std	Y+29, r24	; 0x1d
    2614:	8e 8f       	std	Y+30, r24	; 0x1e
    2616:	61 11       	cpse	r22, r1
    2618:	0a c0       	rjmp	.+20     	; 0x262e <xQueueGenericReset+0x6c>
    261a:	88 85       	ldd	r24, Y+8	; 0x08
    261c:	88 23       	and	r24, r24
    261e:	69 f0       	breq	.+26     	; 0x263a <xQueueGenericReset+0x78>
    2620:	ce 01       	movw	r24, r28
    2622:	08 96       	adiw	r24, 0x08	; 8
    2624:	aa d7       	rcall	.+3924   	; 0x357a <xTaskRemoveFromEventList>
    2626:	88 23       	and	r24, r24
    2628:	41 f0       	breq	.+16     	; 0x263a <xQueueGenericReset+0x78>
    262a:	34 de       	rcall	.-920    	; 0x2294 <vPortYield>
    262c:	06 c0       	rjmp	.+12     	; 0x263a <xQueueGenericReset+0x78>
    262e:	ce 01       	movw	r24, r28
    2630:	08 96       	adiw	r24, 0x08	; 8
    2632:	f7 dc       	rcall	.-1554   	; 0x2022 <vListInitialise>
    2634:	ce 01       	movw	r24, r28
    2636:	41 96       	adiw	r24, 0x11	; 17
    2638:	f4 dc       	rcall	.-1560   	; 0x2022 <vListInitialise>
    263a:	0f 90       	pop	r0
    263c:	0f be       	out	0x3f, r0	; 63
    263e:	81 e0       	ldi	r24, 0x01	; 1
    2640:	df 91       	pop	r29
    2642:	cf 91       	pop	r28
    2644:	08 95       	ret

00002646 <xQueueGenericCreateStatic>:
    2646:	cf 93       	push	r28
    2648:	df 93       	push	r29
    264a:	e9 01       	movw	r28, r18
    264c:	20 97       	sbiw	r28, 0x00	; 0
    264e:	61 f0       	breq	.+24     	; 0x2668 <xQueueGenericCreateStatic+0x22>
    2650:	61 11       	cpse	r22, r1
    2652:	03 c0       	rjmp	.+6      	; 0x265a <xQueueGenericCreateStatic+0x14>
    2654:	39 83       	std	Y+1, r19	; 0x01
    2656:	28 83       	st	Y, r18
    2658:	02 c0       	rjmp	.+4      	; 0x265e <xQueueGenericCreateStatic+0x18>
    265a:	59 83       	std	Y+1, r21	; 0x01
    265c:	48 83       	st	Y, r20
    265e:	8b 8f       	std	Y+27, r24	; 0x1b
    2660:	6c 8f       	std	Y+28, r22	; 0x1c
    2662:	61 e0       	ldi	r22, 0x01	; 1
    2664:	ce 01       	movw	r24, r28
    2666:	ad df       	rcall	.-166    	; 0x25c2 <xQueueGenericReset>
    2668:	ce 01       	movw	r24, r28
    266a:	df 91       	pop	r29
    266c:	cf 91       	pop	r28
    266e:	08 95       	ret

00002670 <xQueueGenericSend>:
    2670:	9f 92       	push	r9
    2672:	af 92       	push	r10
    2674:	bf 92       	push	r11
    2676:	cf 92       	push	r12
    2678:	df 92       	push	r13
    267a:	ef 92       	push	r14
    267c:	ff 92       	push	r15
    267e:	0f 93       	push	r16
    2680:	1f 93       	push	r17
    2682:	cf 93       	push	r28
    2684:	df 93       	push	r29
    2686:	00 d0       	rcall	.+0      	; 0x2688 <xQueueGenericSend+0x18>
    2688:	1f 92       	push	r1
    268a:	1f 92       	push	r1
    268c:	cd b7       	in	r28, 0x3d	; 61
    268e:	de b7       	in	r29, 0x3e	; 62
    2690:	8c 01       	movw	r16, r24
    2692:	6b 01       	movw	r12, r22
    2694:	5d 83       	std	Y+5, r21	; 0x05
    2696:	4c 83       	std	Y+4, r20	; 0x04
    2698:	a2 2e       	mov	r10, r18
    269a:	b1 2c       	mov	r11, r1
    269c:	99 24       	eor	r9, r9
    269e:	93 94       	inc	r9
    26a0:	7c 01       	movw	r14, r24
    26a2:	88 e0       	ldi	r24, 0x08	; 8
    26a4:	e8 0e       	add	r14, r24
    26a6:	f1 1c       	adc	r15, r1
    26a8:	0f b6       	in	r0, 0x3f	; 63
    26aa:	f8 94       	cli
    26ac:	0f 92       	push	r0
    26ae:	f8 01       	movw	r30, r16
    26b0:	92 8d       	ldd	r25, Z+26	; 0x1a
    26b2:	83 8d       	ldd	r24, Z+27	; 0x1b
    26b4:	98 17       	cp	r25, r24
    26b6:	18 f0       	brcs	.+6      	; 0x26be <xQueueGenericSend+0x4e>
    26b8:	f2 e0       	ldi	r31, 0x02	; 2
    26ba:	af 12       	cpse	r10, r31
    26bc:	15 c0       	rjmp	.+42     	; 0x26e8 <xQueueGenericSend+0x78>
    26be:	4a 2d       	mov	r20, r10
    26c0:	b6 01       	movw	r22, r12
    26c2:	c8 01       	movw	r24, r16
    26c4:	b9 de       	rcall	.-654    	; 0x2438 <prvCopyDataToQueue>
    26c6:	f8 01       	movw	r30, r16
    26c8:	91 89       	ldd	r25, Z+17	; 0x11
    26ca:	99 23       	and	r25, r25
    26cc:	39 f0       	breq	.+14     	; 0x26dc <xQueueGenericSend+0x6c>
    26ce:	c8 01       	movw	r24, r16
    26d0:	41 96       	adiw	r24, 0x11	; 17
    26d2:	53 d7       	rcall	.+3750   	; 0x357a <xTaskRemoveFromEventList>
    26d4:	88 23       	and	r24, r24
    26d6:	21 f0       	breq	.+8      	; 0x26e0 <xQueueGenericSend+0x70>
    26d8:	dd dd       	rcall	.-1094   	; 0x2294 <vPortYield>
    26da:	02 c0       	rjmp	.+4      	; 0x26e0 <xQueueGenericSend+0x70>
    26dc:	81 11       	cpse	r24, r1
    26de:	da dd       	rcall	.-1100   	; 0x2294 <vPortYield>
    26e0:	0f 90       	pop	r0
    26e2:	0f be       	out	0x3f, r0	; 63
    26e4:	81 e0       	ldi	r24, 0x01	; 1
    26e6:	45 c0       	rjmp	.+138    	; 0x2772 <xQueueGenericSend+0x102>
    26e8:	8c 81       	ldd	r24, Y+4	; 0x04
    26ea:	9d 81       	ldd	r25, Y+5	; 0x05
    26ec:	89 2b       	or	r24, r25
    26ee:	21 f4       	brne	.+8      	; 0x26f8 <xQueueGenericSend+0x88>
    26f0:	0f 90       	pop	r0
    26f2:	0f be       	out	0x3f, r0	; 63
    26f4:	80 e0       	ldi	r24, 0x00	; 0
    26f6:	3d c0       	rjmp	.+122    	; 0x2772 <xQueueGenericSend+0x102>
    26f8:	b1 10       	cpse	r11, r1
    26fa:	04 c0       	rjmp	.+8      	; 0x2704 <xQueueGenericSend+0x94>
    26fc:	ce 01       	movw	r24, r28
    26fe:	01 96       	adiw	r24, 0x01	; 1
    2700:	94 d7       	rcall	.+3880   	; 0x362a <vTaskInternalSetTimeOutState>
    2702:	b9 2c       	mov	r11, r9
    2704:	0f 90       	pop	r0
    2706:	0f be       	out	0x3f, r0	; 63
    2708:	36 d5       	rcall	.+2668   	; 0x3176 <vTaskSuspendAll>
    270a:	0f b6       	in	r0, 0x3f	; 63
    270c:	f8 94       	cli
    270e:	0f 92       	push	r0
    2710:	f8 01       	movw	r30, r16
    2712:	85 8d       	ldd	r24, Z+29	; 0x1d
    2714:	8f 3f       	cpi	r24, 0xFF	; 255
    2716:	09 f4       	brne	.+2      	; 0x271a <xQueueGenericSend+0xaa>
    2718:	15 8e       	std	Z+29, r1	; 0x1d
    271a:	f8 01       	movw	r30, r16
    271c:	86 8d       	ldd	r24, Z+30	; 0x1e
    271e:	8f 3f       	cpi	r24, 0xFF	; 255
    2720:	09 f4       	brne	.+2      	; 0x2724 <xQueueGenericSend+0xb4>
    2722:	16 8e       	std	Z+30, r1	; 0x1e
    2724:	0f 90       	pop	r0
    2726:	0f be       	out	0x3f, r0	; 63
    2728:	be 01       	movw	r22, r28
    272a:	6c 5f       	subi	r22, 0xFC	; 252
    272c:	7f 4f       	sbci	r23, 0xFF	; 255
    272e:	ce 01       	movw	r24, r28
    2730:	01 96       	adiw	r24, 0x01	; 1
    2732:	86 d7       	rcall	.+3852   	; 0x3640 <xTaskCheckForTimeOut>
    2734:	81 11       	cpse	r24, r1
    2736:	19 c0       	rjmp	.+50     	; 0x276a <xQueueGenericSend+0xfa>
    2738:	0f b6       	in	r0, 0x3f	; 63
    273a:	f8 94       	cli
    273c:	0f 92       	push	r0
    273e:	f8 01       	movw	r30, r16
    2740:	92 8d       	ldd	r25, Z+26	; 0x1a
    2742:	83 8d       	ldd	r24, Z+27	; 0x1b
    2744:	0f 90       	pop	r0
    2746:	0f be       	out	0x3f, r0	; 63
    2748:	98 13       	cpse	r25, r24
    274a:	0b c0       	rjmp	.+22     	; 0x2762 <xQueueGenericSend+0xf2>
    274c:	6c 81       	ldd	r22, Y+4	; 0x04
    274e:	7d 81       	ldd	r23, Y+5	; 0x05
    2750:	c7 01       	movw	r24, r14
    2752:	ea d6       	rcall	.+3540   	; 0x3528 <vTaskPlaceOnEventList>
    2754:	c8 01       	movw	r24, r16
    2756:	e9 de       	rcall	.-558    	; 0x252a <prvUnlockQueue>
    2758:	d8 d5       	rcall	.+2992   	; 0x330a <xTaskResumeAll>
    275a:	81 11       	cpse	r24, r1
    275c:	a5 cf       	rjmp	.-182    	; 0x26a8 <xQueueGenericSend+0x38>
    275e:	9a dd       	rcall	.-1228   	; 0x2294 <vPortYield>
    2760:	a3 cf       	rjmp	.-186    	; 0x26a8 <xQueueGenericSend+0x38>
    2762:	c8 01       	movw	r24, r16
    2764:	e2 de       	rcall	.-572    	; 0x252a <prvUnlockQueue>
    2766:	d1 d5       	rcall	.+2978   	; 0x330a <xTaskResumeAll>
    2768:	9f cf       	rjmp	.-194    	; 0x26a8 <xQueueGenericSend+0x38>
    276a:	c8 01       	movw	r24, r16
    276c:	de de       	rcall	.-580    	; 0x252a <prvUnlockQueue>
    276e:	cd d5       	rcall	.+2970   	; 0x330a <xTaskResumeAll>
    2770:	80 e0       	ldi	r24, 0x00	; 0
    2772:	0f 90       	pop	r0
    2774:	0f 90       	pop	r0
    2776:	0f 90       	pop	r0
    2778:	0f 90       	pop	r0
    277a:	0f 90       	pop	r0
    277c:	df 91       	pop	r29
    277e:	cf 91       	pop	r28
    2780:	1f 91       	pop	r17
    2782:	0f 91       	pop	r16
    2784:	ff 90       	pop	r15
    2786:	ef 90       	pop	r14
    2788:	df 90       	pop	r13
    278a:	cf 90       	pop	r12
    278c:	bf 90       	pop	r11
    278e:	af 90       	pop	r10
    2790:	9f 90       	pop	r9
    2792:	08 95       	ret

00002794 <xQueueGenericSendFromISR>:
    2794:	ef 92       	push	r14
    2796:	ff 92       	push	r15
    2798:	0f 93       	push	r16
    279a:	1f 93       	push	r17
    279c:	cf 93       	push	r28
    279e:	df 93       	push	r29
    27a0:	8a 01       	movw	r16, r20
    27a2:	fc 01       	movw	r30, r24
    27a4:	52 8d       	ldd	r21, Z+26	; 0x1a
    27a6:	33 8d       	ldd	r19, Z+27	; 0x1b
    27a8:	53 17       	cp	r21, r19
    27aa:	10 f0       	brcs	.+4      	; 0x27b0 <xQueueGenericSendFromISR+0x1c>
    27ac:	22 30       	cpi	r18, 0x02	; 2
    27ae:	e1 f4       	brne	.+56     	; 0x27e8 <xQueueGenericSendFromISR+0x54>
    27b0:	42 2f       	mov	r20, r18
    27b2:	78 01       	movw	r14, r16
    27b4:	ec 01       	movw	r28, r24
    27b6:	1e 8d       	ldd	r17, Y+30	; 0x1e
    27b8:	3f de       	rcall	.-898    	; 0x2438 <prvCopyDataToQueue>
    27ba:	1f 3f       	cpi	r17, 0xFF	; 255
    27bc:	79 f4       	brne	.+30     	; 0x27dc <xQueueGenericSendFromISR+0x48>
    27be:	89 89       	ldd	r24, Y+17	; 0x11
    27c0:	88 23       	and	r24, r24
    27c2:	a1 f0       	breq	.+40     	; 0x27ec <xQueueGenericSendFromISR+0x58>
    27c4:	ce 01       	movw	r24, r28
    27c6:	41 96       	adiw	r24, 0x11	; 17
    27c8:	d8 d6       	rcall	.+3504   	; 0x357a <xTaskRemoveFromEventList>
    27ca:	88 23       	and	r24, r24
    27cc:	89 f0       	breq	.+34     	; 0x27f0 <xQueueGenericSendFromISR+0x5c>
    27ce:	e1 14       	cp	r14, r1
    27d0:	f1 04       	cpc	r15, r1
    27d2:	81 f0       	breq	.+32     	; 0x27f4 <xQueueGenericSendFromISR+0x60>
    27d4:	81 e0       	ldi	r24, 0x01	; 1
    27d6:	f7 01       	movw	r30, r14
    27d8:	80 83       	st	Z, r24
    27da:	0d c0       	rjmp	.+26     	; 0x27f6 <xQueueGenericSendFromISR+0x62>
    27dc:	ff 24       	eor	r15, r15
    27de:	f3 94       	inc	r15
    27e0:	f1 0e       	add	r15, r17
    27e2:	fe 8e       	std	Y+30, r15	; 0x1e
    27e4:	81 e0       	ldi	r24, 0x01	; 1
    27e6:	07 c0       	rjmp	.+14     	; 0x27f6 <xQueueGenericSendFromISR+0x62>
    27e8:	80 e0       	ldi	r24, 0x00	; 0
    27ea:	05 c0       	rjmp	.+10     	; 0x27f6 <xQueueGenericSendFromISR+0x62>
    27ec:	81 e0       	ldi	r24, 0x01	; 1
    27ee:	03 c0       	rjmp	.+6      	; 0x27f6 <xQueueGenericSendFromISR+0x62>
    27f0:	81 e0       	ldi	r24, 0x01	; 1
    27f2:	01 c0       	rjmp	.+2      	; 0x27f6 <xQueueGenericSendFromISR+0x62>
    27f4:	81 e0       	ldi	r24, 0x01	; 1
    27f6:	df 91       	pop	r29
    27f8:	cf 91       	pop	r28
    27fa:	1f 91       	pop	r17
    27fc:	0f 91       	pop	r16
    27fe:	ff 90       	pop	r15
    2800:	ef 90       	pop	r14
    2802:	08 95       	ret

00002804 <xQueueReceive>:
    2804:	9f 92       	push	r9
    2806:	af 92       	push	r10
    2808:	bf 92       	push	r11
    280a:	cf 92       	push	r12
    280c:	df 92       	push	r13
    280e:	ef 92       	push	r14
    2810:	ff 92       	push	r15
    2812:	0f 93       	push	r16
    2814:	1f 93       	push	r17
    2816:	cf 93       	push	r28
    2818:	df 93       	push	r29
    281a:	00 d0       	rcall	.+0      	; 0x281c <xQueueReceive+0x18>
    281c:	1f 92       	push	r1
    281e:	1f 92       	push	r1
    2820:	cd b7       	in	r28, 0x3d	; 61
    2822:	de b7       	in	r29, 0x3e	; 62
    2824:	8c 01       	movw	r16, r24
    2826:	5b 01       	movw	r10, r22
    2828:	5d 83       	std	Y+5, r21	; 0x05
    282a:	4c 83       	std	Y+4, r20	; 0x04
    282c:	e1 2c       	mov	r14, r1
    282e:	99 24       	eor	r9, r9
    2830:	93 94       	inc	r9
    2832:	6c 01       	movw	r12, r24
    2834:	81 e1       	ldi	r24, 0x11	; 17
    2836:	c8 0e       	add	r12, r24
    2838:	d1 1c       	adc	r13, r1
    283a:	0f b6       	in	r0, 0x3f	; 63
    283c:	f8 94       	cli
    283e:	0f 92       	push	r0
    2840:	f8 01       	movw	r30, r16
    2842:	f2 8c       	ldd	r15, Z+26	; 0x1a
    2844:	ff 20       	and	r15, r15
    2846:	91 f0       	breq	.+36     	; 0x286c <xQueueReceive+0x68>
    2848:	b5 01       	movw	r22, r10
    284a:	c8 01       	movw	r24, r16
    284c:	54 de       	rcall	.-856    	; 0x24f6 <prvCopyDataFromQueue>
    284e:	fa 94       	dec	r15
    2850:	f8 01       	movw	r30, r16
    2852:	f2 8e       	std	Z+26, r15	; 0x1a
    2854:	80 85       	ldd	r24, Z+8	; 0x08
    2856:	88 23       	and	r24, r24
    2858:	29 f0       	breq	.+10     	; 0x2864 <xQueueReceive+0x60>
    285a:	c8 01       	movw	r24, r16
    285c:	08 96       	adiw	r24, 0x08	; 8
    285e:	8d d6       	rcall	.+3354   	; 0x357a <xTaskRemoveFromEventList>
    2860:	81 11       	cpse	r24, r1
    2862:	18 dd       	rcall	.-1488   	; 0x2294 <vPortYield>
    2864:	0f 90       	pop	r0
    2866:	0f be       	out	0x3f, r0	; 63
    2868:	81 e0       	ldi	r24, 0x01	; 1
    286a:	44 c0       	rjmp	.+136    	; 0x28f4 <xQueueReceive+0xf0>
    286c:	8c 81       	ldd	r24, Y+4	; 0x04
    286e:	9d 81       	ldd	r25, Y+5	; 0x05
    2870:	89 2b       	or	r24, r25
    2872:	21 f4       	brne	.+8      	; 0x287c <xQueueReceive+0x78>
    2874:	0f 90       	pop	r0
    2876:	0f be       	out	0x3f, r0	; 63
    2878:	80 e0       	ldi	r24, 0x00	; 0
    287a:	3c c0       	rjmp	.+120    	; 0x28f4 <xQueueReceive+0xf0>
    287c:	e1 10       	cpse	r14, r1
    287e:	04 c0       	rjmp	.+8      	; 0x2888 <xQueueReceive+0x84>
    2880:	ce 01       	movw	r24, r28
    2882:	01 96       	adiw	r24, 0x01	; 1
    2884:	d2 d6       	rcall	.+3492   	; 0x362a <vTaskInternalSetTimeOutState>
    2886:	e9 2c       	mov	r14, r9
    2888:	0f 90       	pop	r0
    288a:	0f be       	out	0x3f, r0	; 63
    288c:	74 d4       	rcall	.+2280   	; 0x3176 <vTaskSuspendAll>
    288e:	0f b6       	in	r0, 0x3f	; 63
    2890:	f8 94       	cli
    2892:	0f 92       	push	r0
    2894:	f8 01       	movw	r30, r16
    2896:	85 8d       	ldd	r24, Z+29	; 0x1d
    2898:	8f 3f       	cpi	r24, 0xFF	; 255
    289a:	09 f4       	brne	.+2      	; 0x289e <xQueueReceive+0x9a>
    289c:	15 8e       	std	Z+29, r1	; 0x1d
    289e:	f8 01       	movw	r30, r16
    28a0:	86 8d       	ldd	r24, Z+30	; 0x1e
    28a2:	8f 3f       	cpi	r24, 0xFF	; 255
    28a4:	09 f4       	brne	.+2      	; 0x28a8 <xQueueReceive+0xa4>
    28a6:	16 8e       	std	Z+30, r1	; 0x1e
    28a8:	0f 90       	pop	r0
    28aa:	0f be       	out	0x3f, r0	; 63
    28ac:	be 01       	movw	r22, r28
    28ae:	6c 5f       	subi	r22, 0xFC	; 252
    28b0:	7f 4f       	sbci	r23, 0xFF	; 255
    28b2:	ce 01       	movw	r24, r28
    28b4:	01 96       	adiw	r24, 0x01	; 1
    28b6:	c4 d6       	rcall	.+3464   	; 0x3640 <xTaskCheckForTimeOut>
    28b8:	81 11       	cpse	r24, r1
    28ba:	13 c0       	rjmp	.+38     	; 0x28e2 <xQueueReceive+0xde>
    28bc:	c8 01       	movw	r24, r16
    28be:	b1 dd       	rcall	.-1182   	; 0x2422 <prvIsQueueEmpty>
    28c0:	88 23       	and	r24, r24
    28c2:	59 f0       	breq	.+22     	; 0x28da <xQueueReceive+0xd6>
    28c4:	6c 81       	ldd	r22, Y+4	; 0x04
    28c6:	7d 81       	ldd	r23, Y+5	; 0x05
    28c8:	c6 01       	movw	r24, r12
    28ca:	2e d6       	rcall	.+3164   	; 0x3528 <vTaskPlaceOnEventList>
    28cc:	c8 01       	movw	r24, r16
    28ce:	2d de       	rcall	.-934    	; 0x252a <prvUnlockQueue>
    28d0:	1c d5       	rcall	.+2616   	; 0x330a <xTaskResumeAll>
    28d2:	81 11       	cpse	r24, r1
    28d4:	b2 cf       	rjmp	.-156    	; 0x283a <xQueueReceive+0x36>
    28d6:	de dc       	rcall	.-1604   	; 0x2294 <vPortYield>
    28d8:	b0 cf       	rjmp	.-160    	; 0x283a <xQueueReceive+0x36>
    28da:	c8 01       	movw	r24, r16
    28dc:	26 de       	rcall	.-948    	; 0x252a <prvUnlockQueue>
    28de:	15 d5       	rcall	.+2602   	; 0x330a <xTaskResumeAll>
    28e0:	ac cf       	rjmp	.-168    	; 0x283a <xQueueReceive+0x36>
    28e2:	c8 01       	movw	r24, r16
    28e4:	22 de       	rcall	.-956    	; 0x252a <prvUnlockQueue>
    28e6:	11 d5       	rcall	.+2594   	; 0x330a <xTaskResumeAll>
    28e8:	c8 01       	movw	r24, r16
    28ea:	9b dd       	rcall	.-1226   	; 0x2422 <prvIsQueueEmpty>
    28ec:	88 23       	and	r24, r24
    28ee:	09 f4       	brne	.+2      	; 0x28f2 <xQueueReceive+0xee>
    28f0:	a4 cf       	rjmp	.-184    	; 0x283a <xQueueReceive+0x36>
    28f2:	80 e0       	ldi	r24, 0x00	; 0
    28f4:	0f 90       	pop	r0
    28f6:	0f 90       	pop	r0
    28f8:	0f 90       	pop	r0
    28fa:	0f 90       	pop	r0
    28fc:	0f 90       	pop	r0
    28fe:	df 91       	pop	r29
    2900:	cf 91       	pop	r28
    2902:	1f 91       	pop	r17
    2904:	0f 91       	pop	r16
    2906:	ff 90       	pop	r15
    2908:	ef 90       	pop	r14
    290a:	df 90       	pop	r13
    290c:	cf 90       	pop	r12
    290e:	bf 90       	pop	r11
    2910:	af 90       	pop	r10
    2912:	9f 90       	pop	r9
    2914:	08 95       	ret

00002916 <vQueueWaitForMessageRestricted>:
    2916:	cf 93       	push	r28
    2918:	df 93       	push	r29
    291a:	ec 01       	movw	r28, r24
    291c:	0f b6       	in	r0, 0x3f	; 63
    291e:	f8 94       	cli
    2920:	0f 92       	push	r0
    2922:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2924:	8f 3f       	cpi	r24, 0xFF	; 255
    2926:	09 f4       	brne	.+2      	; 0x292a <vQueueWaitForMessageRestricted+0x14>
    2928:	1d 8e       	std	Y+29, r1	; 0x1d
    292a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    292c:	8f 3f       	cpi	r24, 0xFF	; 255
    292e:	09 f4       	brne	.+2      	; 0x2932 <vQueueWaitForMessageRestricted+0x1c>
    2930:	1e 8e       	std	Y+30, r1	; 0x1e
    2932:	0f 90       	pop	r0
    2934:	0f be       	out	0x3f, r0	; 63
    2936:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2938:	81 11       	cpse	r24, r1
    293a:	03 c0       	rjmp	.+6      	; 0x2942 <vQueueWaitForMessageRestricted+0x2c>
    293c:	ce 01       	movw	r24, r28
    293e:	41 96       	adiw	r24, 0x11	; 17
    2940:	04 d6       	rcall	.+3080   	; 0x354a <vTaskPlaceOnEventListRestricted>
    2942:	ce 01       	movw	r24, r28
    2944:	f2 dd       	rcall	.-1052   	; 0x252a <prvUnlockQueue>
    2946:	df 91       	pop	r29
    2948:	cf 91       	pop	r28
    294a:	08 95       	ret

0000294c <prvBytesInBuffer>:
    294c:	fc 01       	movw	r30, r24
    294e:	44 81       	ldd	r20, Z+4	; 0x04
    2950:	55 81       	ldd	r21, Z+5	; 0x05
    2952:	22 81       	ldd	r18, Z+2	; 0x02
    2954:	33 81       	ldd	r19, Z+3	; 0x03
    2956:	24 0f       	add	r18, r20
    2958:	35 1f       	adc	r19, r21
    295a:	80 81       	ld	r24, Z
    295c:	91 81       	ldd	r25, Z+1	; 0x01
    295e:	b9 01       	movw	r22, r18
    2960:	68 1b       	sub	r22, r24
    2962:	79 0b       	sbc	r23, r25
    2964:	cb 01       	movw	r24, r22
    2966:	64 17       	cp	r22, r20
    2968:	75 07       	cpc	r23, r21
    296a:	10 f0       	brcs	.+4      	; 0x2970 <prvBytesInBuffer+0x24>
    296c:	84 1b       	sub	r24, r20
    296e:	95 0b       	sbc	r25, r21
    2970:	08 95       	ret

00002972 <prvWriteBytesToBuffer>:
    2972:	af 92       	push	r10
    2974:	bf 92       	push	r11
    2976:	cf 92       	push	r12
    2978:	df 92       	push	r13
    297a:	ef 92       	push	r14
    297c:	ff 92       	push	r15
    297e:	0f 93       	push	r16
    2980:	1f 93       	push	r17
    2982:	cf 93       	push	r28
    2984:	df 93       	push	r29
    2986:	6c 01       	movw	r12, r24
    2988:	5b 01       	movw	r10, r22
    298a:	7a 01       	movw	r14, r20
    298c:	fc 01       	movw	r30, r24
    298e:	c2 81       	ldd	r28, Z+2	; 0x02
    2990:	d3 81       	ldd	r29, Z+3	; 0x03
    2992:	04 81       	ldd	r16, Z+4	; 0x04
    2994:	15 81       	ldd	r17, Z+5	; 0x05
    2996:	0c 1b       	sub	r16, r28
    2998:	1d 0b       	sbc	r17, r29
    299a:	40 17       	cp	r20, r16
    299c:	51 07       	cpc	r21, r17
    299e:	08 f4       	brcc	.+2      	; 0x29a2 <prvWriteBytesToBuffer+0x30>
    29a0:	8a 01       	movw	r16, r20
    29a2:	f6 01       	movw	r30, r12
    29a4:	84 85       	ldd	r24, Z+12	; 0x0c
    29a6:	95 85       	ldd	r25, Z+13	; 0x0d
    29a8:	a8 01       	movw	r20, r16
    29aa:	b5 01       	movw	r22, r10
    29ac:	8c 0f       	add	r24, r28
    29ae:	9d 1f       	adc	r25, r29
    29b0:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <memcpy>
    29b4:	0e 15       	cp	r16, r14
    29b6:	1f 05       	cpc	r17, r15
    29b8:	58 f4       	brcc	.+22     	; 0x29d0 <prvWriteBytesToBuffer+0x5e>
    29ba:	a7 01       	movw	r20, r14
    29bc:	40 1b       	sub	r20, r16
    29be:	51 0b       	sbc	r21, r17
    29c0:	b5 01       	movw	r22, r10
    29c2:	60 0f       	add	r22, r16
    29c4:	71 1f       	adc	r23, r17
    29c6:	f6 01       	movw	r30, r12
    29c8:	84 85       	ldd	r24, Z+12	; 0x0c
    29ca:	95 85       	ldd	r25, Z+13	; 0x0d
    29cc:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <memcpy>
    29d0:	ce 01       	movw	r24, r28
    29d2:	8e 0d       	add	r24, r14
    29d4:	9f 1d       	adc	r25, r15
    29d6:	f6 01       	movw	r30, r12
    29d8:	24 81       	ldd	r18, Z+4	; 0x04
    29da:	35 81       	ldd	r19, Z+5	; 0x05
    29dc:	82 17       	cp	r24, r18
    29de:	93 07       	cpc	r25, r19
    29e0:	10 f0       	brcs	.+4      	; 0x29e6 <prvWriteBytesToBuffer+0x74>
    29e2:	82 1b       	sub	r24, r18
    29e4:	93 0b       	sbc	r25, r19
    29e6:	f6 01       	movw	r30, r12
    29e8:	93 83       	std	Z+3, r25	; 0x03
    29ea:	82 83       	std	Z+2, r24	; 0x02
    29ec:	c7 01       	movw	r24, r14
    29ee:	df 91       	pop	r29
    29f0:	cf 91       	pop	r28
    29f2:	1f 91       	pop	r17
    29f4:	0f 91       	pop	r16
    29f6:	ff 90       	pop	r15
    29f8:	ef 90       	pop	r14
    29fa:	df 90       	pop	r13
    29fc:	cf 90       	pop	r12
    29fe:	bf 90       	pop	r11
    2a00:	af 90       	pop	r10
    2a02:	08 95       	ret

00002a04 <prvWriteMessageToBuffer>:
    2a04:	cf 92       	push	r12
    2a06:	df 92       	push	r13
    2a08:	ef 92       	push	r14
    2a0a:	ff 92       	push	r15
    2a0c:	0f 93       	push	r16
    2a0e:	1f 93       	push	r17
    2a10:	cf 93       	push	r28
    2a12:	df 93       	push	r29
    2a14:	1f 92       	push	r1
    2a16:	1f 92       	push	r1
    2a18:	cd b7       	in	r28, 0x3d	; 61
    2a1a:	de b7       	in	r29, 0x3e	; 62
    2a1c:	5a 83       	std	Y+2, r21	; 0x02
    2a1e:	49 83       	std	Y+1, r20	; 0x01
    2a20:	21 15       	cp	r18, r1
    2a22:	31 05       	cpc	r19, r1
    2a24:	c9 f0       	breq	.+50     	; 0x2a58 <prvWriteMessageToBuffer+0x54>
    2a26:	6b 01       	movw	r12, r22
    2a28:	7c 01       	movw	r14, r24
    2a2a:	fc 01       	movw	r30, r24
    2a2c:	86 85       	ldd	r24, Z+14	; 0x0e
    2a2e:	80 fd       	sbrc	r24, 0
    2a30:	08 c0       	rjmp	.+16     	; 0x2a42 <prvWriteMessageToBuffer+0x3e>
    2a32:	ca 01       	movw	r24, r20
    2a34:	24 17       	cp	r18, r20
    2a36:	35 07       	cpc	r19, r21
    2a38:	08 f4       	brcc	.+2      	; 0x2a3c <prvWriteMessageToBuffer+0x38>
    2a3a:	c9 01       	movw	r24, r18
    2a3c:	9a 83       	std	Y+2, r25	; 0x02
    2a3e:	89 83       	std	Y+1, r24	; 0x01
    2a40:	11 c0       	rjmp	.+34     	; 0x2a64 <prvWriteMessageToBuffer+0x60>
    2a42:	20 17       	cp	r18, r16
    2a44:	31 07       	cpc	r19, r17
    2a46:	58 f0       	brcs	.+22     	; 0x2a5e <prvWriteMessageToBuffer+0x5a>
    2a48:	42 e0       	ldi	r20, 0x02	; 2
    2a4a:	50 e0       	ldi	r21, 0x00	; 0
    2a4c:	be 01       	movw	r22, r28
    2a4e:	6f 5f       	subi	r22, 0xFF	; 255
    2a50:	7f 4f       	sbci	r23, 0xFF	; 255
    2a52:	c7 01       	movw	r24, r14
    2a54:	8e df       	rcall	.-228    	; 0x2972 <prvWriteBytesToBuffer>
    2a56:	06 c0       	rjmp	.+12     	; 0x2a64 <prvWriteMessageToBuffer+0x60>
    2a58:	80 e0       	ldi	r24, 0x00	; 0
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	08 c0       	rjmp	.+16     	; 0x2a6e <prvWriteMessageToBuffer+0x6a>
    2a5e:	80 e0       	ldi	r24, 0x00	; 0
    2a60:	90 e0       	ldi	r25, 0x00	; 0
    2a62:	05 c0       	rjmp	.+10     	; 0x2a6e <prvWriteMessageToBuffer+0x6a>
    2a64:	49 81       	ldd	r20, Y+1	; 0x01
    2a66:	5a 81       	ldd	r21, Y+2	; 0x02
    2a68:	b6 01       	movw	r22, r12
    2a6a:	c7 01       	movw	r24, r14
    2a6c:	82 df       	rcall	.-252    	; 0x2972 <prvWriteBytesToBuffer>
    2a6e:	0f 90       	pop	r0
    2a70:	0f 90       	pop	r0
    2a72:	df 91       	pop	r29
    2a74:	cf 91       	pop	r28
    2a76:	1f 91       	pop	r17
    2a78:	0f 91       	pop	r16
    2a7a:	ff 90       	pop	r15
    2a7c:	ef 90       	pop	r14
    2a7e:	df 90       	pop	r13
    2a80:	cf 90       	pop	r12
    2a82:	08 95       	ret

00002a84 <prvReadBytesFromBuffer>:
    2a84:	af 92       	push	r10
    2a86:	bf 92       	push	r11
    2a88:	cf 92       	push	r12
    2a8a:	df 92       	push	r13
    2a8c:	ef 92       	push	r14
    2a8e:	ff 92       	push	r15
    2a90:	0f 93       	push	r16
    2a92:	1f 93       	push	r17
    2a94:	cf 93       	push	r28
    2a96:	df 93       	push	r29
    2a98:	7c 01       	movw	r14, r24
    2a9a:	5b 01       	movw	r10, r22
    2a9c:	e9 01       	movw	r28, r18
    2a9e:	42 17       	cp	r20, r18
    2aa0:	53 07       	cpc	r21, r19
    2aa2:	08 f4       	brcc	.+2      	; 0x2aa6 <prvReadBytesFromBuffer+0x22>
    2aa4:	ea 01       	movw	r28, r20
    2aa6:	20 97       	sbiw	r28, 0x00	; 0
    2aa8:	79 f1       	breq	.+94     	; 0x2b08 <prvReadBytesFromBuffer+0x84>
    2aaa:	f7 01       	movw	r30, r14
    2aac:	00 81       	ld	r16, Z
    2aae:	11 81       	ldd	r17, Z+1	; 0x01
    2ab0:	c4 80       	ldd	r12, Z+4	; 0x04
    2ab2:	d5 80       	ldd	r13, Z+5	; 0x05
    2ab4:	c0 1a       	sub	r12, r16
    2ab6:	d1 0a       	sbc	r13, r17
    2ab8:	cc 15       	cp	r28, r12
    2aba:	dd 05       	cpc	r29, r13
    2abc:	08 f4       	brcc	.+2      	; 0x2ac0 <prvReadBytesFromBuffer+0x3c>
    2abe:	6e 01       	movw	r12, r28
    2ac0:	f7 01       	movw	r30, r14
    2ac2:	64 85       	ldd	r22, Z+12	; 0x0c
    2ac4:	75 85       	ldd	r23, Z+13	; 0x0d
    2ac6:	60 0f       	add	r22, r16
    2ac8:	71 1f       	adc	r23, r17
    2aca:	a6 01       	movw	r20, r12
    2acc:	c5 01       	movw	r24, r10
    2ace:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <memcpy>
    2ad2:	cc 16       	cp	r12, r28
    2ad4:	dd 06       	cpc	r13, r29
    2ad6:	58 f4       	brcc	.+22     	; 0x2aee <prvReadBytesFromBuffer+0x6a>
    2ad8:	ae 01       	movw	r20, r28
    2ada:	4c 19       	sub	r20, r12
    2adc:	5d 09       	sbc	r21, r13
    2ade:	f7 01       	movw	r30, r14
    2ae0:	64 85       	ldd	r22, Z+12	; 0x0c
    2ae2:	75 85       	ldd	r23, Z+13	; 0x0d
    2ae4:	c5 01       	movw	r24, r10
    2ae6:	8c 0d       	add	r24, r12
    2ae8:	9d 1d       	adc	r25, r13
    2aea:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <memcpy>
    2aee:	0c 0f       	add	r16, r28
    2af0:	1d 1f       	adc	r17, r29
    2af2:	f7 01       	movw	r30, r14
    2af4:	84 81       	ldd	r24, Z+4	; 0x04
    2af6:	95 81       	ldd	r25, Z+5	; 0x05
    2af8:	08 17       	cp	r16, r24
    2afa:	19 07       	cpc	r17, r25
    2afc:	10 f0       	brcs	.+4      	; 0x2b02 <prvReadBytesFromBuffer+0x7e>
    2afe:	08 1b       	sub	r16, r24
    2b00:	19 0b       	sbc	r17, r25
    2b02:	f7 01       	movw	r30, r14
    2b04:	11 83       	std	Z+1, r17	; 0x01
    2b06:	00 83       	st	Z, r16
    2b08:	ce 01       	movw	r24, r28
    2b0a:	df 91       	pop	r29
    2b0c:	cf 91       	pop	r28
    2b0e:	1f 91       	pop	r17
    2b10:	0f 91       	pop	r16
    2b12:	ff 90       	pop	r15
    2b14:	ef 90       	pop	r14
    2b16:	df 90       	pop	r13
    2b18:	cf 90       	pop	r12
    2b1a:	bf 90       	pop	r11
    2b1c:	af 90       	pop	r10
    2b1e:	08 95       	ret

00002b20 <xStreamBufferGenericCreateStatic>:
    2b20:	0f 93       	push	r16
    2b22:	1f 93       	push	r17
    2b24:	cf 93       	push	r28
    2b26:	df 93       	push	r29
    2b28:	dc 01       	movw	r26, r24
    2b2a:	f8 01       	movw	r30, r16
    2b2c:	61 15       	cp	r22, r1
    2b2e:	71 05       	cpc	r23, r1
    2b30:	11 f4       	brne	.+4      	; 0x2b36 <xStreamBufferGenericCreateStatic+0x16>
    2b32:	61 e0       	ldi	r22, 0x01	; 1
    2b34:	70 e0       	ldi	r23, 0x00	; 0
    2b36:	41 11       	cpse	r20, r1
    2b38:	02 c0       	rjmp	.+4      	; 0x2b3e <xStreamBufferGenericCreateStatic+0x1e>
    2b3a:	92 e0       	ldi	r25, 0x02	; 2
    2b3c:	01 c0       	rjmp	.+2      	; 0x2b40 <xStreamBufferGenericCreateStatic+0x20>
    2b3e:	93 e0       	ldi	r25, 0x03	; 3
    2b40:	21 15       	cp	r18, r1
    2b42:	31 05       	cpc	r19, r1
    2b44:	91 f0       	breq	.+36     	; 0x2b6a <xStreamBufferGenericCreateStatic+0x4a>
    2b46:	30 97       	sbiw	r30, 0x00	; 0
    2b48:	99 f0       	breq	.+38     	; 0x2b70 <xStreamBufferGenericCreateStatic+0x50>
    2b4a:	8f e0       	ldi	r24, 0x0F	; 15
    2b4c:	ef 01       	movw	r28, r30
    2b4e:	19 92       	st	Y+, r1
    2b50:	8a 95       	dec	r24
    2b52:	e9 f7       	brne	.-6      	; 0x2b4e <xStreamBufferGenericCreateStatic+0x2e>
    2b54:	35 87       	std	Z+13, r19	; 0x0d
    2b56:	24 87       	std	Z+12, r18	; 0x0c
    2b58:	b5 83       	std	Z+5, r27	; 0x05
    2b5a:	a4 83       	std	Z+4, r26	; 0x04
    2b5c:	77 83       	std	Z+7, r23	; 0x07
    2b5e:	66 83       	std	Z+6, r22	; 0x06
    2b60:	92 60       	ori	r25, 0x02	; 2
    2b62:	96 87       	std	Z+14, r25	; 0x0e
    2b64:	8e 2f       	mov	r24, r30
    2b66:	9f 2f       	mov	r25, r31
    2b68:	05 c0       	rjmp	.+10     	; 0x2b74 <xStreamBufferGenericCreateStatic+0x54>
    2b6a:	80 e0       	ldi	r24, 0x00	; 0
    2b6c:	90 e0       	ldi	r25, 0x00	; 0
    2b6e:	02 c0       	rjmp	.+4      	; 0x2b74 <xStreamBufferGenericCreateStatic+0x54>
    2b70:	8e 2f       	mov	r24, r30
    2b72:	9f 2f       	mov	r25, r31
    2b74:	df 91       	pop	r29
    2b76:	cf 91       	pop	r28
    2b78:	1f 91       	pop	r17
    2b7a:	0f 91       	pop	r16
    2b7c:	08 95       	ret

00002b7e <xStreamBufferSpacesAvailable>:
    2b7e:	fc 01       	movw	r30, r24
    2b80:	24 81       	ldd	r18, Z+4	; 0x04
    2b82:	35 81       	ldd	r19, Z+5	; 0x05
    2b84:	80 81       	ld	r24, Z
    2b86:	91 81       	ldd	r25, Z+1	; 0x01
    2b88:	42 81       	ldd	r20, Z+2	; 0x02
    2b8a:	53 81       	ldd	r21, Z+3	; 0x03
    2b8c:	82 0f       	add	r24, r18
    2b8e:	93 1f       	adc	r25, r19
    2b90:	01 97       	sbiw	r24, 0x01	; 1
    2b92:	84 1b       	sub	r24, r20
    2b94:	95 0b       	sbc	r25, r21
    2b96:	82 17       	cp	r24, r18
    2b98:	93 07       	cpc	r25, r19
    2b9a:	10 f0       	brcs	.+4      	; 0x2ba0 <xStreamBufferSpacesAvailable+0x22>
    2b9c:	82 1b       	sub	r24, r18
    2b9e:	93 0b       	sbc	r25, r19
    2ba0:	08 95       	ret

00002ba2 <xStreamBufferSend>:
    2ba2:	4f 92       	push	r4
    2ba4:	5f 92       	push	r5
    2ba6:	6f 92       	push	r6
    2ba8:	7f 92       	push	r7
    2baa:	8f 92       	push	r8
    2bac:	9f 92       	push	r9
    2bae:	af 92       	push	r10
    2bb0:	bf 92       	push	r11
    2bb2:	cf 92       	push	r12
    2bb4:	df 92       	push	r13
    2bb6:	ef 92       	push	r14
    2bb8:	ff 92       	push	r15
    2bba:	0f 93       	push	r16
    2bbc:	1f 93       	push	r17
    2bbe:	cf 93       	push	r28
    2bc0:	df 93       	push	r29
    2bc2:	00 d0       	rcall	.+0      	; 0x2bc4 <xStreamBufferSend+0x22>
    2bc4:	1f 92       	push	r1
    2bc6:	1f 92       	push	r1
    2bc8:	cd b7       	in	r28, 0x3d	; 61
    2bca:	de b7       	in	r29, 0x3e	; 62
    2bcc:	6c 01       	movw	r12, r24
    2bce:	2b 01       	movw	r4, r22
    2bd0:	3a 01       	movw	r6, r20
    2bd2:	3d 83       	std	Y+5, r19	; 0x05
    2bd4:	2c 83       	std	Y+4, r18	; 0x04
    2bd6:	fc 01       	movw	r30, r24
    2bd8:	86 85       	ldd	r24, Z+14	; 0x0e
    2bda:	80 ff       	sbrs	r24, 0
    2bdc:	05 c0       	rjmp	.+10     	; 0x2be8 <xStreamBufferSend+0x46>
    2bde:	4a 01       	movw	r8, r20
    2be0:	f2 e0       	ldi	r31, 0x02	; 2
    2be2:	8f 0e       	add	r8, r31
    2be4:	91 1c       	adc	r9, r1
    2be6:	01 c0       	rjmp	.+2      	; 0x2bea <xStreamBufferSend+0x48>
    2be8:	4a 01       	movw	r8, r20
    2bea:	8c 81       	ldd	r24, Y+4	; 0x04
    2bec:	9d 81       	ldd	r25, Y+5	; 0x05
    2bee:	89 2b       	or	r24, r25
    2bf0:	09 f4       	brne	.+2      	; 0x2bf4 <xStreamBufferSend+0x52>
    2bf2:	31 c0       	rjmp	.+98     	; 0x2c56 <xStreamBufferSend+0xb4>
    2bf4:	ce 01       	movw	r24, r28
    2bf6:	01 96       	adiw	r24, 0x01	; 1
    2bf8:	08 d5       	rcall	.+2576   	; 0x360a <vTaskSetTimeOutState>
    2bfa:	0f b6       	in	r0, 0x3f	; 63
    2bfc:	f8 94       	cli
    2bfe:	0f 92       	push	r0
    2c00:	c6 01       	movw	r24, r12
    2c02:	bd df       	rcall	.-134    	; 0x2b7e <xStreamBufferSpacesAvailable>
    2c04:	5c 01       	movw	r10, r24
    2c06:	88 15       	cp	r24, r8
    2c08:	99 05       	cpc	r25, r9
    2c0a:	00 f5       	brcc	.+64     	; 0x2c4c <xStreamBufferSend+0xaa>
    2c0c:	80 e0       	ldi	r24, 0x00	; 0
    2c0e:	90 e0       	ldi	r25, 0x00	; 0
    2c10:	a4 d6       	rcall	.+3400   	; 0x395a <xTaskNotifyStateClear>
    2c12:	4f d5       	rcall	.+2718   	; 0x36b2 <xTaskGetCurrentTaskHandle>
    2c14:	f6 01       	movw	r30, r12
    2c16:	93 87       	std	Z+11, r25	; 0x0b
    2c18:	82 87       	std	Z+10, r24	; 0x0a
    2c1a:	0f 90       	pop	r0
    2c1c:	0f be       	out	0x3f, r0	; 63
    2c1e:	ec 80       	ldd	r14, Y+4	; 0x04
    2c20:	fd 80       	ldd	r15, Y+5	; 0x05
    2c22:	00 e0       	ldi	r16, 0x00	; 0
    2c24:	10 e0       	ldi	r17, 0x00	; 0
    2c26:	20 e0       	ldi	r18, 0x00	; 0
    2c28:	30 e0       	ldi	r19, 0x00	; 0
    2c2a:	a9 01       	movw	r20, r18
    2c2c:	60 e0       	ldi	r22, 0x00	; 0
    2c2e:	70 e0       	ldi	r23, 0x00	; 0
    2c30:	cb 01       	movw	r24, r22
    2c32:	92 d5       	rcall	.+2852   	; 0x3758 <xTaskNotifyWait>
    2c34:	f6 01       	movw	r30, r12
    2c36:	13 86       	std	Z+11, r1	; 0x0b
    2c38:	12 86       	std	Z+10, r1	; 0x0a
    2c3a:	be 01       	movw	r22, r28
    2c3c:	6c 5f       	subi	r22, 0xFC	; 252
    2c3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c40:	ce 01       	movw	r24, r28
    2c42:	01 96       	adiw	r24, 0x01	; 1
    2c44:	fd d4       	rcall	.+2554   	; 0x3640 <xTaskCheckForTimeOut>
    2c46:	88 23       	and	r24, r24
    2c48:	c1 f2       	breq	.-80     	; 0x2bfa <xStreamBufferSend+0x58>
    2c4a:	02 c0       	rjmp	.+4      	; 0x2c50 <xStreamBufferSend+0xae>
    2c4c:	0f 90       	pop	r0
    2c4e:	0f be       	out	0x3f, r0	; 63
    2c50:	a1 14       	cp	r10, r1
    2c52:	b1 04       	cpc	r11, r1
    2c54:	19 f4       	brne	.+6      	; 0x2c5c <xStreamBufferSend+0xba>
    2c56:	c6 01       	movw	r24, r12
    2c58:	92 df       	rcall	.-220    	; 0x2b7e <xStreamBufferSpacesAvailable>
    2c5a:	5c 01       	movw	r10, r24
    2c5c:	84 01       	movw	r16, r8
    2c5e:	95 01       	movw	r18, r10
    2c60:	a3 01       	movw	r20, r6
    2c62:	b2 01       	movw	r22, r4
    2c64:	c6 01       	movw	r24, r12
    2c66:	ce de       	rcall	.-612    	; 0x2a04 <prvWriteMessageToBuffer>
    2c68:	7c 01       	movw	r14, r24
    2c6a:	89 2b       	or	r24, r25
    2c6c:	d9 f0       	breq	.+54     	; 0x2ca4 <xStreamBufferSend+0x102>
    2c6e:	c6 01       	movw	r24, r12
    2c70:	6d de       	rcall	.-806    	; 0x294c <prvBytesInBuffer>
    2c72:	f6 01       	movw	r30, r12
    2c74:	26 81       	ldd	r18, Z+6	; 0x06
    2c76:	37 81       	ldd	r19, Z+7	; 0x07
    2c78:	82 17       	cp	r24, r18
    2c7a:	93 07       	cpc	r25, r19
    2c7c:	98 f0       	brcs	.+38     	; 0x2ca4 <xStreamBufferSend+0x102>
    2c7e:	7b d2       	rcall	.+1270   	; 0x3176 <vTaskSuspendAll>
    2c80:	f6 01       	movw	r30, r12
    2c82:	80 85       	ldd	r24, Z+8	; 0x08
    2c84:	91 85       	ldd	r25, Z+9	; 0x09
    2c86:	89 2b       	or	r24, r25
    2c88:	61 f0       	breq	.+24     	; 0x2ca2 <xStreamBufferSend+0x100>
    2c8a:	80 85       	ldd	r24, Z+8	; 0x08
    2c8c:	91 85       	ldd	r25, Z+9	; 0x09
    2c8e:	00 e0       	ldi	r16, 0x00	; 0
    2c90:	10 e0       	ldi	r17, 0x00	; 0
    2c92:	20 e0       	ldi	r18, 0x00	; 0
    2c94:	40 e0       	ldi	r20, 0x00	; 0
    2c96:	50 e0       	ldi	r21, 0x00	; 0
    2c98:	ba 01       	movw	r22, r20
    2c9a:	e1 d5       	rcall	.+3010   	; 0x385e <xTaskGenericNotify>
    2c9c:	f6 01       	movw	r30, r12
    2c9e:	11 86       	std	Z+9, r1	; 0x09
    2ca0:	10 86       	std	Z+8, r1	; 0x08
    2ca2:	33 d3       	rcall	.+1638   	; 0x330a <xTaskResumeAll>
    2ca4:	c7 01       	movw	r24, r14
    2ca6:	0f 90       	pop	r0
    2ca8:	0f 90       	pop	r0
    2caa:	0f 90       	pop	r0
    2cac:	0f 90       	pop	r0
    2cae:	0f 90       	pop	r0
    2cb0:	df 91       	pop	r29
    2cb2:	cf 91       	pop	r28
    2cb4:	1f 91       	pop	r17
    2cb6:	0f 91       	pop	r16
    2cb8:	ff 90       	pop	r15
    2cba:	ef 90       	pop	r14
    2cbc:	df 90       	pop	r13
    2cbe:	cf 90       	pop	r12
    2cc0:	bf 90       	pop	r11
    2cc2:	af 90       	pop	r10
    2cc4:	9f 90       	pop	r9
    2cc6:	8f 90       	pop	r8
    2cc8:	7f 90       	pop	r7
    2cca:	6f 90       	pop	r6
    2ccc:	5f 90       	pop	r5
    2cce:	4f 90       	pop	r4
    2cd0:	08 95       	ret

00002cd2 <xStreamBufferReceive>:
    2cd2:	6f 92       	push	r6
    2cd4:	7f 92       	push	r7
    2cd6:	8f 92       	push	r8
    2cd8:	9f 92       	push	r9
    2cda:	af 92       	push	r10
    2cdc:	bf 92       	push	r11
    2cde:	cf 92       	push	r12
    2ce0:	df 92       	push	r13
    2ce2:	ef 92       	push	r14
    2ce4:	ff 92       	push	r15
    2ce6:	0f 93       	push	r16
    2ce8:	1f 93       	push	r17
    2cea:	cf 93       	push	r28
    2cec:	df 93       	push	r29
    2cee:	1f 92       	push	r1
    2cf0:	1f 92       	push	r1
    2cf2:	cd b7       	in	r28, 0x3d	; 61
    2cf4:	de b7       	in	r29, 0x3e	; 62
    2cf6:	6c 01       	movw	r12, r24
    2cf8:	3b 01       	movw	r6, r22
    2cfa:	4a 01       	movw	r8, r20
    2cfc:	79 01       	movw	r14, r18
    2cfe:	fc 01       	movw	r30, r24
    2d00:	86 85       	ldd	r24, Z+14	; 0x0e
    2d02:	80 fd       	sbrc	r24, 0
    2d04:	03 c0       	rjmp	.+6      	; 0x2d0c <xStreamBufferReceive+0x3a>
    2d06:	a1 2c       	mov	r10, r1
    2d08:	b1 2c       	mov	r11, r1
    2d0a:	04 c0       	rjmp	.+8      	; 0x2d14 <xStreamBufferReceive+0x42>
    2d0c:	68 94       	set
    2d0e:	aa 24       	eor	r10, r10
    2d10:	a1 f8       	bld	r10, 1
    2d12:	b1 2c       	mov	r11, r1
    2d14:	e1 14       	cp	r14, r1
    2d16:	f1 04       	cpc	r15, r1
    2d18:	29 f1       	breq	.+74     	; 0x2d64 <xStreamBufferReceive+0x92>
    2d1a:	0f b6       	in	r0, 0x3f	; 63
    2d1c:	f8 94       	cli
    2d1e:	0f 92       	push	r0
    2d20:	c6 01       	movw	r24, r12
    2d22:	14 de       	rcall	.-984    	; 0x294c <prvBytesInBuffer>
    2d24:	8c 01       	movw	r16, r24
    2d26:	a8 16       	cp	r10, r24
    2d28:	b9 06       	cpc	r11, r25
    2d2a:	38 f0       	brcs	.+14     	; 0x2d3a <xStreamBufferReceive+0x68>
    2d2c:	80 e0       	ldi	r24, 0x00	; 0
    2d2e:	90 e0       	ldi	r25, 0x00	; 0
    2d30:	14 d6       	rcall	.+3112   	; 0x395a <xTaskNotifyStateClear>
    2d32:	bf d4       	rcall	.+2430   	; 0x36b2 <xTaskGetCurrentTaskHandle>
    2d34:	f6 01       	movw	r30, r12
    2d36:	91 87       	std	Z+9, r25	; 0x09
    2d38:	80 87       	std	Z+8, r24	; 0x08
    2d3a:	0f 90       	pop	r0
    2d3c:	0f be       	out	0x3f, r0	; 63
    2d3e:	a0 16       	cp	r10, r16
    2d40:	b1 06       	cpc	r11, r17
    2d42:	b0 f0       	brcs	.+44     	; 0x2d70 <xStreamBufferReceive+0x9e>
    2d44:	00 e0       	ldi	r16, 0x00	; 0
    2d46:	10 e0       	ldi	r17, 0x00	; 0
    2d48:	20 e0       	ldi	r18, 0x00	; 0
    2d4a:	30 e0       	ldi	r19, 0x00	; 0
    2d4c:	a9 01       	movw	r20, r18
    2d4e:	60 e0       	ldi	r22, 0x00	; 0
    2d50:	70 e0       	ldi	r23, 0x00	; 0
    2d52:	cb 01       	movw	r24, r22
    2d54:	01 d5       	rcall	.+2562   	; 0x3758 <xTaskNotifyWait>
    2d56:	f6 01       	movw	r30, r12
    2d58:	11 86       	std	Z+9, r1	; 0x09
    2d5a:	10 86       	std	Z+8, r1	; 0x08
    2d5c:	c6 01       	movw	r24, r12
    2d5e:	f6 dd       	rcall	.-1044   	; 0x294c <prvBytesInBuffer>
    2d60:	8c 01       	movw	r16, r24
    2d62:	03 c0       	rjmp	.+6      	; 0x2d6a <xStreamBufferReceive+0x98>
    2d64:	c6 01       	movw	r24, r12
    2d66:	f2 dd       	rcall	.-1052   	; 0x294c <prvBytesInBuffer>
    2d68:	8c 01       	movw	r16, r24
    2d6a:	a0 16       	cp	r10, r16
    2d6c:	b1 06       	cpc	r11, r17
    2d6e:	b8 f5       	brcc	.+110    	; 0x2dde <xStreamBufferReceive+0x10c>
    2d70:	a1 14       	cp	r10, r1
    2d72:	b1 04       	cpc	r11, r1
    2d74:	c1 f0       	breq	.+48     	; 0x2da6 <xStreamBufferReceive+0xd4>
    2d76:	f6 01       	movw	r30, r12
    2d78:	e0 80       	ld	r14, Z
    2d7a:	f1 80       	ldd	r15, Z+1	; 0x01
    2d7c:	98 01       	movw	r18, r16
    2d7e:	a5 01       	movw	r20, r10
    2d80:	be 01       	movw	r22, r28
    2d82:	6f 5f       	subi	r22, 0xFF	; 255
    2d84:	7f 4f       	sbci	r23, 0xFF	; 255
    2d86:	c6 01       	movw	r24, r12
    2d88:	7d de       	rcall	.-774    	; 0x2a84 <prvReadBytesFromBuffer>
    2d8a:	89 81       	ldd	r24, Y+1	; 0x01
    2d8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8e:	0a 19       	sub	r16, r10
    2d90:	1b 09       	sbc	r17, r11
    2d92:	88 16       	cp	r8, r24
    2d94:	99 06       	cpc	r9, r25
    2d96:	30 f4       	brcc	.+12     	; 0x2da4 <xStreamBufferReceive+0xd2>
    2d98:	f6 01       	movw	r30, r12
    2d9a:	f1 82       	std	Z+1, r15	; 0x01
    2d9c:	e0 82       	st	Z, r14
    2d9e:	81 2c       	mov	r8, r1
    2da0:	91 2c       	mov	r9, r1
    2da2:	01 c0       	rjmp	.+2      	; 0x2da6 <xStreamBufferReceive+0xd4>
    2da4:	4c 01       	movw	r8, r24
    2da6:	98 01       	movw	r18, r16
    2da8:	a4 01       	movw	r20, r8
    2daa:	b3 01       	movw	r22, r6
    2dac:	c6 01       	movw	r24, r12
    2dae:	6a de       	rcall	.-812    	; 0x2a84 <prvReadBytesFromBuffer>
    2db0:	7c 01       	movw	r14, r24
    2db2:	89 2b       	or	r24, r25
    2db4:	b1 f0       	breq	.+44     	; 0x2de2 <xStreamBufferReceive+0x110>
    2db6:	df d1       	rcall	.+958    	; 0x3176 <vTaskSuspendAll>
    2db8:	f6 01       	movw	r30, r12
    2dba:	82 85       	ldd	r24, Z+10	; 0x0a
    2dbc:	93 85       	ldd	r25, Z+11	; 0x0b
    2dbe:	89 2b       	or	r24, r25
    2dc0:	61 f0       	breq	.+24     	; 0x2dda <xStreamBufferReceive+0x108>
    2dc2:	82 85       	ldd	r24, Z+10	; 0x0a
    2dc4:	93 85       	ldd	r25, Z+11	; 0x0b
    2dc6:	00 e0       	ldi	r16, 0x00	; 0
    2dc8:	10 e0       	ldi	r17, 0x00	; 0
    2dca:	20 e0       	ldi	r18, 0x00	; 0
    2dcc:	40 e0       	ldi	r20, 0x00	; 0
    2dce:	50 e0       	ldi	r21, 0x00	; 0
    2dd0:	ba 01       	movw	r22, r20
    2dd2:	45 d5       	rcall	.+2698   	; 0x385e <xTaskGenericNotify>
    2dd4:	f6 01       	movw	r30, r12
    2dd6:	13 86       	std	Z+11, r1	; 0x0b
    2dd8:	12 86       	std	Z+10, r1	; 0x0a
    2dda:	97 d2       	rcall	.+1326   	; 0x330a <xTaskResumeAll>
    2ddc:	02 c0       	rjmp	.+4      	; 0x2de2 <xStreamBufferReceive+0x110>
    2dde:	e1 2c       	mov	r14, r1
    2de0:	f1 2c       	mov	r15, r1
    2de2:	c7 01       	movw	r24, r14
    2de4:	0f 90       	pop	r0
    2de6:	0f 90       	pop	r0
    2de8:	df 91       	pop	r29
    2dea:	cf 91       	pop	r28
    2dec:	1f 91       	pop	r17
    2dee:	0f 91       	pop	r16
    2df0:	ff 90       	pop	r15
    2df2:	ef 90       	pop	r14
    2df4:	df 90       	pop	r13
    2df6:	cf 90       	pop	r12
    2df8:	bf 90       	pop	r11
    2dfa:	af 90       	pop	r10
    2dfc:	9f 90       	pop	r9
    2dfe:	8f 90       	pop	r8
    2e00:	7f 90       	pop	r7
    2e02:	6f 90       	pop	r6
    2e04:	08 95       	ret

00002e06 <prvResetNextTaskUnblockTime>:
    2e06:	e0 91 98 0a 	lds	r30, 0x0A98	; 0x800a98 <pxDelayedTaskList>
    2e0a:	f0 91 99 0a 	lds	r31, 0x0A99	; 0x800a99 <pxDelayedTaskList+0x1>
    2e0e:	80 81       	ld	r24, Z
    2e10:	81 11       	cpse	r24, r1
    2e12:	07 c0       	rjmp	.+14     	; 0x2e22 <prvResetNextTaskUnblockTime+0x1c>
    2e14:	8f ef       	ldi	r24, 0xFF	; 255
    2e16:	9f ef       	ldi	r25, 0xFF	; 255
    2e18:	90 93 70 0a 	sts	0x0A70, r25	; 0x800a70 <xNextTaskUnblockTime+0x1>
    2e1c:	80 93 6f 0a 	sts	0x0A6F, r24	; 0x800a6f <xNextTaskUnblockTime>
    2e20:	08 95       	ret
    2e22:	e0 91 98 0a 	lds	r30, 0x0A98	; 0x800a98 <pxDelayedTaskList>
    2e26:	f0 91 99 0a 	lds	r31, 0x0A99	; 0x800a99 <pxDelayedTaskList+0x1>
    2e2a:	05 80       	ldd	r0, Z+5	; 0x05
    2e2c:	f6 81       	ldd	r31, Z+6	; 0x06
    2e2e:	e0 2d       	mov	r30, r0
    2e30:	06 80       	ldd	r0, Z+6	; 0x06
    2e32:	f7 81       	ldd	r31, Z+7	; 0x07
    2e34:	e0 2d       	mov	r30, r0
    2e36:	82 81       	ldd	r24, Z+2	; 0x02
    2e38:	93 81       	ldd	r25, Z+3	; 0x03
    2e3a:	90 93 70 0a 	sts	0x0A70, r25	; 0x800a70 <xNextTaskUnblockTime+0x1>
    2e3e:	80 93 6f 0a 	sts	0x0A6F, r24	; 0x800a6f <xNextTaskUnblockTime>
    2e42:	08 95       	ret

00002e44 <prvAddCurrentTaskToDelayedList>:
    2e44:	ff 92       	push	r15
    2e46:	0f 93       	push	r16
    2e48:	1f 93       	push	r17
    2e4a:	cf 93       	push	r28
    2e4c:	df 93       	push	r29
    2e4e:	ec 01       	movw	r28, r24
    2e50:	f6 2e       	mov	r15, r22
    2e52:	00 91 77 0a 	lds	r16, 0x0A77	; 0x800a77 <xTickCount>
    2e56:	10 91 78 0a 	lds	r17, 0x0A78	; 0x800a78 <xTickCount+0x1>
    2e5a:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2e5e:	90 91 bf 0a 	lds	r25, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2e62:	02 96       	adiw	r24, 0x02	; 2
    2e64:	42 d9       	rcall	.-3452   	; 0x20ea <uxListRemove>
    2e66:	cf 3f       	cpi	r28, 0xFF	; 255
    2e68:	8f ef       	ldi	r24, 0xFF	; 255
    2e6a:	d8 07       	cpc	r29, r24
    2e6c:	61 f4       	brne	.+24     	; 0x2e86 <prvAddCurrentTaskToDelayedList+0x42>
    2e6e:	ff 20       	and	r15, r15
    2e70:	51 f0       	breq	.+20     	; 0x2e86 <prvAddCurrentTaskToDelayedList+0x42>
    2e72:	60 91 be 0a 	lds	r22, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2e76:	70 91 bf 0a 	lds	r23, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2e7a:	6e 5f       	subi	r22, 0xFE	; 254
    2e7c:	7f 4f       	sbci	r23, 0xFF	; 255
    2e7e:	8a e7       	ldi	r24, 0x7A	; 122
    2e80:	9a e0       	ldi	r25, 0x0A	; 10
    2e82:	e1 d8       	rcall	.-3646   	; 0x2046 <vListInsertEnd>
    2e84:	2d c0       	rjmp	.+90     	; 0x2ee0 <prvAddCurrentTaskToDelayedList+0x9c>
    2e86:	c0 0f       	add	r28, r16
    2e88:	d1 1f       	adc	r29, r17
    2e8a:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2e8e:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2e92:	d3 83       	std	Z+3, r29	; 0x03
    2e94:	c2 83       	std	Z+2, r28	; 0x02
    2e96:	c0 17       	cp	r28, r16
    2e98:	d1 07       	cpc	r29, r17
    2e9a:	60 f4       	brcc	.+24     	; 0x2eb4 <prvAddCurrentTaskToDelayedList+0x70>
    2e9c:	60 91 be 0a 	lds	r22, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2ea0:	70 91 bf 0a 	lds	r23, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2ea4:	80 91 96 0a 	lds	r24, 0x0A96	; 0x800a96 <pxOverflowDelayedTaskList>
    2ea8:	90 91 97 0a 	lds	r25, 0x0A97	; 0x800a97 <pxOverflowDelayedTaskList+0x1>
    2eac:	6e 5f       	subi	r22, 0xFE	; 254
    2eae:	7f 4f       	sbci	r23, 0xFF	; 255
    2eb0:	eb d8       	rcall	.-3626   	; 0x2088 <vListInsert>
    2eb2:	16 c0       	rjmp	.+44     	; 0x2ee0 <prvAddCurrentTaskToDelayedList+0x9c>
    2eb4:	60 91 be 0a 	lds	r22, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2eb8:	70 91 bf 0a 	lds	r23, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2ebc:	80 91 98 0a 	lds	r24, 0x0A98	; 0x800a98 <pxDelayedTaskList>
    2ec0:	90 91 99 0a 	lds	r25, 0x0A99	; 0x800a99 <pxDelayedTaskList+0x1>
    2ec4:	6e 5f       	subi	r22, 0xFE	; 254
    2ec6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ec8:	df d8       	rcall	.-3650   	; 0x2088 <vListInsert>
    2eca:	80 91 6f 0a 	lds	r24, 0x0A6F	; 0x800a6f <xNextTaskUnblockTime>
    2ece:	90 91 70 0a 	lds	r25, 0x0A70	; 0x800a70 <xNextTaskUnblockTime+0x1>
    2ed2:	c8 17       	cp	r28, r24
    2ed4:	d9 07       	cpc	r29, r25
    2ed6:	20 f4       	brcc	.+8      	; 0x2ee0 <prvAddCurrentTaskToDelayedList+0x9c>
    2ed8:	d0 93 70 0a 	sts	0x0A70, r29	; 0x800a70 <xNextTaskUnblockTime+0x1>
    2edc:	c0 93 6f 0a 	sts	0x0A6F, r28	; 0x800a6f <xNextTaskUnblockTime>
    2ee0:	df 91       	pop	r29
    2ee2:	cf 91       	pop	r28
    2ee4:	1f 91       	pop	r17
    2ee6:	0f 91       	pop	r16
    2ee8:	ff 90       	pop	r15
    2eea:	08 95       	ret

00002eec <xTaskCreateStatic>:
    2eec:	6f 92       	push	r6
    2eee:	7f 92       	push	r7
    2ef0:	8f 92       	push	r8
    2ef2:	9f 92       	push	r9
    2ef4:	af 92       	push	r10
    2ef6:	bf 92       	push	r11
    2ef8:	cf 92       	push	r12
    2efa:	df 92       	push	r13
    2efc:	ef 92       	push	r14
    2efe:	ff 92       	push	r15
    2f00:	0f 93       	push	r16
    2f02:	cf 93       	push	r28
    2f04:	df 93       	push	r29
    2f06:	c1 14       	cp	r12, r1
    2f08:	d1 04       	cpc	r13, r1
    2f0a:	09 f4       	brne	.+2      	; 0x2f0e <xTaskCreateStatic+0x22>
    2f0c:	d2 c0       	rjmp	.+420    	; 0x30b2 <xTaskCreateStatic+0x1c6>
    2f0e:	e1 14       	cp	r14, r1
    2f10:	f1 04       	cpc	r15, r1
    2f12:	09 f4       	brne	.+2      	; 0x2f16 <xTaskCreateStatic+0x2a>
    2f14:	d1 c0       	rjmp	.+418    	; 0x30b8 <xTaskCreateStatic+0x1cc>
    2f16:	e6 01       	movw	r28, r12
    2f18:	59 01       	movw	r10, r18
    2f1a:	3a 01       	movw	r6, r20
    2f1c:	4b 01       	movw	r8, r22
    2f1e:	6c 01       	movw	r12, r24
    2f20:	f8 8e       	std	Y+24, r15	; 0x18
    2f22:	ef 8a       	std	Y+23, r14	; 0x17
    2f24:	65 ea       	ldi	r22, 0xA5	; 165
    2f26:	70 e0       	ldi	r23, 0x00	; 0
    2f28:	c7 01       	movw	r24, r14
    2f2a:	0e 94 c3 1f 	call	0x3f86	; 0x3f86 <memset>
    2f2e:	81 e0       	ldi	r24, 0x01	; 1
    2f30:	68 1a       	sub	r6, r24
    2f32:	71 08       	sbc	r7, r1
    2f34:	ef 88       	ldd	r14, Y+23	; 0x17
    2f36:	f8 8c       	ldd	r15, Y+24	; 0x18
    2f38:	e6 0c       	add	r14, r6
    2f3a:	f7 1c       	adc	r15, r7
    2f3c:	d4 01       	movw	r26, r8
    2f3e:	8c 91       	ld	r24, X
    2f40:	89 8f       	std	Y+25, r24	; 0x19
    2f42:	8c 91       	ld	r24, X
    2f44:	88 23       	and	r24, r24
    2f46:	a1 f0       	breq	.+40     	; 0x2f70 <xTaskCreateStatic+0x84>
    2f48:	ae 01       	movw	r20, r28
    2f4a:	46 5e       	subi	r20, 0xE6	; 230
    2f4c:	5f 4f       	sbci	r21, 0xFF	; 255
    2f4e:	f4 01       	movw	r30, r8
    2f50:	31 96       	adiw	r30, 0x01	; 1
    2f52:	b8 e0       	ldi	r27, 0x08	; 8
    2f54:	8b 0e       	add	r8, r27
    2f56:	91 1c       	adc	r9, r1
    2f58:	cf 01       	movw	r24, r30
    2f5a:	21 91       	ld	r18, Z+
    2f5c:	da 01       	movw	r26, r20
    2f5e:	2d 93       	st	X+, r18
    2f60:	ad 01       	movw	r20, r26
    2f62:	dc 01       	movw	r26, r24
    2f64:	8c 91       	ld	r24, X
    2f66:	88 23       	and	r24, r24
    2f68:	19 f0       	breq	.+6      	; 0x2f70 <xTaskCreateStatic+0x84>
    2f6a:	e8 15       	cp	r30, r8
    2f6c:	f9 05       	cpc	r31, r9
    2f6e:	a1 f7       	brne	.-24     	; 0x2f58 <xTaskCreateStatic+0x6c>
    2f70:	18 a2       	std	Y+32, r1	; 0x20
    2f72:	04 30       	cpi	r16, 0x04	; 4
    2f74:	08 f0       	brcs	.+2      	; 0x2f78 <xTaskCreateStatic+0x8c>
    2f76:	03 e0       	ldi	r16, 0x03	; 3
    2f78:	0e 8b       	std	Y+22, r16	; 0x16
    2f7a:	09 a3       	std	Y+33, r16	; 0x21
    2f7c:	1a a2       	std	Y+34, r1	; 0x22
    2f7e:	4e 01       	movw	r8, r28
    2f80:	b2 e0       	ldi	r27, 0x02	; 2
    2f82:	8b 0e       	add	r8, r27
    2f84:	91 1c       	adc	r9, r1
    2f86:	c4 01       	movw	r24, r8
    2f88:	5a d8       	rcall	.-3916   	; 0x203e <vListInitialiseItem>
    2f8a:	ce 01       	movw	r24, r28
    2f8c:	0c 96       	adiw	r24, 0x0c	; 12
    2f8e:	57 d8       	rcall	.-3922   	; 0x203e <vListInitialiseItem>
    2f90:	d9 87       	std	Y+9, r29	; 0x09
    2f92:	c8 87       	std	Y+8, r28	; 0x08
    2f94:	84 e0       	ldi	r24, 0x04	; 4
    2f96:	90 e0       	ldi	r25, 0x00	; 0
    2f98:	80 1b       	sub	r24, r16
    2f9a:	91 09       	sbc	r25, r1
    2f9c:	9d 87       	std	Y+13, r25	; 0x0d
    2f9e:	8c 87       	std	Y+12, r24	; 0x0c
    2fa0:	db 8b       	std	Y+19, r29	; 0x13
    2fa2:	ca 8b       	std	Y+18, r28	; 0x12
    2fa4:	1b a2       	std	Y+35, r1	; 0x23
    2fa6:	1c a2       	std	Y+36, r1	; 0x24
    2fa8:	1d a2       	std	Y+37, r1	; 0x25
    2faa:	1e a2       	std	Y+38, r1	; 0x26
    2fac:	1f a2       	std	Y+39, r1	; 0x27
    2fae:	a5 01       	movw	r20, r10
    2fb0:	b6 01       	movw	r22, r12
    2fb2:	c7 01       	movw	r24, r14
    2fb4:	c1 d8       	rcall	.-3710   	; 0x2138 <pxPortInitialiseStack>
    2fb6:	99 83       	std	Y+1, r25	; 0x01
    2fb8:	88 83       	st	Y, r24
    2fba:	0f b6       	in	r0, 0x3f	; 63
    2fbc:	f8 94       	cli
    2fbe:	0f 92       	push	r0
    2fc0:	80 91 79 0a 	lds	r24, 0x0A79	; 0x800a79 <uxCurrentNumberOfTasks>
    2fc4:	8f 5f       	subi	r24, 0xFF	; 255
    2fc6:	80 93 79 0a 	sts	0x0A79, r24	; 0x800a79 <uxCurrentNumberOfTasks>
    2fca:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <pxCurrentTCB>
    2fce:	90 91 bf 0a 	lds	r25, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    2fd2:	89 2b       	or	r24, r25
    2fd4:	89 f5       	brne	.+98     	; 0x3038 <xTaskCreateStatic+0x14c>
    2fd6:	d0 93 bf 0a 	sts	0x0ABF, r29	; 0x800abf <pxCurrentTCB+0x1>
    2fda:	c0 93 be 0a 	sts	0x0ABE, r28	; 0x800abe <pxCurrentTCB>
    2fde:	80 91 79 0a 	lds	r24, 0x0A79	; 0x800a79 <uxCurrentNumberOfTasks>
    2fe2:	81 30       	cpi	r24, 0x01	; 1
    2fe4:	09 f0       	breq	.+2      	; 0x2fe8 <xTaskCreateStatic+0xfc>
    2fe6:	38 c0       	rjmp	.+112    	; 0x3058 <xTaskCreateStatic+0x16c>
    2fe8:	8a e9       	ldi	r24, 0x9A	; 154
    2fea:	9a e0       	ldi	r25, 0x0A	; 10
    2fec:	1a d8       	rcall	.-4044   	; 0x2022 <vListInitialise>
    2fee:	83 ea       	ldi	r24, 0xA3	; 163
    2ff0:	9a e0       	ldi	r25, 0x0A	; 10
    2ff2:	17 d8       	rcall	.-4050   	; 0x2022 <vListInitialise>
    2ff4:	8c ea       	ldi	r24, 0xAC	; 172
    2ff6:	9a e0       	ldi	r25, 0x0A	; 10
    2ff8:	14 d8       	rcall	.-4056   	; 0x2022 <vListInitialise>
    2ffa:	85 eb       	ldi	r24, 0xB5	; 181
    2ffc:	9a e0       	ldi	r25, 0x0A	; 10
    2ffe:	11 d8       	rcall	.-4062   	; 0x2022 <vListInitialise>
    3000:	85 e6       	ldi	r24, 0x65	; 101
    3002:	9a e0       	ldi	r25, 0x0A	; 10
    3004:	0e d8       	rcall	.-4068   	; 0x2022 <vListInitialise>
    3006:	8c e5       	ldi	r24, 0x5C	; 92
    3008:	9a e0       	ldi	r25, 0x0A	; 10
    300a:	0b d8       	rcall	.-4074   	; 0x2022 <vListInitialise>
    300c:	8d e8       	ldi	r24, 0x8D	; 141
    300e:	9a e0       	ldi	r25, 0x0A	; 10
    3010:	08 d8       	rcall	.-4080   	; 0x2022 <vListInitialise>
    3012:	84 e8       	ldi	r24, 0x84	; 132
    3014:	9a e0       	ldi	r25, 0x0A	; 10
    3016:	05 d8       	rcall	.-4086   	; 0x2022 <vListInitialise>
    3018:	8a e7       	ldi	r24, 0x7A	; 122
    301a:	9a e0       	ldi	r25, 0x0A	; 10
    301c:	02 d8       	rcall	.-4092   	; 0x2022 <vListInitialise>
    301e:	85 e6       	ldi	r24, 0x65	; 101
    3020:	9a e0       	ldi	r25, 0x0A	; 10
    3022:	90 93 99 0a 	sts	0x0A99, r25	; 0x800a99 <pxDelayedTaskList+0x1>
    3026:	80 93 98 0a 	sts	0x0A98, r24	; 0x800a98 <pxDelayedTaskList>
    302a:	8c e5       	ldi	r24, 0x5C	; 92
    302c:	9a e0       	ldi	r25, 0x0A	; 10
    302e:	90 93 97 0a 	sts	0x0A97, r25	; 0x800a97 <pxOverflowDelayedTaskList+0x1>
    3032:	80 93 96 0a 	sts	0x0A96, r24	; 0x800a96 <pxOverflowDelayedTaskList>
    3036:	10 c0       	rjmp	.+32     	; 0x3058 <xTaskCreateStatic+0x16c>
    3038:	80 91 75 0a 	lds	r24, 0x0A75	; 0x800a75 <xSchedulerRunning>
    303c:	81 11       	cpse	r24, r1
    303e:	0c c0       	rjmp	.+24     	; 0x3058 <xTaskCreateStatic+0x16c>
    3040:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    3044:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3048:	96 89       	ldd	r25, Z+22	; 0x16
    304a:	8e 89       	ldd	r24, Y+22	; 0x16
    304c:	89 17       	cp	r24, r25
    304e:	20 f0       	brcs	.+8      	; 0x3058 <xTaskCreateStatic+0x16c>
    3050:	d0 93 bf 0a 	sts	0x0ABF, r29	; 0x800abf <pxCurrentTCB+0x1>
    3054:	c0 93 be 0a 	sts	0x0ABE, r28	; 0x800abe <pxCurrentTCB>
    3058:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <uxTaskNumber>
    305c:	8f 5f       	subi	r24, 0xFF	; 255
    305e:	80 93 71 0a 	sts	0x0A71, r24	; 0x800a71 <uxTaskNumber>
    3062:	8e 89       	ldd	r24, Y+22	; 0x16
    3064:	90 91 76 0a 	lds	r25, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    3068:	98 17       	cp	r25, r24
    306a:	10 f4       	brcc	.+4      	; 0x3070 <xTaskCreateStatic+0x184>
    306c:	80 93 76 0a 	sts	0x0A76, r24	; 0x800a76 <uxTopReadyPriority>
    3070:	90 e0       	ldi	r25, 0x00	; 0
    3072:	9c 01       	movw	r18, r24
    3074:	22 0f       	add	r18, r18
    3076:	33 1f       	adc	r19, r19
    3078:	22 0f       	add	r18, r18
    307a:	33 1f       	adc	r19, r19
    307c:	22 0f       	add	r18, r18
    307e:	33 1f       	adc	r19, r19
    3080:	82 0f       	add	r24, r18
    3082:	93 1f       	adc	r25, r19
    3084:	b4 01       	movw	r22, r8
    3086:	86 56       	subi	r24, 0x66	; 102
    3088:	95 4f       	sbci	r25, 0xF5	; 245
    308a:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    308e:	0f 90       	pop	r0
    3090:	0f be       	out	0x3f, r0	; 63
    3092:	80 91 75 0a 	lds	r24, 0x0A75	; 0x800a75 <xSchedulerRunning>
    3096:	88 23       	and	r24, r24
    3098:	91 f0       	breq	.+36     	; 0x30be <xTaskCreateStatic+0x1d2>
    309a:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    309e:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    30a2:	96 89       	ldd	r25, Z+22	; 0x16
    30a4:	8e 89       	ldd	r24, Y+22	; 0x16
    30a6:	98 17       	cp	r25, r24
    30a8:	68 f4       	brcc	.+26     	; 0x30c4 <xTaskCreateStatic+0x1d8>
    30aa:	f4 d8       	rcall	.-3608   	; 0x2294 <vPortYield>
    30ac:	8c 2f       	mov	r24, r28
    30ae:	9d 2f       	mov	r25, r29
    30b0:	0b c0       	rjmp	.+22     	; 0x30c8 <xTaskCreateStatic+0x1dc>
    30b2:	80 e0       	ldi	r24, 0x00	; 0
    30b4:	90 e0       	ldi	r25, 0x00	; 0
    30b6:	08 c0       	rjmp	.+16     	; 0x30c8 <xTaskCreateStatic+0x1dc>
    30b8:	80 e0       	ldi	r24, 0x00	; 0
    30ba:	90 e0       	ldi	r25, 0x00	; 0
    30bc:	05 c0       	rjmp	.+10     	; 0x30c8 <xTaskCreateStatic+0x1dc>
    30be:	8c 2f       	mov	r24, r28
    30c0:	9d 2f       	mov	r25, r29
    30c2:	02 c0       	rjmp	.+4      	; 0x30c8 <xTaskCreateStatic+0x1dc>
    30c4:	8c 2f       	mov	r24, r28
    30c6:	9d 2f       	mov	r25, r29
    30c8:	df 91       	pop	r29
    30ca:	cf 91       	pop	r28
    30cc:	0f 91       	pop	r16
    30ce:	ff 90       	pop	r15
    30d0:	ef 90       	pop	r14
    30d2:	df 90       	pop	r13
    30d4:	cf 90       	pop	r12
    30d6:	bf 90       	pop	r11
    30d8:	af 90       	pop	r10
    30da:	9f 90       	pop	r9
    30dc:	8f 90       	pop	r8
    30de:	7f 90       	pop	r7
    30e0:	6f 90       	pop	r6
    30e2:	08 95       	ret

000030e4 <vTaskStartScheduler>:
    30e4:	cf 92       	push	r12
    30e6:	df 92       	push	r13
    30e8:	ef 92       	push	r14
    30ea:	ff 92       	push	r15
    30ec:	0f 93       	push	r16
    30ee:	cf 93       	push	r28
    30f0:	df 93       	push	r29
    30f2:	00 d0       	rcall	.+0      	; 0x30f4 <vTaskStartScheduler+0x10>
    30f4:	00 d0       	rcall	.+0      	; 0x30f6 <vTaskStartScheduler+0x12>
    30f6:	cd b7       	in	r28, 0x3d	; 61
    30f8:	de b7       	in	r29, 0x3e	; 62
    30fa:	1e 82       	std	Y+6, r1	; 0x06
    30fc:	1d 82       	std	Y+5, r1	; 0x05
    30fe:	1c 82       	std	Y+4, r1	; 0x04
    3100:	1b 82       	std	Y+3, r1	; 0x03
    3102:	ae 01       	movw	r20, r28
    3104:	4f 5f       	subi	r20, 0xFF	; 255
    3106:	5f 4f       	sbci	r21, 0xFF	; 255
    3108:	be 01       	movw	r22, r28
    310a:	6d 5f       	subi	r22, 0xFD	; 253
    310c:	7f 4f       	sbci	r23, 0xFF	; 255
    310e:	ce 01       	movw	r24, r28
    3110:	05 96       	adiw	r24, 0x05	; 5
    3112:	0e 94 f1 0f 	call	0x1fe2	; 0x1fe2 <vApplicationGetIdleTaskMemory>
    3116:	cd 80       	ldd	r12, Y+5	; 0x05
    3118:	de 80       	ldd	r13, Y+6	; 0x06
    311a:	eb 80       	ldd	r14, Y+3	; 0x03
    311c:	fc 80       	ldd	r15, Y+4	; 0x04
    311e:	49 81       	ldd	r20, Y+1	; 0x01
    3120:	5a 81       	ldd	r21, Y+2	; 0x02
    3122:	00 e0       	ldi	r16, 0x00	; 0
    3124:	20 e0       	ldi	r18, 0x00	; 0
    3126:	30 e0       	ldi	r19, 0x00	; 0
    3128:	6f e7       	ldi	r22, 0x7F	; 127
    312a:	72 e0       	ldi	r23, 0x02	; 2
    312c:	82 e7       	ldi	r24, 0x72	; 114
    312e:	90 e0       	ldi	r25, 0x00	; 0
    3130:	dd de       	rcall	.-582    	; 0x2eec <xTaskCreateStatic>
    3132:	89 2b       	or	r24, r25
    3134:	91 f0       	breq	.+36     	; 0x315a <vTaskStartScheduler+0x76>
    3136:	83 d4       	rcall	.+2310   	; 0x3a3e <xTimerCreateTimerTask>
    3138:	81 30       	cpi	r24, 0x01	; 1
    313a:	79 f4       	brne	.+30     	; 0x315a <vTaskStartScheduler+0x76>
    313c:	f8 94       	cli
    313e:	8f ef       	ldi	r24, 0xFF	; 255
    3140:	9f ef       	ldi	r25, 0xFF	; 255
    3142:	90 93 70 0a 	sts	0x0A70, r25	; 0x800a70 <xNextTaskUnblockTime+0x1>
    3146:	80 93 6f 0a 	sts	0x0A6F, r24	; 0x800a6f <xNextTaskUnblockTime>
    314a:	81 e0       	ldi	r24, 0x01	; 1
    314c:	80 93 75 0a 	sts	0x0A75, r24	; 0x800a75 <xSchedulerRunning>
    3150:	10 92 78 0a 	sts	0x0A78, r1	; 0x800a78 <xTickCount+0x1>
    3154:	10 92 77 0a 	sts	0x0A77, r1	; 0x800a77 <xTickCount>
    3158:	61 d8       	rcall	.-3902   	; 0x221c <xPortStartScheduler>
    315a:	26 96       	adiw	r28, 0x06	; 6
    315c:	0f b6       	in	r0, 0x3f	; 63
    315e:	f8 94       	cli
    3160:	de bf       	out	0x3e, r29	; 62
    3162:	0f be       	out	0x3f, r0	; 63
    3164:	cd bf       	out	0x3d, r28	; 61
    3166:	df 91       	pop	r29
    3168:	cf 91       	pop	r28
    316a:	0f 91       	pop	r16
    316c:	ff 90       	pop	r15
    316e:	ef 90       	pop	r14
    3170:	df 90       	pop	r13
    3172:	cf 90       	pop	r12
    3174:	08 95       	ret

00003176 <vTaskSuspendAll>:
    3176:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    317a:	8f 5f       	subi	r24, 0xFF	; 255
    317c:	80 93 6e 0a 	sts	0x0A6E, r24	; 0x800a6e <uxSchedulerSuspended>
    3180:	08 95       	ret

00003182 <xTaskGetTickCount>:
    3182:	0f b6       	in	r0, 0x3f	; 63
    3184:	f8 94       	cli
    3186:	0f 92       	push	r0
    3188:	80 91 77 0a 	lds	r24, 0x0A77	; 0x800a77 <xTickCount>
    318c:	90 91 78 0a 	lds	r25, 0x0A78	; 0x800a78 <xTickCount+0x1>
    3190:	0f 90       	pop	r0
    3192:	0f be       	out	0x3f, r0	; 63
    3194:	08 95       	ret

00003196 <xTaskIncrementTick>:
    3196:	cf 92       	push	r12
    3198:	df 92       	push	r13
    319a:	ef 92       	push	r14
    319c:	ff 92       	push	r15
    319e:	0f 93       	push	r16
    31a0:	1f 93       	push	r17
    31a2:	cf 93       	push	r28
    31a4:	df 93       	push	r29
    31a6:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    31aa:	81 11       	cpse	r24, r1
    31ac:	98 c0       	rjmp	.+304    	; 0x32de <xTaskIncrementTick+0x148>
    31ae:	e0 90 77 0a 	lds	r14, 0x0A77	; 0x800a77 <xTickCount>
    31b2:	f0 90 78 0a 	lds	r15, 0x0A78	; 0x800a78 <xTickCount+0x1>
    31b6:	8f ef       	ldi	r24, 0xFF	; 255
    31b8:	e8 1a       	sub	r14, r24
    31ba:	f8 0a       	sbc	r15, r24
    31bc:	f0 92 78 0a 	sts	0x0A78, r15	; 0x800a78 <xTickCount+0x1>
    31c0:	e0 92 77 0a 	sts	0x0A77, r14	; 0x800a77 <xTickCount>
    31c4:	e1 14       	cp	r14, r1
    31c6:	f1 04       	cpc	r15, r1
    31c8:	b1 f4       	brne	.+44     	; 0x31f6 <xTaskIncrementTick+0x60>
    31ca:	80 91 98 0a 	lds	r24, 0x0A98	; 0x800a98 <pxDelayedTaskList>
    31ce:	90 91 99 0a 	lds	r25, 0x0A99	; 0x800a99 <pxDelayedTaskList+0x1>
    31d2:	20 91 96 0a 	lds	r18, 0x0A96	; 0x800a96 <pxOverflowDelayedTaskList>
    31d6:	30 91 97 0a 	lds	r19, 0x0A97	; 0x800a97 <pxOverflowDelayedTaskList+0x1>
    31da:	30 93 99 0a 	sts	0x0A99, r19	; 0x800a99 <pxDelayedTaskList+0x1>
    31de:	20 93 98 0a 	sts	0x0A98, r18	; 0x800a98 <pxDelayedTaskList>
    31e2:	90 93 97 0a 	sts	0x0A97, r25	; 0x800a97 <pxOverflowDelayedTaskList+0x1>
    31e6:	80 93 96 0a 	sts	0x0A96, r24	; 0x800a96 <pxOverflowDelayedTaskList>
    31ea:	80 91 72 0a 	lds	r24, 0x0A72	; 0x800a72 <xNumOfOverflows>
    31ee:	8f 5f       	subi	r24, 0xFF	; 255
    31f0:	80 93 72 0a 	sts	0x0A72, r24	; 0x800a72 <xNumOfOverflows>
    31f4:	08 de       	rcall	.-1008   	; 0x2e06 <prvResetNextTaskUnblockTime>
    31f6:	80 91 6f 0a 	lds	r24, 0x0A6F	; 0x800a6f <xNextTaskUnblockTime>
    31fa:	90 91 70 0a 	lds	r25, 0x0A70	; 0x800a70 <xNextTaskUnblockTime+0x1>
    31fe:	e8 16       	cp	r14, r24
    3200:	f9 06       	cpc	r15, r25
    3202:	10 f4       	brcc	.+4      	; 0x3208 <xTaskIncrementTick+0x72>
    3204:	d1 2c       	mov	r13, r1
    3206:	53 c0       	rjmp	.+166    	; 0x32ae <xTaskIncrementTick+0x118>
    3208:	d1 2c       	mov	r13, r1
    320a:	cc 24       	eor	r12, r12
    320c:	c3 94       	inc	r12
    320e:	e0 91 98 0a 	lds	r30, 0x0A98	; 0x800a98 <pxDelayedTaskList>
    3212:	f0 91 99 0a 	lds	r31, 0x0A99	; 0x800a99 <pxDelayedTaskList+0x1>
    3216:	80 81       	ld	r24, Z
    3218:	81 11       	cpse	r24, r1
    321a:	07 c0       	rjmp	.+14     	; 0x322a <xTaskIncrementTick+0x94>
    321c:	8f ef       	ldi	r24, 0xFF	; 255
    321e:	9f ef       	ldi	r25, 0xFF	; 255
    3220:	90 93 70 0a 	sts	0x0A70, r25	; 0x800a70 <xNextTaskUnblockTime+0x1>
    3224:	80 93 6f 0a 	sts	0x0A6F, r24	; 0x800a6f <xNextTaskUnblockTime>
    3228:	42 c0       	rjmp	.+132    	; 0x32ae <xTaskIncrementTick+0x118>
    322a:	e0 91 98 0a 	lds	r30, 0x0A98	; 0x800a98 <pxDelayedTaskList>
    322e:	f0 91 99 0a 	lds	r31, 0x0A99	; 0x800a99 <pxDelayedTaskList+0x1>
    3232:	05 80       	ldd	r0, Z+5	; 0x05
    3234:	f6 81       	ldd	r31, Z+6	; 0x06
    3236:	e0 2d       	mov	r30, r0
    3238:	c6 81       	ldd	r28, Z+6	; 0x06
    323a:	d7 81       	ldd	r29, Z+7	; 0x07
    323c:	8a 81       	ldd	r24, Y+2	; 0x02
    323e:	9b 81       	ldd	r25, Y+3	; 0x03
    3240:	e8 16       	cp	r14, r24
    3242:	f9 06       	cpc	r15, r25
    3244:	28 f4       	brcc	.+10     	; 0x3250 <xTaskIncrementTick+0xba>
    3246:	90 93 70 0a 	sts	0x0A70, r25	; 0x800a70 <xNextTaskUnblockTime+0x1>
    324a:	80 93 6f 0a 	sts	0x0A6F, r24	; 0x800a6f <xNextTaskUnblockTime>
    324e:	2f c0       	rjmp	.+94     	; 0x32ae <xTaskIncrementTick+0x118>
    3250:	8e 01       	movw	r16, r28
    3252:	0e 5f       	subi	r16, 0xFE	; 254
    3254:	1f 4f       	sbci	r17, 0xFF	; 255
    3256:	c8 01       	movw	r24, r16
    3258:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    325c:	8c 89       	ldd	r24, Y+20	; 0x14
    325e:	9d 89       	ldd	r25, Y+21	; 0x15
    3260:	89 2b       	or	r24, r25
    3262:	21 f0       	breq	.+8      	; 0x326c <xTaskIncrementTick+0xd6>
    3264:	ce 01       	movw	r24, r28
    3266:	0c 96       	adiw	r24, 0x0c	; 12
    3268:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    326c:	8e 89       	ldd	r24, Y+22	; 0x16
    326e:	90 91 76 0a 	lds	r25, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    3272:	98 17       	cp	r25, r24
    3274:	10 f4       	brcc	.+4      	; 0x327a <xTaskIncrementTick+0xe4>
    3276:	80 93 76 0a 	sts	0x0A76, r24	; 0x800a76 <uxTopReadyPriority>
    327a:	90 e0       	ldi	r25, 0x00	; 0
    327c:	9c 01       	movw	r18, r24
    327e:	22 0f       	add	r18, r18
    3280:	33 1f       	adc	r19, r19
    3282:	22 0f       	add	r18, r18
    3284:	33 1f       	adc	r19, r19
    3286:	22 0f       	add	r18, r18
    3288:	33 1f       	adc	r19, r19
    328a:	82 0f       	add	r24, r18
    328c:	93 1f       	adc	r25, r19
    328e:	b8 01       	movw	r22, r16
    3290:	86 56       	subi	r24, 0x66	; 102
    3292:	95 4f       	sbci	r25, 0xF5	; 245
    3294:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    3298:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    329c:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    32a0:	9e 89       	ldd	r25, Y+22	; 0x16
    32a2:	86 89       	ldd	r24, Z+22	; 0x16
    32a4:	98 17       	cp	r25, r24
    32a6:	08 f4       	brcc	.+2      	; 0x32aa <xTaskIncrementTick+0x114>
    32a8:	b2 cf       	rjmp	.-156    	; 0x320e <xTaskIncrementTick+0x78>
    32aa:	dc 2c       	mov	r13, r12
    32ac:	b0 cf       	rjmp	.-160    	; 0x320e <xTaskIncrementTick+0x78>
    32ae:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    32b2:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    32b6:	86 89       	ldd	r24, Z+22	; 0x16
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	fc 01       	movw	r30, r24
    32bc:	ee 0f       	add	r30, r30
    32be:	ff 1f       	adc	r31, r31
    32c0:	ee 0f       	add	r30, r30
    32c2:	ff 1f       	adc	r31, r31
    32c4:	ee 0f       	add	r30, r30
    32c6:	ff 1f       	adc	r31, r31
    32c8:	8e 0f       	add	r24, r30
    32ca:	9f 1f       	adc	r25, r31
    32cc:	fc 01       	movw	r30, r24
    32ce:	e6 56       	subi	r30, 0x66	; 102
    32d0:	f5 4f       	sbci	r31, 0xF5	; 245
    32d2:	80 81       	ld	r24, Z
    32d4:	82 30       	cpi	r24, 0x02	; 2
    32d6:	48 f0       	brcs	.+18     	; 0x32ea <xTaskIncrementTick+0x154>
    32d8:	dd 24       	eor	r13, r13
    32da:	d3 94       	inc	r13
    32dc:	06 c0       	rjmp	.+12     	; 0x32ea <xTaskIncrementTick+0x154>
    32de:	80 91 74 0a 	lds	r24, 0x0A74	; 0x800a74 <uxPendedTicks>
    32e2:	8f 5f       	subi	r24, 0xFF	; 255
    32e4:	80 93 74 0a 	sts	0x0A74, r24	; 0x800a74 <uxPendedTicks>
    32e8:	d1 2c       	mov	r13, r1
    32ea:	80 91 73 0a 	lds	r24, 0x0A73	; 0x800a73 <xYieldPending>
    32ee:	88 23       	and	r24, r24
    32f0:	11 f0       	breq	.+4      	; 0x32f6 <xTaskIncrementTick+0x160>
    32f2:	dd 24       	eor	r13, r13
    32f4:	d3 94       	inc	r13
    32f6:	8d 2d       	mov	r24, r13
    32f8:	df 91       	pop	r29
    32fa:	cf 91       	pop	r28
    32fc:	1f 91       	pop	r17
    32fe:	0f 91       	pop	r16
    3300:	ff 90       	pop	r15
    3302:	ef 90       	pop	r14
    3304:	df 90       	pop	r13
    3306:	cf 90       	pop	r12
    3308:	08 95       	ret

0000330a <xTaskResumeAll>:
    330a:	df 92       	push	r13
    330c:	ef 92       	push	r14
    330e:	ff 92       	push	r15
    3310:	0f 93       	push	r16
    3312:	1f 93       	push	r17
    3314:	cf 93       	push	r28
    3316:	df 93       	push	r29
    3318:	0f b6       	in	r0, 0x3f	; 63
    331a:	f8 94       	cli
    331c:	0f 92       	push	r0
    331e:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    3322:	81 50       	subi	r24, 0x01	; 1
    3324:	80 93 6e 0a 	sts	0x0A6E, r24	; 0x800a6e <uxSchedulerSuspended>
    3328:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    332c:	81 11       	cpse	r24, r1
    332e:	5d c0       	rjmp	.+186    	; 0x33ea <xTaskResumeAll+0xe0>
    3330:	80 91 79 0a 	lds	r24, 0x0A79	; 0x800a79 <uxCurrentNumberOfTasks>
    3334:	81 11       	cpse	r24, r1
    3336:	33 c0       	rjmp	.+102    	; 0x339e <xTaskResumeAll+0x94>
    3338:	5b c0       	rjmp	.+182    	; 0x33f0 <xTaskResumeAll+0xe6>
    333a:	d7 01       	movw	r26, r14
    333c:	15 96       	adiw	r26, 0x05	; 5
    333e:	ed 91       	ld	r30, X+
    3340:	fc 91       	ld	r31, X
    3342:	16 97       	sbiw	r26, 0x06	; 6
    3344:	c6 81       	ldd	r28, Z+6	; 0x06
    3346:	d7 81       	ldd	r29, Z+7	; 0x07
    3348:	ce 01       	movw	r24, r28
    334a:	0c 96       	adiw	r24, 0x0c	; 12
    334c:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    3350:	8e 01       	movw	r16, r28
    3352:	0e 5f       	subi	r16, 0xFE	; 254
    3354:	1f 4f       	sbci	r17, 0xFF	; 255
    3356:	c8 01       	movw	r24, r16
    3358:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    335c:	8e 89       	ldd	r24, Y+22	; 0x16
    335e:	90 91 76 0a 	lds	r25, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    3362:	98 17       	cp	r25, r24
    3364:	10 f4       	brcc	.+4      	; 0x336a <xTaskResumeAll+0x60>
    3366:	80 93 76 0a 	sts	0x0A76, r24	; 0x800a76 <uxTopReadyPriority>
    336a:	90 e0       	ldi	r25, 0x00	; 0
    336c:	9c 01       	movw	r18, r24
    336e:	22 0f       	add	r18, r18
    3370:	33 1f       	adc	r19, r19
    3372:	22 0f       	add	r18, r18
    3374:	33 1f       	adc	r19, r19
    3376:	22 0f       	add	r18, r18
    3378:	33 1f       	adc	r19, r19
    337a:	82 0f       	add	r24, r18
    337c:	93 1f       	adc	r25, r19
    337e:	b8 01       	movw	r22, r16
    3380:	86 56       	subi	r24, 0x66	; 102
    3382:	95 4f       	sbci	r25, 0xF5	; 245
    3384:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    3388:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    338c:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3390:	9e 89       	ldd	r25, Y+22	; 0x16
    3392:	86 89       	ldd	r24, Z+22	; 0x16
    3394:	98 17       	cp	r25, r24
    3396:	68 f0       	brcs	.+26     	; 0x33b2 <xTaskResumeAll+0xa8>
    3398:	d0 92 73 0a 	sts	0x0A73, r13	; 0x800a73 <xYieldPending>
    339c:	0a c0       	rjmp	.+20     	; 0x33b2 <xTaskResumeAll+0xa8>
    339e:	c0 e0       	ldi	r28, 0x00	; 0
    33a0:	d0 e0       	ldi	r29, 0x00	; 0
    33a2:	0f 2e       	mov	r0, r31
    33a4:	fd e8       	ldi	r31, 0x8D	; 141
    33a6:	ef 2e       	mov	r14, r31
    33a8:	fa e0       	ldi	r31, 0x0A	; 10
    33aa:	ff 2e       	mov	r15, r31
    33ac:	f0 2d       	mov	r31, r0
    33ae:	dd 24       	eor	r13, r13
    33b0:	d3 94       	inc	r13
    33b2:	f7 01       	movw	r30, r14
    33b4:	80 81       	ld	r24, Z
    33b6:	81 11       	cpse	r24, r1
    33b8:	c0 cf       	rjmp	.-128    	; 0x333a <xTaskResumeAll+0x30>
    33ba:	cd 2b       	or	r28, r29
    33bc:	09 f0       	breq	.+2      	; 0x33c0 <xTaskResumeAll+0xb6>
    33be:	23 dd       	rcall	.-1466   	; 0x2e06 <prvResetNextTaskUnblockTime>
    33c0:	c0 91 74 0a 	lds	r28, 0x0A74	; 0x800a74 <uxPendedTicks>
    33c4:	cc 23       	and	r28, r28
    33c6:	49 f0       	breq	.+18     	; 0x33da <xTaskResumeAll+0xd0>
    33c8:	d1 e0       	ldi	r29, 0x01	; 1
    33ca:	e5 de       	rcall	.-566    	; 0x3196 <xTaskIncrementTick>
    33cc:	81 11       	cpse	r24, r1
    33ce:	d0 93 73 0a 	sts	0x0A73, r29	; 0x800a73 <xYieldPending>
    33d2:	c1 50       	subi	r28, 0x01	; 1
    33d4:	d1 f7       	brne	.-12     	; 0x33ca <xTaskResumeAll+0xc0>
    33d6:	10 92 74 0a 	sts	0x0A74, r1	; 0x800a74 <uxPendedTicks>
    33da:	80 91 73 0a 	lds	r24, 0x0A73	; 0x800a73 <xYieldPending>
    33de:	88 23       	and	r24, r24
    33e0:	31 f0       	breq	.+12     	; 0x33ee <xTaskResumeAll+0xe4>
    33e2:	0e 94 4a 11 	call	0x2294	; 0x2294 <vPortYield>
    33e6:	81 e0       	ldi	r24, 0x01	; 1
    33e8:	03 c0       	rjmp	.+6      	; 0x33f0 <xTaskResumeAll+0xe6>
    33ea:	80 e0       	ldi	r24, 0x00	; 0
    33ec:	01 c0       	rjmp	.+2      	; 0x33f0 <xTaskResumeAll+0xe6>
    33ee:	80 e0       	ldi	r24, 0x00	; 0
    33f0:	0f 90       	pop	r0
    33f2:	0f be       	out	0x3f, r0	; 63
    33f4:	df 91       	pop	r29
    33f6:	cf 91       	pop	r28
    33f8:	1f 91       	pop	r17
    33fa:	0f 91       	pop	r16
    33fc:	ff 90       	pop	r15
    33fe:	ef 90       	pop	r14
    3400:	df 90       	pop	r13
    3402:	08 95       	ret

00003404 <vTaskDelay>:
    3404:	cf 93       	push	r28
    3406:	df 93       	push	r29
    3408:	ec 01       	movw	r28, r24
    340a:	89 2b       	or	r24, r25
    340c:	39 f0       	breq	.+14     	; 0x341c <vTaskDelay+0x18>
    340e:	b3 de       	rcall	.-666    	; 0x3176 <vTaskSuspendAll>
    3410:	60 e0       	ldi	r22, 0x00	; 0
    3412:	ce 01       	movw	r24, r28
    3414:	17 dd       	rcall	.-1490   	; 0x2e44 <prvAddCurrentTaskToDelayedList>
    3416:	79 df       	rcall	.-270    	; 0x330a <xTaskResumeAll>
    3418:	81 11       	cpse	r24, r1
    341a:	02 c0       	rjmp	.+4      	; 0x3420 <vTaskDelay+0x1c>
    341c:	0e 94 4a 11 	call	0x2294	; 0x2294 <vPortYield>
    3420:	df 91       	pop	r29
    3422:	cf 91       	pop	r28
    3424:	08 95       	ret

00003426 <vTaskSwitchContext>:
    3426:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    342a:	88 23       	and	r24, r24
    342c:	21 f0       	breq	.+8      	; 0x3436 <vTaskSwitchContext+0x10>
    342e:	81 e0       	ldi	r24, 0x01	; 1
    3430:	80 93 73 0a 	sts	0x0A73, r24	; 0x800a73 <xYieldPending>
    3434:	08 95       	ret
    3436:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <xYieldPending>
    343a:	a0 91 be 0a 	lds	r26, 0x0ABE	; 0x800abe <pxCurrentTCB>
    343e:	b0 91 bf 0a 	lds	r27, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3442:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    3446:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    344a:	2d 91       	ld	r18, X+
    344c:	3c 91       	ld	r19, X
    344e:	87 89       	ldd	r24, Z+23	; 0x17
    3450:	90 8d       	ldd	r25, Z+24	; 0x18
    3452:	82 17       	cp	r24, r18
    3454:	93 07       	cpc	r25, r19
    3456:	60 f0       	brcs	.+24     	; 0x3470 <vTaskSwitchContext+0x4a>
    3458:	60 91 be 0a 	lds	r22, 0x0ABE	; 0x800abe <pxCurrentTCB>
    345c:	70 91 bf 0a 	lds	r23, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3460:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <pxCurrentTCB>
    3464:	90 91 bf 0a 	lds	r25, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3468:	67 5e       	subi	r22, 0xE7	; 231
    346a:	7f 4f       	sbci	r23, 0xFF	; 255
    346c:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <vApplicationStackOverflowHook>
    3470:	20 91 76 0a 	lds	r18, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    3474:	82 2f       	mov	r24, r18
    3476:	90 e0       	ldi	r25, 0x00	; 0
    3478:	fc 01       	movw	r30, r24
    347a:	ee 0f       	add	r30, r30
    347c:	ff 1f       	adc	r31, r31
    347e:	ee 0f       	add	r30, r30
    3480:	ff 1f       	adc	r31, r31
    3482:	ee 0f       	add	r30, r30
    3484:	ff 1f       	adc	r31, r31
    3486:	e8 0f       	add	r30, r24
    3488:	f9 1f       	adc	r31, r25
    348a:	e6 56       	subi	r30, 0x66	; 102
    348c:	f5 4f       	sbci	r31, 0xF5	; 245
    348e:	30 81       	ld	r19, Z
    3490:	31 11       	cpse	r19, r1
    3492:	11 c0       	rjmp	.+34     	; 0x34b6 <vTaskSwitchContext+0x90>
    3494:	21 50       	subi	r18, 0x01	; 1
    3496:	82 2f       	mov	r24, r18
    3498:	90 e0       	ldi	r25, 0x00	; 0
    349a:	fc 01       	movw	r30, r24
    349c:	ee 0f       	add	r30, r30
    349e:	ff 1f       	adc	r31, r31
    34a0:	ee 0f       	add	r30, r30
    34a2:	ff 1f       	adc	r31, r31
    34a4:	ee 0f       	add	r30, r30
    34a6:	ff 1f       	adc	r31, r31
    34a8:	e8 0f       	add	r30, r24
    34aa:	f9 1f       	adc	r31, r25
    34ac:	e6 56       	subi	r30, 0x66	; 102
    34ae:	f5 4f       	sbci	r31, 0xF5	; 245
    34b0:	30 81       	ld	r19, Z
    34b2:	33 23       	and	r19, r19
    34b4:	79 f3       	breq	.-34     	; 0x3494 <vTaskSwitchContext+0x6e>
    34b6:	ac 01       	movw	r20, r24
    34b8:	44 0f       	add	r20, r20
    34ba:	55 1f       	adc	r21, r21
    34bc:	44 0f       	add	r20, r20
    34be:	55 1f       	adc	r21, r21
    34c0:	44 0f       	add	r20, r20
    34c2:	55 1f       	adc	r21, r21
    34c4:	48 0f       	add	r20, r24
    34c6:	59 1f       	adc	r21, r25
    34c8:	da 01       	movw	r26, r20
    34ca:	a6 56       	subi	r26, 0x66	; 102
    34cc:	b5 4f       	sbci	r27, 0xF5	; 245
    34ce:	11 96       	adiw	r26, 0x01	; 1
    34d0:	ed 91       	ld	r30, X+
    34d2:	fc 91       	ld	r31, X
    34d4:	12 97       	sbiw	r26, 0x02	; 2
    34d6:	02 80       	ldd	r0, Z+2	; 0x02
    34d8:	f3 81       	ldd	r31, Z+3	; 0x03
    34da:	e0 2d       	mov	r30, r0
    34dc:	12 96       	adiw	r26, 0x02	; 2
    34de:	fc 93       	st	X, r31
    34e0:	ee 93       	st	-X, r30
    34e2:	11 97       	sbiw	r26, 0x01	; 1
    34e4:	43 56       	subi	r20, 0x63	; 99
    34e6:	55 4f       	sbci	r21, 0xF5	; 245
    34e8:	e4 17       	cp	r30, r20
    34ea:	f5 07       	cpc	r31, r21
    34ec:	29 f4       	brne	.+10     	; 0x34f8 <vTaskSwitchContext+0xd2>
    34ee:	42 81       	ldd	r20, Z+2	; 0x02
    34f0:	53 81       	ldd	r21, Z+3	; 0x03
    34f2:	fd 01       	movw	r30, r26
    34f4:	52 83       	std	Z+2, r21	; 0x02
    34f6:	41 83       	std	Z+1, r20	; 0x01
    34f8:	fc 01       	movw	r30, r24
    34fa:	ee 0f       	add	r30, r30
    34fc:	ff 1f       	adc	r31, r31
    34fe:	ee 0f       	add	r30, r30
    3500:	ff 1f       	adc	r31, r31
    3502:	ee 0f       	add	r30, r30
    3504:	ff 1f       	adc	r31, r31
    3506:	8e 0f       	add	r24, r30
    3508:	9f 1f       	adc	r25, r31
    350a:	fc 01       	movw	r30, r24
    350c:	e6 56       	subi	r30, 0x66	; 102
    350e:	f5 4f       	sbci	r31, 0xF5	; 245
    3510:	01 80       	ldd	r0, Z+1	; 0x01
    3512:	f2 81       	ldd	r31, Z+2	; 0x02
    3514:	e0 2d       	mov	r30, r0
    3516:	86 81       	ldd	r24, Z+6	; 0x06
    3518:	97 81       	ldd	r25, Z+7	; 0x07
    351a:	90 93 bf 0a 	sts	0x0ABF, r25	; 0x800abf <pxCurrentTCB+0x1>
    351e:	80 93 be 0a 	sts	0x0ABE, r24	; 0x800abe <pxCurrentTCB>
    3522:	20 93 76 0a 	sts	0x0A76, r18	; 0x800a76 <uxTopReadyPriority>
    3526:	08 95       	ret

00003528 <vTaskPlaceOnEventList>:
    3528:	cf 93       	push	r28
    352a:	df 93       	push	r29
    352c:	eb 01       	movw	r28, r22
    352e:	60 91 be 0a 	lds	r22, 0x0ABE	; 0x800abe <pxCurrentTCB>
    3532:	70 91 bf 0a 	lds	r23, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3536:	64 5f       	subi	r22, 0xF4	; 244
    3538:	7f 4f       	sbci	r23, 0xFF	; 255
    353a:	0e 94 44 10 	call	0x2088	; 0x2088 <vListInsert>
    353e:	61 e0       	ldi	r22, 0x01	; 1
    3540:	ce 01       	movw	r24, r28
    3542:	80 dc       	rcall	.-1792   	; 0x2e44 <prvAddCurrentTaskToDelayedList>
    3544:	df 91       	pop	r29
    3546:	cf 91       	pop	r28
    3548:	08 95       	ret

0000354a <vTaskPlaceOnEventListRestricted>:
    354a:	0f 93       	push	r16
    354c:	1f 93       	push	r17
    354e:	cf 93       	push	r28
    3550:	8b 01       	movw	r16, r22
    3552:	c4 2f       	mov	r28, r20
    3554:	60 91 be 0a 	lds	r22, 0x0ABE	; 0x800abe <pxCurrentTCB>
    3558:	70 91 bf 0a 	lds	r23, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    355c:	64 5f       	subi	r22, 0xF4	; 244
    355e:	7f 4f       	sbci	r23, 0xFF	; 255
    3560:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    3564:	cc 23       	and	r28, r28
    3566:	11 f0       	breq	.+4      	; 0x356c <vTaskPlaceOnEventListRestricted+0x22>
    3568:	0f ef       	ldi	r16, 0xFF	; 255
    356a:	1f ef       	ldi	r17, 0xFF	; 255
    356c:	6c 2f       	mov	r22, r28
    356e:	c8 01       	movw	r24, r16
    3570:	69 dc       	rcall	.-1838   	; 0x2e44 <prvAddCurrentTaskToDelayedList>
    3572:	cf 91       	pop	r28
    3574:	1f 91       	pop	r17
    3576:	0f 91       	pop	r16
    3578:	08 95       	ret

0000357a <xTaskRemoveFromEventList>:
    357a:	0f 93       	push	r16
    357c:	1f 93       	push	r17
    357e:	cf 93       	push	r28
    3580:	df 93       	push	r29
    3582:	dc 01       	movw	r26, r24
    3584:	15 96       	adiw	r26, 0x05	; 5
    3586:	ed 91       	ld	r30, X+
    3588:	fc 91       	ld	r31, X
    358a:	16 97       	sbiw	r26, 0x06	; 6
    358c:	c6 81       	ldd	r28, Z+6	; 0x06
    358e:	d7 81       	ldd	r29, Z+7	; 0x07
    3590:	8e 01       	movw	r16, r28
    3592:	04 5f       	subi	r16, 0xF4	; 244
    3594:	1f 4f       	sbci	r17, 0xFF	; 255
    3596:	c8 01       	movw	r24, r16
    3598:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    359c:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    35a0:	81 11       	cpse	r24, r1
    35a2:	1c c0       	rjmp	.+56     	; 0x35dc <xTaskRemoveFromEventList+0x62>
    35a4:	0a 50       	subi	r16, 0x0A	; 10
    35a6:	11 09       	sbc	r17, r1
    35a8:	c8 01       	movw	r24, r16
    35aa:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    35ae:	8e 89       	ldd	r24, Y+22	; 0x16
    35b0:	90 91 76 0a 	lds	r25, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    35b4:	98 17       	cp	r25, r24
    35b6:	10 f4       	brcc	.+4      	; 0x35bc <xTaskRemoveFromEventList+0x42>
    35b8:	80 93 76 0a 	sts	0x0A76, r24	; 0x800a76 <uxTopReadyPriority>
    35bc:	90 e0       	ldi	r25, 0x00	; 0
    35be:	9c 01       	movw	r18, r24
    35c0:	22 0f       	add	r18, r18
    35c2:	33 1f       	adc	r19, r19
    35c4:	22 0f       	add	r18, r18
    35c6:	33 1f       	adc	r19, r19
    35c8:	22 0f       	add	r18, r18
    35ca:	33 1f       	adc	r19, r19
    35cc:	82 0f       	add	r24, r18
    35ce:	93 1f       	adc	r25, r19
    35d0:	b8 01       	movw	r22, r16
    35d2:	86 56       	subi	r24, 0x66	; 102
    35d4:	95 4f       	sbci	r25, 0xF5	; 245
    35d6:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    35da:	05 c0       	rjmp	.+10     	; 0x35e6 <xTaskRemoveFromEventList+0x6c>
    35dc:	b8 01       	movw	r22, r16
    35de:	8d e8       	ldi	r24, 0x8D	; 141
    35e0:	9a e0       	ldi	r25, 0x0A	; 10
    35e2:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    35e6:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    35ea:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    35ee:	9e 89       	ldd	r25, Y+22	; 0x16
    35f0:	86 89       	ldd	r24, Z+22	; 0x16
    35f2:	89 17       	cp	r24, r25
    35f4:	20 f4       	brcc	.+8      	; 0x35fe <xTaskRemoveFromEventList+0x84>
    35f6:	81 e0       	ldi	r24, 0x01	; 1
    35f8:	80 93 73 0a 	sts	0x0A73, r24	; 0x800a73 <xYieldPending>
    35fc:	01 c0       	rjmp	.+2      	; 0x3600 <xTaskRemoveFromEventList+0x86>
    35fe:	80 e0       	ldi	r24, 0x00	; 0
    3600:	df 91       	pop	r29
    3602:	cf 91       	pop	r28
    3604:	1f 91       	pop	r17
    3606:	0f 91       	pop	r16
    3608:	08 95       	ret

0000360a <vTaskSetTimeOutState>:
    360a:	0f b6       	in	r0, 0x3f	; 63
    360c:	f8 94       	cli
    360e:	0f 92       	push	r0
    3610:	20 91 72 0a 	lds	r18, 0x0A72	; 0x800a72 <xNumOfOverflows>
    3614:	fc 01       	movw	r30, r24
    3616:	20 83       	st	Z, r18
    3618:	20 91 77 0a 	lds	r18, 0x0A77	; 0x800a77 <xTickCount>
    361c:	30 91 78 0a 	lds	r19, 0x0A78	; 0x800a78 <xTickCount+0x1>
    3620:	32 83       	std	Z+2, r19	; 0x02
    3622:	21 83       	std	Z+1, r18	; 0x01
    3624:	0f 90       	pop	r0
    3626:	0f be       	out	0x3f, r0	; 63
    3628:	08 95       	ret

0000362a <vTaskInternalSetTimeOutState>:
    362a:	20 91 72 0a 	lds	r18, 0x0A72	; 0x800a72 <xNumOfOverflows>
    362e:	fc 01       	movw	r30, r24
    3630:	20 83       	st	Z, r18
    3632:	20 91 77 0a 	lds	r18, 0x0A77	; 0x800a77 <xTickCount>
    3636:	30 91 78 0a 	lds	r19, 0x0A78	; 0x800a78 <xTickCount+0x1>
    363a:	32 83       	std	Z+2, r19	; 0x02
    363c:	21 83       	std	Z+1, r18	; 0x01
    363e:	08 95       	ret

00003640 <xTaskCheckForTimeOut>:
    3640:	cf 93       	push	r28
    3642:	df 93       	push	r29
    3644:	0f b6       	in	r0, 0x3f	; 63
    3646:	f8 94       	cli
    3648:	0f 92       	push	r0
    364a:	20 91 77 0a 	lds	r18, 0x0A77	; 0x800a77 <xTickCount>
    364e:	30 91 78 0a 	lds	r19, 0x0A78	; 0x800a78 <xTickCount+0x1>
    3652:	db 01       	movw	r26, r22
    3654:	4d 91       	ld	r20, X+
    3656:	5c 91       	ld	r21, X
    3658:	4f 3f       	cpi	r20, 0xFF	; 255
    365a:	bf ef       	ldi	r27, 0xFF	; 255
    365c:	5b 07       	cpc	r21, r27
    365e:	e9 f0       	breq	.+58     	; 0x369a <xTaskCheckForTimeOut+0x5a>
    3660:	ec 01       	movw	r28, r24
    3662:	e9 81       	ldd	r30, Y+1	; 0x01
    3664:	fa 81       	ldd	r31, Y+2	; 0x02
    3666:	a0 91 72 0a 	lds	r26, 0x0A72	; 0x800a72 <xNumOfOverflows>
    366a:	b8 81       	ld	r27, Y
    366c:	ba 17       	cp	r27, r26
    366e:	19 f0       	breq	.+6      	; 0x3676 <xTaskCheckForTimeOut+0x36>
    3670:	2e 17       	cp	r18, r30
    3672:	3f 07       	cpc	r19, r31
    3674:	a0 f4       	brcc	.+40     	; 0x369e <xTaskCheckForTimeOut+0x5e>
    3676:	2e 1b       	sub	r18, r30
    3678:	3f 0b       	sbc	r19, r31
    367a:	24 17       	cp	r18, r20
    367c:	35 07       	cpc	r19, r21
    367e:	40 f4       	brcc	.+16     	; 0x3690 <xTaskCheckForTimeOut+0x50>
    3680:	fb 01       	movw	r30, r22
    3682:	42 1b       	sub	r20, r18
    3684:	53 0b       	sbc	r21, r19
    3686:	51 83       	std	Z+1, r21	; 0x01
    3688:	40 83       	st	Z, r20
    368a:	cf df       	rcall	.-98     	; 0x362a <vTaskInternalSetTimeOutState>
    368c:	80 e0       	ldi	r24, 0x00	; 0
    368e:	08 c0       	rjmp	.+16     	; 0x36a0 <xTaskCheckForTimeOut+0x60>
    3690:	fb 01       	movw	r30, r22
    3692:	11 82       	std	Z+1, r1	; 0x01
    3694:	10 82       	st	Z, r1
    3696:	81 e0       	ldi	r24, 0x01	; 1
    3698:	03 c0       	rjmp	.+6      	; 0x36a0 <xTaskCheckForTimeOut+0x60>
    369a:	80 e0       	ldi	r24, 0x00	; 0
    369c:	01 c0       	rjmp	.+2      	; 0x36a0 <xTaskCheckForTimeOut+0x60>
    369e:	81 e0       	ldi	r24, 0x01	; 1
    36a0:	0f 90       	pop	r0
    36a2:	0f be       	out	0x3f, r0	; 63
    36a4:	df 91       	pop	r29
    36a6:	cf 91       	pop	r28
    36a8:	08 95       	ret

000036aa <vTaskMissedYield>:
    36aa:	81 e0       	ldi	r24, 0x01	; 1
    36ac:	80 93 73 0a 	sts	0x0A73, r24	; 0x800a73 <xYieldPending>
    36b0:	08 95       	ret

000036b2 <xTaskGetCurrentTaskHandle>:
    36b2:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <pxCurrentTCB>
    36b6:	90 91 bf 0a 	lds	r25, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    36ba:	08 95       	ret

000036bc <xTaskGetSchedulerState>:
    36bc:	80 91 75 0a 	lds	r24, 0x0A75	; 0x800a75 <xSchedulerRunning>
    36c0:	88 23       	and	r24, r24
    36c2:	31 f0       	breq	.+12     	; 0x36d0 <xTaskGetSchedulerState+0x14>
    36c4:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <uxSchedulerSuspended>
    36c8:	88 23       	and	r24, r24
    36ca:	21 f0       	breq	.+8      	; 0x36d4 <xTaskGetSchedulerState+0x18>
    36cc:	80 e0       	ldi	r24, 0x00	; 0
    36ce:	08 95       	ret
    36d0:	81 e0       	ldi	r24, 0x01	; 1
    36d2:	08 95       	ret
    36d4:	82 e0       	ldi	r24, 0x02	; 2
    36d6:	08 95       	ret

000036d8 <xTaskPriorityDisinherit>:
    36d8:	0f 93       	push	r16
    36da:	1f 93       	push	r17
    36dc:	cf 93       	push	r28
    36de:	df 93       	push	r29
    36e0:	fc 01       	movw	r30, r24
    36e2:	89 2b       	or	r24, r25
    36e4:	79 f1       	breq	.+94     	; 0x3744 <xTaskPriorityDisinherit+0x6c>
    36e6:	82 a1       	ldd	r24, Z+34	; 0x22
    36e8:	81 50       	subi	r24, 0x01	; 1
    36ea:	82 a3       	std	Z+34, r24	; 0x22
    36ec:	26 89       	ldd	r18, Z+22	; 0x16
    36ee:	91 a1       	ldd	r25, Z+33	; 0x21
    36f0:	29 17       	cp	r18, r25
    36f2:	51 f1       	breq	.+84     	; 0x3748 <xTaskPriorityDisinherit+0x70>
    36f4:	81 11       	cpse	r24, r1
    36f6:	2a c0       	rjmp	.+84     	; 0x374c <xTaskPriorityDisinherit+0x74>
    36f8:	ef 01       	movw	r28, r30
    36fa:	8f 01       	movw	r16, r30
    36fc:	0e 5f       	subi	r16, 0xFE	; 254
    36fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3700:	c8 01       	movw	r24, r16
    3702:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    3706:	89 a1       	ldd	r24, Y+33	; 0x21
    3708:	8e 8b       	std	Y+22, r24	; 0x16
    370a:	24 e0       	ldi	r18, 0x04	; 4
    370c:	30 e0       	ldi	r19, 0x00	; 0
    370e:	28 1b       	sub	r18, r24
    3710:	31 09       	sbc	r19, r1
    3712:	3d 87       	std	Y+13, r19	; 0x0d
    3714:	2c 87       	std	Y+12, r18	; 0x0c
    3716:	90 91 76 0a 	lds	r25, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    371a:	98 17       	cp	r25, r24
    371c:	10 f4       	brcc	.+4      	; 0x3722 <xTaskPriorityDisinherit+0x4a>
    371e:	80 93 76 0a 	sts	0x0A76, r24	; 0x800a76 <uxTopReadyPriority>
    3722:	90 e0       	ldi	r25, 0x00	; 0
    3724:	9c 01       	movw	r18, r24
    3726:	22 0f       	add	r18, r18
    3728:	33 1f       	adc	r19, r19
    372a:	22 0f       	add	r18, r18
    372c:	33 1f       	adc	r19, r19
    372e:	22 0f       	add	r18, r18
    3730:	33 1f       	adc	r19, r19
    3732:	82 0f       	add	r24, r18
    3734:	93 1f       	adc	r25, r19
    3736:	b8 01       	movw	r22, r16
    3738:	86 56       	subi	r24, 0x66	; 102
    373a:	95 4f       	sbci	r25, 0xF5	; 245
    373c:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    3740:	81 e0       	ldi	r24, 0x01	; 1
    3742:	05 c0       	rjmp	.+10     	; 0x374e <xTaskPriorityDisinherit+0x76>
    3744:	80 e0       	ldi	r24, 0x00	; 0
    3746:	03 c0       	rjmp	.+6      	; 0x374e <xTaskPriorityDisinherit+0x76>
    3748:	80 e0       	ldi	r24, 0x00	; 0
    374a:	01 c0       	rjmp	.+2      	; 0x374e <xTaskPriorityDisinherit+0x76>
    374c:	80 e0       	ldi	r24, 0x00	; 0
    374e:	df 91       	pop	r29
    3750:	cf 91       	pop	r28
    3752:	1f 91       	pop	r17
    3754:	0f 91       	pop	r16
    3756:	08 95       	ret

00003758 <xTaskNotifyWait>:
    3758:	4f 92       	push	r4
    375a:	5f 92       	push	r5
    375c:	6f 92       	push	r6
    375e:	7f 92       	push	r7
    3760:	8f 92       	push	r8
    3762:	9f 92       	push	r9
    3764:	af 92       	push	r10
    3766:	bf 92       	push	r11
    3768:	ef 92       	push	r14
    376a:	ff 92       	push	r15
    376c:	0f 93       	push	r16
    376e:	1f 93       	push	r17
    3770:	49 01       	movw	r8, r18
    3772:	5a 01       	movw	r10, r20
    3774:	0f b6       	in	r0, 0x3f	; 63
    3776:	f8 94       	cli
    3778:	0f 92       	push	r0
    377a:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    377e:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3782:	27 a1       	ldd	r18, Z+39	; 0x27
    3784:	22 30       	cpi	r18, 0x02	; 2
    3786:	21 f1       	breq	.+72     	; 0x37d0 <xTaskNotifyWait+0x78>
    3788:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    378c:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3790:	43 a0       	ldd	r4, Z+35	; 0x23
    3792:	54 a0       	ldd	r5, Z+36	; 0x24
    3794:	65 a0       	ldd	r6, Z+37	; 0x25
    3796:	76 a0       	ldd	r7, Z+38	; 0x26
    3798:	dc 01       	movw	r26, r24
    379a:	cb 01       	movw	r24, r22
    379c:	80 95       	com	r24
    379e:	90 95       	com	r25
    37a0:	a0 95       	com	r26
    37a2:	b0 95       	com	r27
    37a4:	84 21       	and	r24, r4
    37a6:	95 21       	and	r25, r5
    37a8:	a6 21       	and	r26, r6
    37aa:	b7 21       	and	r27, r7
    37ac:	83 a3       	std	Z+35, r24	; 0x23
    37ae:	94 a3       	std	Z+36, r25	; 0x24
    37b0:	a5 a3       	std	Z+37, r26	; 0x25
    37b2:	b6 a3       	std	Z+38, r27	; 0x26
    37b4:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    37b8:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    37bc:	81 e0       	ldi	r24, 0x01	; 1
    37be:	87 a3       	std	Z+39, r24	; 0x27
    37c0:	e1 14       	cp	r14, r1
    37c2:	f1 04       	cpc	r15, r1
    37c4:	29 f0       	breq	.+10     	; 0x37d0 <xTaskNotifyWait+0x78>
    37c6:	61 e0       	ldi	r22, 0x01	; 1
    37c8:	c7 01       	movw	r24, r14
    37ca:	3c db       	rcall	.-2440   	; 0x2e44 <prvAddCurrentTaskToDelayedList>
    37cc:	0e 94 4a 11 	call	0x2294	; 0x2294 <vPortYield>
    37d0:	0f 90       	pop	r0
    37d2:	0f be       	out	0x3f, r0	; 63
    37d4:	0f b6       	in	r0, 0x3f	; 63
    37d6:	f8 94       	cli
    37d8:	0f 92       	push	r0
    37da:	01 15       	cp	r16, r1
    37dc:	11 05       	cpc	r17, r1
    37de:	69 f0       	breq	.+26     	; 0x37fa <xTaskNotifyWait+0xa2>
    37e0:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    37e4:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    37e8:	83 a1       	ldd	r24, Z+35	; 0x23
    37ea:	94 a1       	ldd	r25, Z+36	; 0x24
    37ec:	a5 a1       	ldd	r26, Z+37	; 0x25
    37ee:	b6 a1       	ldd	r27, Z+38	; 0x26
    37f0:	f8 01       	movw	r30, r16
    37f2:	80 83       	st	Z, r24
    37f4:	91 83       	std	Z+1, r25	; 0x01
    37f6:	a2 83       	std	Z+2, r26	; 0x02
    37f8:	b3 83       	std	Z+3, r27	; 0x03
    37fa:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    37fe:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3802:	87 a1       	ldd	r24, Z+39	; 0x27
    3804:	82 30       	cpi	r24, 0x02	; 2
    3806:	b1 f4       	brne	.+44     	; 0x3834 <xTaskNotifyWait+0xdc>
    3808:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    380c:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3810:	83 a1       	ldd	r24, Z+35	; 0x23
    3812:	94 a1       	ldd	r25, Z+36	; 0x24
    3814:	a5 a1       	ldd	r26, Z+37	; 0x25
    3816:	b6 a1       	ldd	r27, Z+38	; 0x26
    3818:	80 94       	com	r8
    381a:	90 94       	com	r9
    381c:	a0 94       	com	r10
    381e:	b0 94       	com	r11
    3820:	88 22       	and	r8, r24
    3822:	99 22       	and	r9, r25
    3824:	aa 22       	and	r10, r26
    3826:	bb 22       	and	r11, r27
    3828:	83 a2       	std	Z+35, r8	; 0x23
    382a:	94 a2       	std	Z+36, r9	; 0x24
    382c:	a5 a2       	std	Z+37, r10	; 0x25
    382e:	b6 a2       	std	Z+38, r11	; 0x26
    3830:	81 e0       	ldi	r24, 0x01	; 1
    3832:	01 c0       	rjmp	.+2      	; 0x3836 <xTaskNotifyWait+0xde>
    3834:	80 e0       	ldi	r24, 0x00	; 0
    3836:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    383a:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    383e:	17 a2       	std	Z+39, r1	; 0x27
    3840:	0f 90       	pop	r0
    3842:	0f be       	out	0x3f, r0	; 63
    3844:	1f 91       	pop	r17
    3846:	0f 91       	pop	r16
    3848:	ff 90       	pop	r15
    384a:	ef 90       	pop	r14
    384c:	bf 90       	pop	r11
    384e:	af 90       	pop	r10
    3850:	9f 90       	pop	r9
    3852:	8f 90       	pop	r8
    3854:	7f 90       	pop	r7
    3856:	6f 90       	pop	r6
    3858:	5f 90       	pop	r5
    385a:	4f 90       	pop	r4
    385c:	08 95       	ret

0000385e <xTaskGenericNotify>:
    385e:	0f 93       	push	r16
    3860:	1f 93       	push	r17
    3862:	cf 93       	push	r28
    3864:	df 93       	push	r29
    3866:	fc 01       	movw	r30, r24
    3868:	0f b6       	in	r0, 0x3f	; 63
    386a:	f8 94       	cli
    386c:	0f 92       	push	r0
    386e:	01 15       	cp	r16, r1
    3870:	11 05       	cpc	r17, r1
    3872:	49 f0       	breq	.+18     	; 0x3886 <xTaskGenericNotify+0x28>
    3874:	83 a1       	ldd	r24, Z+35	; 0x23
    3876:	94 a1       	ldd	r25, Z+36	; 0x24
    3878:	a5 a1       	ldd	r26, Z+37	; 0x25
    387a:	b6 a1       	ldd	r27, Z+38	; 0x26
    387c:	e8 01       	movw	r28, r16
    387e:	88 83       	st	Y, r24
    3880:	99 83       	std	Y+1, r25	; 0x01
    3882:	aa 83       	std	Y+2, r26	; 0x02
    3884:	bb 83       	std	Y+3, r27	; 0x03
    3886:	87 a1       	ldd	r24, Z+39	; 0x27
    3888:	92 e0       	ldi	r25, 0x02	; 2
    388a:	97 a3       	std	Z+39, r25	; 0x27
    388c:	22 30       	cpi	r18, 0x02	; 2
    388e:	b1 f0       	breq	.+44     	; 0x38bc <xTaskGenericNotify+0x5e>
    3890:	18 f4       	brcc	.+6      	; 0x3898 <xTaskGenericNotify+0x3a>
    3892:	21 30       	cpi	r18, 0x01	; 1
    3894:	31 f0       	breq	.+12     	; 0x38a2 <xTaskGenericNotify+0x44>
    3896:	2a c0       	rjmp	.+84     	; 0x38ec <xTaskGenericNotify+0x8e>
    3898:	23 30       	cpi	r18, 0x03	; 3
    389a:	e9 f0       	breq	.+58     	; 0x38d6 <xTaskGenericNotify+0x78>
    389c:	24 30       	cpi	r18, 0x04	; 4
    389e:	01 f1       	breq	.+64     	; 0x38e0 <xTaskGenericNotify+0x82>
    38a0:	25 c0       	rjmp	.+74     	; 0x38ec <xTaskGenericNotify+0x8e>
    38a2:	03 a1       	ldd	r16, Z+35	; 0x23
    38a4:	14 a1       	ldd	r17, Z+36	; 0x24
    38a6:	25 a1       	ldd	r18, Z+37	; 0x25
    38a8:	36 a1       	ldd	r19, Z+38	; 0x26
    38aa:	40 2b       	or	r20, r16
    38ac:	51 2b       	or	r21, r17
    38ae:	62 2b       	or	r22, r18
    38b0:	73 2b       	or	r23, r19
    38b2:	43 a3       	std	Z+35, r20	; 0x23
    38b4:	54 a3       	std	Z+36, r21	; 0x24
    38b6:	65 a3       	std	Z+37, r22	; 0x25
    38b8:	76 a3       	std	Z+38, r23	; 0x26
    38ba:	18 c0       	rjmp	.+48     	; 0x38ec <xTaskGenericNotify+0x8e>
    38bc:	43 a1       	ldd	r20, Z+35	; 0x23
    38be:	54 a1       	ldd	r21, Z+36	; 0x24
    38c0:	65 a1       	ldd	r22, Z+37	; 0x25
    38c2:	76 a1       	ldd	r23, Z+38	; 0x26
    38c4:	4f 5f       	subi	r20, 0xFF	; 255
    38c6:	5f 4f       	sbci	r21, 0xFF	; 255
    38c8:	6f 4f       	sbci	r22, 0xFF	; 255
    38ca:	7f 4f       	sbci	r23, 0xFF	; 255
    38cc:	43 a3       	std	Z+35, r20	; 0x23
    38ce:	54 a3       	std	Z+36, r21	; 0x24
    38d0:	65 a3       	std	Z+37, r22	; 0x25
    38d2:	76 a3       	std	Z+38, r23	; 0x26
    38d4:	0b c0       	rjmp	.+22     	; 0x38ec <xTaskGenericNotify+0x8e>
    38d6:	43 a3       	std	Z+35, r20	; 0x23
    38d8:	54 a3       	std	Z+36, r21	; 0x24
    38da:	65 a3       	std	Z+37, r22	; 0x25
    38dc:	76 a3       	std	Z+38, r23	; 0x26
    38de:	06 c0       	rjmp	.+12     	; 0x38ec <xTaskGenericNotify+0x8e>
    38e0:	82 30       	cpi	r24, 0x02	; 2
    38e2:	79 f1       	breq	.+94     	; 0x3942 <xTaskGenericNotify+0xe4>
    38e4:	43 a3       	std	Z+35, r20	; 0x23
    38e6:	54 a3       	std	Z+36, r21	; 0x24
    38e8:	65 a3       	std	Z+37, r22	; 0x25
    38ea:	76 a3       	std	Z+38, r23	; 0x26
    38ec:	81 30       	cpi	r24, 0x01	; 1
    38ee:	59 f5       	brne	.+86     	; 0x3946 <xTaskGenericNotify+0xe8>
    38f0:	ef 01       	movw	r28, r30
    38f2:	8f 01       	movw	r16, r30
    38f4:	0e 5f       	subi	r16, 0xFE	; 254
    38f6:	1f 4f       	sbci	r17, 0xFF	; 255
    38f8:	c8 01       	movw	r24, r16
    38fa:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    38fe:	8e 89       	ldd	r24, Y+22	; 0x16
    3900:	90 91 76 0a 	lds	r25, 0x0A76	; 0x800a76 <uxTopReadyPriority>
    3904:	98 17       	cp	r25, r24
    3906:	10 f4       	brcc	.+4      	; 0x390c <xTaskGenericNotify+0xae>
    3908:	80 93 76 0a 	sts	0x0A76, r24	; 0x800a76 <uxTopReadyPriority>
    390c:	90 e0       	ldi	r25, 0x00	; 0
    390e:	9c 01       	movw	r18, r24
    3910:	22 0f       	add	r18, r18
    3912:	33 1f       	adc	r19, r19
    3914:	22 0f       	add	r18, r18
    3916:	33 1f       	adc	r19, r19
    3918:	22 0f       	add	r18, r18
    391a:	33 1f       	adc	r19, r19
    391c:	82 0f       	add	r24, r18
    391e:	93 1f       	adc	r25, r19
    3920:	b8 01       	movw	r22, r16
    3922:	86 56       	subi	r24, 0x66	; 102
    3924:	95 4f       	sbci	r25, 0xF5	; 245
    3926:	0e 94 23 10 	call	0x2046	; 0x2046 <vListInsertEnd>
    392a:	e0 91 be 0a 	lds	r30, 0x0ABE	; 0x800abe <pxCurrentTCB>
    392e:	f0 91 bf 0a 	lds	r31, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3932:	9e 89       	ldd	r25, Y+22	; 0x16
    3934:	86 89       	ldd	r24, Z+22	; 0x16
    3936:	89 17       	cp	r24, r25
    3938:	40 f4       	brcc	.+16     	; 0x394a <xTaskGenericNotify+0xec>
    393a:	0e 94 4a 11 	call	0x2294	; 0x2294 <vPortYield>
    393e:	81 e0       	ldi	r24, 0x01	; 1
    3940:	05 c0       	rjmp	.+10     	; 0x394c <xTaskGenericNotify+0xee>
    3942:	80 e0       	ldi	r24, 0x00	; 0
    3944:	03 c0       	rjmp	.+6      	; 0x394c <xTaskGenericNotify+0xee>
    3946:	81 e0       	ldi	r24, 0x01	; 1
    3948:	01 c0       	rjmp	.+2      	; 0x394c <xTaskGenericNotify+0xee>
    394a:	81 e0       	ldi	r24, 0x01	; 1
    394c:	0f 90       	pop	r0
    394e:	0f be       	out	0x3f, r0	; 63
    3950:	df 91       	pop	r29
    3952:	cf 91       	pop	r28
    3954:	1f 91       	pop	r17
    3956:	0f 91       	pop	r16
    3958:	08 95       	ret

0000395a <xTaskNotifyStateClear>:
    395a:	00 97       	sbiw	r24, 0x00	; 0
    395c:	21 f4       	brne	.+8      	; 0x3966 <xTaskNotifyStateClear+0xc>
    395e:	80 91 be 0a 	lds	r24, 0x0ABE	; 0x800abe <pxCurrentTCB>
    3962:	90 91 bf 0a 	lds	r25, 0x0ABF	; 0x800abf <pxCurrentTCB+0x1>
    3966:	0f b6       	in	r0, 0x3f	; 63
    3968:	f8 94       	cli
    396a:	0f 92       	push	r0
    396c:	fc 01       	movw	r30, r24
    396e:	27 a1       	ldd	r18, Z+39	; 0x27
    3970:	22 30       	cpi	r18, 0x02	; 2
    3972:	19 f4       	brne	.+6      	; 0x397a <xTaskNotifyStateClear+0x20>
    3974:	17 a2       	std	Z+39, r1	; 0x27
    3976:	81 e0       	ldi	r24, 0x01	; 1
    3978:	01 c0       	rjmp	.+2      	; 0x397c <xTaskNotifyStateClear+0x22>
    397a:	80 e0       	ldi	r24, 0x00	; 0
    397c:	0f 90       	pop	r0
    397e:	0f be       	out	0x3f, r0	; 63
    3980:	08 95       	ret

00003982 <prvInsertTimerInActiveList>:
    3982:	fc 01       	movw	r30, r24
    3984:	73 83       	std	Z+3, r23	; 0x03
    3986:	62 83       	std	Z+2, r22	; 0x02
    3988:	91 87       	std	Z+9, r25	; 0x09
    398a:	80 87       	std	Z+8, r24	; 0x08
    398c:	46 17       	cp	r20, r22
    398e:	57 07       	cpc	r21, r23
    3990:	90 f0       	brcs	.+36     	; 0x39b6 <prvInsertTimerInActiveList+0x34>
    3992:	42 1b       	sub	r20, r18
    3994:	53 0b       	sbc	r21, r19
    3996:	84 85       	ldd	r24, Z+12	; 0x0c
    3998:	95 85       	ldd	r25, Z+13	; 0x0d
    399a:	48 17       	cp	r20, r24
    399c:	59 07       	cpc	r21, r25
    399e:	e0 f4       	brcc	.+56     	; 0x39d8 <prvInsertTimerInActiveList+0x56>
    39a0:	bf 01       	movw	r22, r30
    39a2:	6e 5f       	subi	r22, 0xFE	; 254
    39a4:	7f 4f       	sbci	r23, 0xFF	; 255
    39a6:	80 91 29 0b 	lds	r24, 0x0B29	; 0x800b29 <pxOverflowTimerList>
    39aa:	90 91 2a 0b 	lds	r25, 0x0B2A	; 0x800b2a <pxOverflowTimerList+0x1>
    39ae:	0e 94 44 10 	call	0x2088	; 0x2088 <vListInsert>
    39b2:	80 e0       	ldi	r24, 0x00	; 0
    39b4:	08 95       	ret
    39b6:	42 17       	cp	r20, r18
    39b8:	53 07       	cpc	r21, r19
    39ba:	18 f4       	brcc	.+6      	; 0x39c2 <prvInsertTimerInActiveList+0x40>
    39bc:	62 17       	cp	r22, r18
    39be:	73 07       	cpc	r23, r19
    39c0:	68 f4       	brcc	.+26     	; 0x39dc <prvInsertTimerInActiveList+0x5a>
    39c2:	bf 01       	movw	r22, r30
    39c4:	6e 5f       	subi	r22, 0xFE	; 254
    39c6:	7f 4f       	sbci	r23, 0xFF	; 255
    39c8:	80 91 2b 0b 	lds	r24, 0x0B2B	; 0x800b2b <pxCurrentTimerList>
    39cc:	90 91 2c 0b 	lds	r25, 0x0B2C	; 0x800b2c <pxCurrentTimerList+0x1>
    39d0:	0e 94 44 10 	call	0x2088	; 0x2088 <vListInsert>
    39d4:	80 e0       	ldi	r24, 0x00	; 0
    39d6:	08 95       	ret
    39d8:	81 e0       	ldi	r24, 0x01	; 1
    39da:	08 95       	ret
    39dc:	81 e0       	ldi	r24, 0x01	; 1
    39de:	08 95       	ret

000039e0 <prvCheckForValidListAndQueue>:
    39e0:	0f 93       	push	r16
    39e2:	0f b6       	in	r0, 0x3f	; 63
    39e4:	f8 94       	cli
    39e6:	0f 92       	push	r0
    39e8:	80 91 27 0b 	lds	r24, 0x0B27	; 0x800b27 <xTimerQueue>
    39ec:	90 91 28 0b 	lds	r25, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    39f0:	89 2b       	or	r24, r25
    39f2:	09 f5       	brne	.+66     	; 0x3a36 <prvCheckForValidListAndQueue+0x56>
    39f4:	8a e1       	ldi	r24, 0x1A	; 26
    39f6:	9b e0       	ldi	r25, 0x0B	; 11
    39f8:	0e 94 11 10 	call	0x2022	; 0x2022 <vListInitialise>
    39fc:	81 e1       	ldi	r24, 0x11	; 17
    39fe:	9b e0       	ldi	r25, 0x0B	; 11
    3a00:	0e 94 11 10 	call	0x2022	; 0x2022 <vListInitialise>
    3a04:	8a e1       	ldi	r24, 0x1A	; 26
    3a06:	9b e0       	ldi	r25, 0x0B	; 11
    3a08:	90 93 2c 0b 	sts	0x0B2C, r25	; 0x800b2c <pxCurrentTimerList+0x1>
    3a0c:	80 93 2b 0b 	sts	0x0B2B, r24	; 0x800b2b <pxCurrentTimerList>
    3a10:	81 e1       	ldi	r24, 0x11	; 17
    3a12:	9b e0       	ldi	r25, 0x0B	; 11
    3a14:	90 93 2a 0b 	sts	0x0B2A, r25	; 0x800b2a <pxOverflowTimerList+0x1>
    3a18:	80 93 29 0b 	sts	0x0B29, r24	; 0x800b29 <pxOverflowTimerList>
    3a1c:	00 e0       	ldi	r16, 0x00	; 0
    3a1e:	20 ec       	ldi	r18, 0xC0	; 192
    3a20:	3a e0       	ldi	r19, 0x0A	; 10
    3a22:	4f ed       	ldi	r20, 0xDF	; 223
    3a24:	5a e0       	ldi	r21, 0x0A	; 10
    3a26:	65 e0       	ldi	r22, 0x05	; 5
    3a28:	8a e0       	ldi	r24, 0x0A	; 10
    3a2a:	0e 94 23 13 	call	0x2646	; 0x2646 <xQueueGenericCreateStatic>
    3a2e:	90 93 28 0b 	sts	0x0B28, r25	; 0x800b28 <xTimerQueue+0x1>
    3a32:	80 93 27 0b 	sts	0x0B27, r24	; 0x800b27 <xTimerQueue>
    3a36:	0f 90       	pop	r0
    3a38:	0f be       	out	0x3f, r0	; 63
    3a3a:	0f 91       	pop	r16
    3a3c:	08 95       	ret

00003a3e <xTimerCreateTimerTask>:
    3a3e:	cf 92       	push	r12
    3a40:	df 92       	push	r13
    3a42:	ef 92       	push	r14
    3a44:	ff 92       	push	r15
    3a46:	0f 93       	push	r16
    3a48:	cf 93       	push	r28
    3a4a:	df 93       	push	r29
    3a4c:	00 d0       	rcall	.+0      	; 0x3a4e <xTimerCreateTimerTask+0x10>
    3a4e:	00 d0       	rcall	.+0      	; 0x3a50 <xTimerCreateTimerTask+0x12>
    3a50:	cd b7       	in	r28, 0x3d	; 61
    3a52:	de b7       	in	r29, 0x3e	; 62
    3a54:	c5 df       	rcall	.-118    	; 0x39e0 <prvCheckForValidListAndQueue>
    3a56:	80 91 27 0b 	lds	r24, 0x0B27	; 0x800b27 <xTimerQueue>
    3a5a:	90 91 28 0b 	lds	r25, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    3a5e:	89 2b       	or	r24, r25
    3a60:	31 f1       	breq	.+76     	; 0x3aae <xTimerCreateTimerTask+0x70>
    3a62:	1e 82       	std	Y+6, r1	; 0x06
    3a64:	1d 82       	std	Y+5, r1	; 0x05
    3a66:	1c 82       	std	Y+4, r1	; 0x04
    3a68:	1b 82       	std	Y+3, r1	; 0x03
    3a6a:	ae 01       	movw	r20, r28
    3a6c:	4f 5f       	subi	r20, 0xFF	; 255
    3a6e:	5f 4f       	sbci	r21, 0xFF	; 255
    3a70:	be 01       	movw	r22, r28
    3a72:	6d 5f       	subi	r22, 0xFD	; 253
    3a74:	7f 4f       	sbci	r23, 0xFF	; 255
    3a76:	ce 01       	movw	r24, r28
    3a78:	05 96       	adiw	r24, 0x05	; 5
    3a7a:	0e 94 01 10 	call	0x2002	; 0x2002 <vApplicationGetTimerTaskMemory>
    3a7e:	cd 80       	ldd	r12, Y+5	; 0x05
    3a80:	de 80       	ldd	r13, Y+6	; 0x06
    3a82:	eb 80       	ldd	r14, Y+3	; 0x03
    3a84:	fc 80       	ldd	r15, Y+4	; 0x04
    3a86:	49 81       	ldd	r20, Y+1	; 0x01
    3a88:	5a 81       	ldd	r21, Y+2	; 0x02
    3a8a:	03 e0       	ldi	r16, 0x03	; 3
    3a8c:	20 e0       	ldi	r18, 0x00	; 0
    3a8e:	30 e0       	ldi	r19, 0x00	; 0
    3a90:	64 e8       	ldi	r22, 0x84	; 132
    3a92:	72 e0       	ldi	r23, 0x02	; 2
    3a94:	8b e1       	ldi	r24, 0x1B	; 27
    3a96:	9e e1       	ldi	r25, 0x1E	; 30
    3a98:	29 da       	rcall	.-2990   	; 0x2eec <xTaskCreateStatic>
    3a9a:	9c 01       	movw	r18, r24
    3a9c:	90 93 26 0b 	sts	0x0B26, r25	; 0x800b26 <xTimerTaskHandle+0x1>
    3aa0:	80 93 25 0b 	sts	0x0B25, r24	; 0x800b25 <xTimerTaskHandle>
    3aa4:	81 e0       	ldi	r24, 0x01	; 1
    3aa6:	23 2b       	or	r18, r19
    3aa8:	19 f4       	brne	.+6      	; 0x3ab0 <xTimerCreateTimerTask+0x72>
    3aaa:	80 e0       	ldi	r24, 0x00	; 0
    3aac:	01 c0       	rjmp	.+2      	; 0x3ab0 <xTimerCreateTimerTask+0x72>
    3aae:	80 e0       	ldi	r24, 0x00	; 0
    3ab0:	26 96       	adiw	r28, 0x06	; 6
    3ab2:	0f b6       	in	r0, 0x3f	; 63
    3ab4:	f8 94       	cli
    3ab6:	de bf       	out	0x3e, r29	; 62
    3ab8:	0f be       	out	0x3f, r0	; 63
    3aba:	cd bf       	out	0x3d, r28	; 61
    3abc:	df 91       	pop	r29
    3abe:	cf 91       	pop	r28
    3ac0:	0f 91       	pop	r16
    3ac2:	ff 90       	pop	r15
    3ac4:	ef 90       	pop	r14
    3ac6:	df 90       	pop	r13
    3ac8:	cf 90       	pop	r12
    3aca:	08 95       	ret

00003acc <xTimerGenericCommand>:
    3acc:	0f 93       	push	r16
    3ace:	1f 93       	push	r17
    3ad0:	cf 93       	push	r28
    3ad2:	df 93       	push	r29
    3ad4:	00 d0       	rcall	.+0      	; 0x3ad6 <xTimerGenericCommand+0xa>
    3ad6:	1f 92       	push	r1
    3ad8:	1f 92       	push	r1
    3ada:	cd b7       	in	r28, 0x3d	; 61
    3adc:	de b7       	in	r29, 0x3e	; 62
    3ade:	e0 91 27 0b 	lds	r30, 0x0B27	; 0x800b27 <xTimerQueue>
    3ae2:	f0 91 28 0b 	lds	r31, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    3ae6:	30 97       	sbiw	r30, 0x00	; 0
    3ae8:	69 f1       	breq	.+90     	; 0x3b44 <xTimerGenericCommand+0x78>
    3aea:	d9 01       	movw	r26, r18
    3aec:	69 83       	std	Y+1, r22	; 0x01
    3aee:	5b 83       	std	Y+3, r21	; 0x03
    3af0:	4a 83       	std	Y+2, r20	; 0x02
    3af2:	9d 83       	std	Y+5, r25	; 0x05
    3af4:	8c 83       	std	Y+4, r24	; 0x04
    3af6:	66 30       	cpi	r22, 0x06	; 6
    3af8:	e4 f4       	brge	.+56     	; 0x3b32 <xTimerGenericCommand+0x66>
    3afa:	e0 dd       	rcall	.-1088   	; 0x36bc <xTaskGetSchedulerState>
    3afc:	82 30       	cpi	r24, 0x02	; 2
    3afe:	61 f4       	brne	.+24     	; 0x3b18 <xTimerGenericCommand+0x4c>
    3b00:	20 e0       	ldi	r18, 0x00	; 0
    3b02:	a8 01       	movw	r20, r16
    3b04:	be 01       	movw	r22, r28
    3b06:	6f 5f       	subi	r22, 0xFF	; 255
    3b08:	7f 4f       	sbci	r23, 0xFF	; 255
    3b0a:	80 91 27 0b 	lds	r24, 0x0B27	; 0x800b27 <xTimerQueue>
    3b0e:	90 91 28 0b 	lds	r25, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    3b12:	0e 94 38 13 	call	0x2670	; 0x2670 <xQueueGenericSend>
    3b16:	17 c0       	rjmp	.+46     	; 0x3b46 <xTimerGenericCommand+0x7a>
    3b18:	20 e0       	ldi	r18, 0x00	; 0
    3b1a:	40 e0       	ldi	r20, 0x00	; 0
    3b1c:	50 e0       	ldi	r21, 0x00	; 0
    3b1e:	be 01       	movw	r22, r28
    3b20:	6f 5f       	subi	r22, 0xFF	; 255
    3b22:	7f 4f       	sbci	r23, 0xFF	; 255
    3b24:	80 91 27 0b 	lds	r24, 0x0B27	; 0x800b27 <xTimerQueue>
    3b28:	90 91 28 0b 	lds	r25, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    3b2c:	0e 94 38 13 	call	0x2670	; 0x2670 <xQueueGenericSend>
    3b30:	0a c0       	rjmp	.+20     	; 0x3b46 <xTimerGenericCommand+0x7a>
    3b32:	20 e0       	ldi	r18, 0x00	; 0
    3b34:	ad 01       	movw	r20, r26
    3b36:	be 01       	movw	r22, r28
    3b38:	6f 5f       	subi	r22, 0xFF	; 255
    3b3a:	7f 4f       	sbci	r23, 0xFF	; 255
    3b3c:	cf 01       	movw	r24, r30
    3b3e:	0e 94 ca 13 	call	0x2794	; 0x2794 <xQueueGenericSendFromISR>
    3b42:	01 c0       	rjmp	.+2      	; 0x3b46 <xTimerGenericCommand+0x7a>
    3b44:	80 e0       	ldi	r24, 0x00	; 0
    3b46:	0f 90       	pop	r0
    3b48:	0f 90       	pop	r0
    3b4a:	0f 90       	pop	r0
    3b4c:	0f 90       	pop	r0
    3b4e:	0f 90       	pop	r0
    3b50:	df 91       	pop	r29
    3b52:	cf 91       	pop	r28
    3b54:	1f 91       	pop	r17
    3b56:	0f 91       	pop	r16
    3b58:	08 95       	ret

00003b5a <prvSampleTimeNow>:
    3b5a:	af 92       	push	r10
    3b5c:	bf 92       	push	r11
    3b5e:	cf 92       	push	r12
    3b60:	df 92       	push	r13
    3b62:	ef 92       	push	r14
    3b64:	ff 92       	push	r15
    3b66:	0f 93       	push	r16
    3b68:	1f 93       	push	r17
    3b6a:	cf 93       	push	r28
    3b6c:	df 93       	push	r29
    3b6e:	6c 01       	movw	r12, r24
    3b70:	08 db       	rcall	.-2544   	; 0x3182 <xTaskGetTickCount>
    3b72:	7c 01       	movw	r14, r24
    3b74:	80 91 23 0b 	lds	r24, 0x0B23	; 0x800b23 <xLastTime.2391>
    3b78:	90 91 24 0b 	lds	r25, 0x0B24	; 0x800b24 <xLastTime.2391+0x1>
    3b7c:	e8 16       	cp	r14, r24
    3b7e:	f9 06       	cpc	r15, r25
    3b80:	08 f0       	brcs	.+2      	; 0x3b84 <prvSampleTimeNow+0x2a>
    3b82:	47 c0       	rjmp	.+142    	; 0x3c12 <prvSampleTimeNow+0xb8>
    3b84:	2f c0       	rjmp	.+94     	; 0x3be4 <prvSampleTimeNow+0x8a>
    3b86:	05 80       	ldd	r0, Z+5	; 0x05
    3b88:	f6 81       	ldd	r31, Z+6	; 0x06
    3b8a:	e0 2d       	mov	r30, r0
    3b8c:	a0 80       	ld	r10, Z
    3b8e:	b1 80       	ldd	r11, Z+1	; 0x01
    3b90:	c6 81       	ldd	r28, Z+6	; 0x06
    3b92:	d7 81       	ldd	r29, Z+7	; 0x07
    3b94:	8e 01       	movw	r16, r28
    3b96:	0e 5f       	subi	r16, 0xFE	; 254
    3b98:	1f 4f       	sbci	r17, 0xFF	; 255
    3b9a:	c8 01       	movw	r24, r16
    3b9c:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    3ba0:	e9 89       	ldd	r30, Y+17	; 0x11
    3ba2:	fa 89       	ldd	r31, Y+18	; 0x12
    3ba4:	ce 01       	movw	r24, r28
    3ba6:	19 95       	eicall
    3ba8:	8e 85       	ldd	r24, Y+14	; 0x0e
    3baa:	81 30       	cpi	r24, 0x01	; 1
    3bac:	d9 f4       	brne	.+54     	; 0x3be4 <prvSampleTimeNow+0x8a>
    3bae:	8c 85       	ldd	r24, Y+12	; 0x0c
    3bb0:	9d 85       	ldd	r25, Y+13	; 0x0d
    3bb2:	8a 0d       	add	r24, r10
    3bb4:	9b 1d       	adc	r25, r11
    3bb6:	a8 16       	cp	r10, r24
    3bb8:	b9 06       	cpc	r11, r25
    3bba:	60 f4       	brcc	.+24     	; 0x3bd4 <prvSampleTimeNow+0x7a>
    3bbc:	9b 83       	std	Y+3, r25	; 0x03
    3bbe:	8a 83       	std	Y+2, r24	; 0x02
    3bc0:	d9 87       	std	Y+9, r29	; 0x09
    3bc2:	c8 87       	std	Y+8, r28	; 0x08
    3bc4:	b8 01       	movw	r22, r16
    3bc6:	80 91 2b 0b 	lds	r24, 0x0B2B	; 0x800b2b <pxCurrentTimerList>
    3bca:	90 91 2c 0b 	lds	r25, 0x0B2C	; 0x800b2c <pxCurrentTimerList+0x1>
    3bce:	0e 94 44 10 	call	0x2088	; 0x2088 <vListInsert>
    3bd2:	08 c0       	rjmp	.+16     	; 0x3be4 <prvSampleTimeNow+0x8a>
    3bd4:	00 e0       	ldi	r16, 0x00	; 0
    3bd6:	10 e0       	ldi	r17, 0x00	; 0
    3bd8:	20 e0       	ldi	r18, 0x00	; 0
    3bda:	30 e0       	ldi	r19, 0x00	; 0
    3bdc:	a5 01       	movw	r20, r10
    3bde:	60 e0       	ldi	r22, 0x00	; 0
    3be0:	ce 01       	movw	r24, r28
    3be2:	74 df       	rcall	.-280    	; 0x3acc <xTimerGenericCommand>
    3be4:	e0 91 2b 0b 	lds	r30, 0x0B2B	; 0x800b2b <pxCurrentTimerList>
    3be8:	f0 91 2c 0b 	lds	r31, 0x0B2C	; 0x800b2c <pxCurrentTimerList+0x1>
    3bec:	80 81       	ld	r24, Z
    3bee:	81 11       	cpse	r24, r1
    3bf0:	ca cf       	rjmp	.-108    	; 0x3b86 <prvSampleTimeNow+0x2c>
    3bf2:	80 91 29 0b 	lds	r24, 0x0B29	; 0x800b29 <pxOverflowTimerList>
    3bf6:	90 91 2a 0b 	lds	r25, 0x0B2A	; 0x800b2a <pxOverflowTimerList+0x1>
    3bfa:	90 93 2c 0b 	sts	0x0B2C, r25	; 0x800b2c <pxCurrentTimerList+0x1>
    3bfe:	80 93 2b 0b 	sts	0x0B2B, r24	; 0x800b2b <pxCurrentTimerList>
    3c02:	f0 93 2a 0b 	sts	0x0B2A, r31	; 0x800b2a <pxOverflowTimerList+0x1>
    3c06:	e0 93 29 0b 	sts	0x0B29, r30	; 0x800b29 <pxOverflowTimerList>
    3c0a:	81 e0       	ldi	r24, 0x01	; 1
    3c0c:	f6 01       	movw	r30, r12
    3c0e:	80 83       	st	Z, r24
    3c10:	02 c0       	rjmp	.+4      	; 0x3c16 <prvSampleTimeNow+0xbc>
    3c12:	f6 01       	movw	r30, r12
    3c14:	10 82       	st	Z, r1
    3c16:	f0 92 24 0b 	sts	0x0B24, r15	; 0x800b24 <xLastTime.2391+0x1>
    3c1a:	e0 92 23 0b 	sts	0x0B23, r14	; 0x800b23 <xLastTime.2391>
    3c1e:	c7 01       	movw	r24, r14
    3c20:	df 91       	pop	r29
    3c22:	cf 91       	pop	r28
    3c24:	1f 91       	pop	r17
    3c26:	0f 91       	pop	r16
    3c28:	ff 90       	pop	r15
    3c2a:	ef 90       	pop	r14
    3c2c:	df 90       	pop	r13
    3c2e:	cf 90       	pop	r12
    3c30:	bf 90       	pop	r11
    3c32:	af 90       	pop	r10
    3c34:	08 95       	ret

00003c36 <prvTimerTask>:
    3c36:	cf 93       	push	r28
    3c38:	df 93       	push	r29
    3c3a:	00 d0       	rcall	.+0      	; 0x3c3c <prvTimerTask+0x6>
    3c3c:	00 d0       	rcall	.+0      	; 0x3c3e <prvTimerTask+0x8>
    3c3e:	cd b7       	in	r28, 0x3d	; 61
    3c40:	de b7       	in	r29, 0x3e	; 62
    3c42:	ce 01       	movw	r24, r28
    3c44:	01 96       	adiw	r24, 0x01	; 1
    3c46:	4c 01       	movw	r8, r24
    3c48:	44 24       	eor	r4, r4
    3c4a:	43 94       	inc	r4
    3c4c:	e1 2c       	mov	r14, r1
    3c4e:	f1 2c       	mov	r15, r1
    3c50:	51 2c       	mov	r5, r1
    3c52:	c8 2e       	mov	r12, r24
    3c54:	d9 2c       	mov	r13, r9
    3c56:	e0 91 2b 0b 	lds	r30, 0x0B2B	; 0x800b2b <pxCurrentTimerList>
    3c5a:	f0 91 2c 0b 	lds	r31, 0x0B2C	; 0x800b2c <pxCurrentTimerList+0x1>
    3c5e:	80 81       	ld	r24, Z
    3c60:	88 23       	and	r24, r24
    3c62:	09 f4       	brne	.+2      	; 0x3c66 <prvTimerTask+0x30>
    3c64:	b1 c0       	rjmp	.+354    	; 0x3dc8 <prvTimerTask+0x192>
    3c66:	05 80       	ldd	r0, Z+5	; 0x05
    3c68:	f6 81       	ldd	r31, Z+6	; 0x06
    3c6a:	e0 2d       	mov	r30, r0
    3c6c:	a0 80       	ld	r10, Z
    3c6e:	b1 80       	ldd	r11, Z+1	; 0x01
    3c70:	82 da       	rcall	.-2812   	; 0x3176 <vTaskSuspendAll>
    3c72:	c4 01       	movw	r24, r8
    3c74:	72 df       	rcall	.-284    	; 0x3b5a <prvSampleTimeNow>
    3c76:	8c 01       	movw	r16, r24
    3c78:	89 81       	ldd	r24, Y+1	; 0x01
    3c7a:	81 11       	cpse	r24, r1
    3c7c:	43 c0       	rjmp	.+134    	; 0x3d04 <prvTimerTask+0xce>
    3c7e:	0a 15       	cp	r16, r10
    3c80:	1b 05       	cpc	r17, r11
    3c82:	80 f1       	brcs	.+96     	; 0x3ce4 <prvTimerTask+0xae>
    3c84:	42 db       	rcall	.-2428   	; 0x330a <xTaskResumeAll>
    3c86:	e0 91 2b 0b 	lds	r30, 0x0B2B	; 0x800b2b <pxCurrentTimerList>
    3c8a:	f0 91 2c 0b 	lds	r31, 0x0B2C	; 0x800b2c <pxCurrentTimerList+0x1>
    3c8e:	05 80       	ldd	r0, Z+5	; 0x05
    3c90:	f6 81       	ldd	r31, Z+6	; 0x06
    3c92:	e0 2d       	mov	r30, r0
    3c94:	66 80       	ldd	r6, Z+6	; 0x06
    3c96:	77 80       	ldd	r7, Z+7	; 0x07
    3c98:	c3 01       	movw	r24, r6
    3c9a:	02 96       	adiw	r24, 0x02	; 2
    3c9c:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    3ca0:	d3 01       	movw	r26, r6
    3ca2:	1e 96       	adiw	r26, 0x0e	; 14
    3ca4:	8c 91       	ld	r24, X
    3ca6:	1e 97       	sbiw	r26, 0x0e	; 14
    3ca8:	81 30       	cpi	r24, 0x01	; 1
    3caa:	a1 f4       	brne	.+40     	; 0x3cd4 <prvTimerTask+0x9e>
    3cac:	1c 96       	adiw	r26, 0x0c	; 12
    3cae:	6d 91       	ld	r22, X+
    3cb0:	7c 91       	ld	r23, X
    3cb2:	1d 97       	sbiw	r26, 0x0d	; 13
    3cb4:	6a 0d       	add	r22, r10
    3cb6:	7b 1d       	adc	r23, r11
    3cb8:	95 01       	movw	r18, r10
    3cba:	a8 01       	movw	r20, r16
    3cbc:	c3 01       	movw	r24, r6
    3cbe:	61 de       	rcall	.-830    	; 0x3982 <prvInsertTimerInActiveList>
    3cc0:	88 23       	and	r24, r24
    3cc2:	41 f0       	breq	.+16     	; 0x3cd4 <prvTimerTask+0x9e>
    3cc4:	0e 2d       	mov	r16, r14
    3cc6:	1f 2d       	mov	r17, r15
    3cc8:	2e 2d       	mov	r18, r14
    3cca:	3f 2d       	mov	r19, r15
    3ccc:	a5 01       	movw	r20, r10
    3cce:	65 2d       	mov	r22, r5
    3cd0:	c3 01       	movw	r24, r6
    3cd2:	fc de       	rcall	.-520    	; 0x3acc <xTimerGenericCommand>
    3cd4:	d3 01       	movw	r26, r6
    3cd6:	51 96       	adiw	r26, 0x11	; 17
    3cd8:	ed 91       	ld	r30, X+
    3cda:	fc 91       	ld	r31, X
    3cdc:	52 97       	sbiw	r26, 0x12	; 18
    3cde:	c3 01       	movw	r24, r6
    3ce0:	19 95       	eicall
    3ce2:	65 c0       	rjmp	.+202    	; 0x3dae <prvTimerTask+0x178>
    3ce4:	45 2d       	mov	r20, r5
    3ce6:	b5 01       	movw	r22, r10
    3ce8:	60 1b       	sub	r22, r16
    3cea:	71 0b       	sbc	r23, r17
    3cec:	80 91 27 0b 	lds	r24, 0x0B27	; 0x800b27 <xTimerQueue>
    3cf0:	90 91 28 0b 	lds	r25, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    3cf4:	0e 94 8b 14 	call	0x2916	; 0x2916 <vQueueWaitForMessageRestricted>
    3cf8:	08 db       	rcall	.-2544   	; 0x330a <xTaskResumeAll>
    3cfa:	81 11       	cpse	r24, r1
    3cfc:	58 c0       	rjmp	.+176    	; 0x3dae <prvTimerTask+0x178>
    3cfe:	0e 94 4a 11 	call	0x2294	; 0x2294 <vPortYield>
    3d02:	55 c0       	rjmp	.+170    	; 0x3dae <prvTimerTask+0x178>
    3d04:	02 db       	rcall	.-2556   	; 0x330a <xTaskResumeAll>
    3d06:	53 c0       	rjmp	.+166    	; 0x3dae <prvTimerTask+0x178>
    3d08:	89 81       	ldd	r24, Y+1	; 0x01
    3d0a:	88 23       	and	r24, r24
    3d0c:	0c f4       	brge	.+2      	; 0x3d10 <prvTimerTask+0xda>
    3d0e:	4f c0       	rjmp	.+158    	; 0x3dae <prvTimerTask+0x178>
    3d10:	ac 80       	ldd	r10, Y+4	; 0x04
    3d12:	bd 80       	ldd	r11, Y+5	; 0x05
    3d14:	f5 01       	movw	r30, r10
    3d16:	82 85       	ldd	r24, Z+10	; 0x0a
    3d18:	93 85       	ldd	r25, Z+11	; 0x0b
    3d1a:	89 2b       	or	r24, r25
    3d1c:	21 f0       	breq	.+8      	; 0x3d26 <prvTimerTask+0xf0>
    3d1e:	c5 01       	movw	r24, r10
    3d20:	02 96       	adiw	r24, 0x02	; 2
    3d22:	0e 94 75 10 	call	0x20ea	; 0x20ea <uxListRemove>
    3d26:	ce 01       	movw	r24, r28
    3d28:	06 96       	adiw	r24, 0x06	; 6
    3d2a:	17 df       	rcall	.-466    	; 0x3b5a <prvSampleTimeNow>
    3d2c:	ac 01       	movw	r20, r24
    3d2e:	99 81       	ldd	r25, Y+1	; 0x01
    3d30:	94 30       	cpi	r25, 0x04	; 4
    3d32:	89 f1       	breq	.+98     	; 0x3d96 <prvTimerTask+0x160>
    3d34:	1c f4       	brge	.+6      	; 0x3d3c <prvTimerTask+0x106>
    3d36:	93 30       	cpi	r25, 0x03	; 3
    3d38:	d0 f5       	brcc	.+116    	; 0x3dae <prvTimerTask+0x178>
    3d3a:	07 c0       	rjmp	.+14     	; 0x3d4a <prvTimerTask+0x114>
    3d3c:	96 30       	cpi	r25, 0x06	; 6
    3d3e:	bc f1       	brlt	.+110    	; 0x3dae <prvTimerTask+0x178>
    3d40:	98 30       	cpi	r25, 0x08	; 8
    3d42:	1c f0       	brlt	.+6      	; 0x3d4a <prvTimerTask+0x114>
    3d44:	99 30       	cpi	r25, 0x09	; 9
    3d46:	39 f1       	breq	.+78     	; 0x3d96 <prvTimerTask+0x160>
    3d48:	32 c0       	rjmp	.+100    	; 0x3dae <prvTimerTask+0x178>
    3d4a:	2a 81       	ldd	r18, Y+2	; 0x02
    3d4c:	3b 81       	ldd	r19, Y+3	; 0x03
    3d4e:	d5 01       	movw	r26, r10
    3d50:	1c 96       	adiw	r26, 0x0c	; 12
    3d52:	6d 91       	ld	r22, X+
    3d54:	7c 91       	ld	r23, X
    3d56:	1d 97       	sbiw	r26, 0x0d	; 13
    3d58:	62 0f       	add	r22, r18
    3d5a:	73 1f       	adc	r23, r19
    3d5c:	c5 01       	movw	r24, r10
    3d5e:	11 de       	rcall	.-990    	; 0x3982 <prvInsertTimerInActiveList>
    3d60:	88 23       	and	r24, r24
    3d62:	29 f1       	breq	.+74     	; 0x3dae <prvTimerTask+0x178>
    3d64:	d5 01       	movw	r26, r10
    3d66:	51 96       	adiw	r26, 0x11	; 17
    3d68:	ed 91       	ld	r30, X+
    3d6a:	fc 91       	ld	r31, X
    3d6c:	52 97       	sbiw	r26, 0x12	; 18
    3d6e:	c5 01       	movw	r24, r10
    3d70:	19 95       	eicall
    3d72:	f5 01       	movw	r30, r10
    3d74:	86 85       	ldd	r24, Z+14	; 0x0e
    3d76:	81 30       	cpi	r24, 0x01	; 1
    3d78:	d1 f4       	brne	.+52     	; 0x3dae <prvTimerTask+0x178>
    3d7a:	4a 81       	ldd	r20, Y+2	; 0x02
    3d7c:	5b 81       	ldd	r21, Y+3	; 0x03
    3d7e:	84 85       	ldd	r24, Z+12	; 0x0c
    3d80:	95 85       	ldd	r25, Z+13	; 0x0d
    3d82:	48 0f       	add	r20, r24
    3d84:	59 1f       	adc	r21, r25
    3d86:	0e 2d       	mov	r16, r14
    3d88:	1f 2d       	mov	r17, r15
    3d8a:	2e 2d       	mov	r18, r14
    3d8c:	3f 2d       	mov	r19, r15
    3d8e:	65 2d       	mov	r22, r5
    3d90:	c5 01       	movw	r24, r10
    3d92:	9c de       	rcall	.-712    	; 0x3acc <xTimerGenericCommand>
    3d94:	0c c0       	rjmp	.+24     	; 0x3dae <prvTimerTask+0x178>
    3d96:	6a 81       	ldd	r22, Y+2	; 0x02
    3d98:	7b 81       	ldd	r23, Y+3	; 0x03
    3d9a:	d5 01       	movw	r26, r10
    3d9c:	1d 96       	adiw	r26, 0x0d	; 13
    3d9e:	7c 93       	st	X, r23
    3da0:	6e 93       	st	-X, r22
    3da2:	1c 97       	sbiw	r26, 0x0c	; 12
    3da4:	64 0f       	add	r22, r20
    3da6:	75 1f       	adc	r23, r21
    3da8:	9a 01       	movw	r18, r20
    3daa:	c5 01       	movw	r24, r10
    3dac:	ea dd       	rcall	.-1068   	; 0x3982 <prvInsertTimerInActiveList>
    3dae:	4e 2d       	mov	r20, r14
    3db0:	5f 2d       	mov	r21, r15
    3db2:	6c 2d       	mov	r22, r12
    3db4:	7d 2d       	mov	r23, r13
    3db6:	80 91 27 0b 	lds	r24, 0x0B27	; 0x800b27 <xTimerQueue>
    3dba:	90 91 28 0b 	lds	r25, 0x0B28	; 0x800b28 <xTimerQueue+0x1>
    3dbe:	0e 94 02 14 	call	0x2804	; 0x2804 <xQueueReceive>
    3dc2:	81 11       	cpse	r24, r1
    3dc4:	a1 cf       	rjmp	.-190    	; 0x3d08 <prvTimerTask+0xd2>
    3dc6:	47 cf       	rjmp	.-370    	; 0x3c56 <prvTimerTask+0x20>
    3dc8:	d6 d9       	rcall	.-3156   	; 0x3176 <vTaskSuspendAll>
    3dca:	c4 01       	movw	r24, r8
    3dcc:	c6 de       	rcall	.-628    	; 0x3b5a <prvSampleTimeNow>
    3dce:	8c 01       	movw	r16, r24
    3dd0:	89 81       	ldd	r24, Y+1	; 0x01
    3dd2:	81 11       	cpse	r24, r1
    3dd4:	97 cf       	rjmp	.-210    	; 0x3d04 <prvTimerTask+0xce>
    3dd6:	e0 91 29 0b 	lds	r30, 0x0B29	; 0x800b29 <pxOverflowTimerList>
    3dda:	f0 91 2a 0b 	lds	r31, 0x0B2A	; 0x800b2a <pxOverflowTimerList+0x1>
    3dde:	80 81       	ld	r24, Z
    3de0:	44 2d       	mov	r20, r4
    3de2:	81 11       	cpse	r24, r1
    3de4:	45 2d       	mov	r20, r5
    3de6:	ae 2c       	mov	r10, r14
    3de8:	bf 2c       	mov	r11, r15
    3dea:	7d cf       	rjmp	.-262    	; 0x3ce6 <prvTimerTask+0xb0>

00003dec <LCD_main>:
	#ifdef __DEBUG
	uint16_t *Debug_read;
	#endif
	while(1){
		#ifdef __DEBUG
			s_Lcd_data_write.data1++;
    3dec:	cc e5       	ldi	r28, 0x5C	; 92
    3dee:	dd e0       	ldi	r29, 0x0D	; 13
    3df0:	88 81       	ld	r24, Y
    3df2:	99 81       	ldd	r25, Y+1	; 0x01
    3df4:	01 96       	adiw	r24, 0x01	; 1
    3df6:	99 83       	std	Y+1, r25	; 0x01
    3df8:	88 83       	st	Y, r24
			s_Lcd_data_write.data2++;
    3dfa:	8a 81       	ldd	r24, Y+2	; 0x02
    3dfc:	9b 81       	ldd	r25, Y+3	; 0x03
    3dfe:	01 96       	adiw	r24, 0x01	; 1
    3e00:	9b 83       	std	Y+3, r25	; 0x03
    3e02:	8a 83       	std	Y+2, r24	; 0x02
			s_Lcd_data_write.data3++;
    3e04:	8c 81       	ldd	r24, Y+4	; 0x04
    3e06:	9d 81       	ldd	r25, Y+5	; 0x05
    3e08:	01 96       	adiw	r24, 0x01	; 1
    3e0a:	9d 83       	std	Y+5, r25	; 0x05
    3e0c:	8c 83       	std	Y+4, r24	; 0x04
s_LCD_DATA_WRITE_t   s_Lcd_data_write;

static void LCD_READ_Parameters(void){
	//call LCD_read_mutliple regs (fill the struct) and check for the errors //s_Lcd_data_read
	//set rte parameters
	Lcd_Read_multiple_data(LCD_START_READ_ADDRESS,(uint16_t*)&s_Lcd_data_read,LCD_READ_REGS_NUMBER);
    3e0e:	44 e0       	ldi	r20, 0x04	; 4
    3e10:	62 e6       	ldi	r22, 0x62	; 98
    3e12:	7d e0       	ldi	r23, 0x0D	; 13
    3e14:	83 e0       	ldi	r24, 0x03	; 3
    3e16:	90 e0       	ldi	r25, 0x00	; 0
    3e18:	0e 94 48 02 	call	0x490	; 0x490 <Lcd_Read_multiple_data>
	
}


static void LCD_WRITE_Parameters(void){
	Lcd_Write_multiple_data(LCD_START_WRITE_ADDRESS,(uint16_t*)&s_Lcd_data_write,LCD_WRITE_REGS_NUMBER);
    3e1c:	44 e0       	ldi	r20, 0x04	; 4
    3e1e:	be 01       	movw	r22, r28
    3e20:	80 e0       	ldi	r24, 0x00	; 0
    3e22:	9f e0       	ldi	r25, 0x0F	; 15
    3e24:	0e 94 73 02 	call	0x4e6	; 0x4e6 <Lcd_Write_multiple_data>
    3e28:	02 e6       	ldi	r16, 0x62	; 98
    3e2a:	1d e0       	ldi	r17, 0x0D	; 13
    3e2c:	c1 2c       	mov	r12, r1
    3e2e:	d1 2c       	mov	r13, r1
    3e30:	76 01       	movw	r14, r12
    3e32:	c3 94       	inc	r12
		LCD_WRITE_Parameters();
		#ifdef __DEBUG
		Debug_read=(uint16_t*)&s_Lcd_data_read;
			for (uint8_t i=0;i<LCD_DATA_WRITE_ELEMENTS_NUMBER;i++){
				
				UART0_puts("s_Lcd_data_read[");
    3e34:	8c e8       	ldi	r24, 0x8C	; 140
    3e36:	92 e0       	ldi	r25, 0x02	; 2
    3e38:	0e 94 af 0c 	call	0x195e	; 0x195e <UART0_puts>
				UART0_OutUDec(i+1);
    3e3c:	c7 01       	movw	r24, r14
    3e3e:	b6 01       	movw	r22, r12
    3e40:	0e 94 93 0c 	call	0x1926	; 0x1926 <UART0_OutUDec>
				UART0_puts("]= ");
    3e44:	8d e9       	ldi	r24, 0x9D	; 157
    3e46:	92 e0       	ldi	r25, 0x02	; 2
    3e48:	0e 94 af 0c 	call	0x195e	; 0x195e <UART0_puts>
				UART0_OutUDec(Debug_read[i]);
    3e4c:	f8 01       	movw	r30, r16
    3e4e:	61 91       	ld	r22, Z+
    3e50:	71 91       	ld	r23, Z+
    3e52:	8f 01       	movw	r16, r30
    3e54:	80 e0       	ldi	r24, 0x00	; 0
    3e56:	90 e0       	ldi	r25, 0x00	; 0
    3e58:	0e 94 93 0c 	call	0x1926	; 0x1926 <UART0_OutUDec>
				UART0_puts("\n");
    3e5c:	80 e3       	ldi	r24, 0x30	; 48
    3e5e:	92 e0       	ldi	r25, 0x02	; 2
    3e60:	0e 94 af 0c 	call	0x195e	; 0x195e <UART0_puts>
    3e64:	ff ef       	ldi	r31, 0xFF	; 255
    3e66:	cf 1a       	sub	r12, r31
    3e68:	df 0a       	sbc	r13, r31
    3e6a:	ef 0a       	sbc	r14, r31
    3e6c:	ff 0a       	sbc	r15, r31
		#endif
		LCD_READ_Parameters();
		LCD_WRITE_Parameters();
		#ifdef __DEBUG
		Debug_read=(uint16_t*)&s_Lcd_data_read;
			for (uint8_t i=0;i<LCD_DATA_WRITE_ELEMENTS_NUMBER;i++){
    3e6e:	24 e0       	ldi	r18, 0x04	; 4
    3e70:	c2 16       	cp	r12, r18
    3e72:	d1 04       	cpc	r13, r1
    3e74:	e1 04       	cpc	r14, r1
    3e76:	f1 04       	cpc	r15, r1
    3e78:	e9 f6       	brne	.-70     	; 0x3e34 <LCD_main+0x48>
    3e7a:	8f ef       	ldi	r24, 0xFF	; 255
    3e7c:	97 ea       	ldi	r25, 0xA7	; 167
    3e7e:	e1 e6       	ldi	r30, 0x61	; 97
    3e80:	81 50       	subi	r24, 0x01	; 1
    3e82:	90 40       	sbci	r25, 0x00	; 0
    3e84:	e0 40       	sbci	r30, 0x00	; 0
    3e86:	e1 f7       	brne	.-8      	; 0x3e80 <LCD_main+0x94>
    3e88:	00 c0       	rjmp	.+0      	; 0x3e8a <LCD_main+0x9e>
    3e8a:	00 00       	nop
    3e8c:	b1 cf       	rjmp	.-158    	; 0x3df0 <LCD_main+0x4>

00003e8e <crc16_update>:
    3e8e:	86 27       	eor	r24, r22
    3e90:	28 e0       	ldi	r18, 0x08	; 8
    3e92:	30 e0       	ldi	r19, 0x00	; 0
    3e94:	80 ff       	sbrs	r24, 0
    3e96:	07 c0       	rjmp	.+14     	; 0x3ea6 <crc16_update+0x18>
    3e98:	96 95       	lsr	r25
    3e9a:	87 95       	ror	r24
    3e9c:	41 e0       	ldi	r20, 0x01	; 1
    3e9e:	84 27       	eor	r24, r20
    3ea0:	40 ea       	ldi	r20, 0xA0	; 160
    3ea2:	94 27       	eor	r25, r20
    3ea4:	02 c0       	rjmp	.+4      	; 0x3eaa <crc16_update+0x1c>
    3ea6:	96 95       	lsr	r25
    3ea8:	87 95       	ror	r24
    3eaa:	21 50       	subi	r18, 0x01	; 1
    3eac:	31 09       	sbc	r19, r1
    3eae:	91 f7       	brne	.-28     	; 0x3e94 <crc16_update+0x6>
    3eb0:	08 95       	ret

00003eb2 <millis_init>:
    3eb2:	82 e0       	ldi	r24, 0x02	; 2
    3eb4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    3eb8:	84 e0       	ldi	r24, 0x04	; 4
    3eba:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>
    3ebe:	8a ef       	ldi	r24, 0xFA	; 250
    3ec0:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
    3ec4:	e0 e7       	ldi	r30, 0x70	; 112
    3ec6:	f0 e0       	ldi	r31, 0x00	; 0
    3ec8:	80 81       	ld	r24, Z
    3eca:	82 60       	ori	r24, 0x02	; 2
    3ecc:	80 83       	st	Z, r24
    3ece:	08 95       	ret

00003ed0 <Get_millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    3ed0:	f8 94       	cli
    3ed2:	60 91 80 0d 	lds	r22, 0x0D80	; 0x800d80 <timer1_millis>
    3ed6:	70 91 81 0d 	lds	r23, 0x0D81	; 0x800d81 <timer1_millis+0x1>
    3eda:	80 91 82 0d 	lds	r24, 0x0D82	; 0x800d82 <timer1_millis+0x2>
    3ede:	90 91 83 0d 	lds	r25, 0x0D83	; 0x800d83 <timer1_millis+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    3ee2:	78 94       	sei
    3ee4:	08 95       	ret

00003ee6 <__vector_13>:
    3ee6:	1f 92       	push	r1
    3ee8:	0f 92       	push	r0
    3eea:	0f b6       	in	r0, 0x3f	; 63
    3eec:	0f 92       	push	r0
    3eee:	11 24       	eor	r1, r1
    3ef0:	8f 93       	push	r24
    3ef2:	9f 93       	push	r25
    3ef4:	af 93       	push	r26
    3ef6:	bf 93       	push	r27
    3ef8:	80 91 80 0d 	lds	r24, 0x0D80	; 0x800d80 <timer1_millis>
    3efc:	90 91 81 0d 	lds	r25, 0x0D81	; 0x800d81 <timer1_millis+0x1>
    3f00:	a0 91 82 0d 	lds	r26, 0x0D82	; 0x800d82 <timer1_millis+0x2>
    3f04:	b0 91 83 0d 	lds	r27, 0x0D83	; 0x800d83 <timer1_millis+0x3>
    3f08:	01 96       	adiw	r24, 0x01	; 1
    3f0a:	a1 1d       	adc	r26, r1
    3f0c:	b1 1d       	adc	r27, r1
    3f0e:	80 93 80 0d 	sts	0x0D80, r24	; 0x800d80 <timer1_millis>
    3f12:	90 93 81 0d 	sts	0x0D81, r25	; 0x800d81 <timer1_millis+0x1>
    3f16:	a0 93 82 0d 	sts	0x0D82, r26	; 0x800d82 <timer1_millis+0x2>
    3f1a:	b0 93 83 0d 	sts	0x0D83, r27	; 0x800d83 <timer1_millis+0x3>
    3f1e:	bf 91       	pop	r27
    3f20:	af 91       	pop	r26
    3f22:	9f 91       	pop	r25
    3f24:	8f 91       	pop	r24
    3f26:	0f 90       	pop	r0
    3f28:	0f be       	out	0x3f, r0	; 63
    3f2a:	0f 90       	pop	r0
    3f2c:	1f 90       	pop	r1
    3f2e:	18 95       	reti

00003f30 <__udivmodsi4>:
    3f30:	a1 e2       	ldi	r26, 0x21	; 33
    3f32:	1a 2e       	mov	r1, r26
    3f34:	aa 1b       	sub	r26, r26
    3f36:	bb 1b       	sub	r27, r27
    3f38:	fd 01       	movw	r30, r26
    3f3a:	0d c0       	rjmp	.+26     	; 0x3f56 <__udivmodsi4_ep>

00003f3c <__udivmodsi4_loop>:
    3f3c:	aa 1f       	adc	r26, r26
    3f3e:	bb 1f       	adc	r27, r27
    3f40:	ee 1f       	adc	r30, r30
    3f42:	ff 1f       	adc	r31, r31
    3f44:	a2 17       	cp	r26, r18
    3f46:	b3 07       	cpc	r27, r19
    3f48:	e4 07       	cpc	r30, r20
    3f4a:	f5 07       	cpc	r31, r21
    3f4c:	20 f0       	brcs	.+8      	; 0x3f56 <__udivmodsi4_ep>
    3f4e:	a2 1b       	sub	r26, r18
    3f50:	b3 0b       	sbc	r27, r19
    3f52:	e4 0b       	sbc	r30, r20
    3f54:	f5 0b       	sbc	r31, r21

00003f56 <__udivmodsi4_ep>:
    3f56:	66 1f       	adc	r22, r22
    3f58:	77 1f       	adc	r23, r23
    3f5a:	88 1f       	adc	r24, r24
    3f5c:	99 1f       	adc	r25, r25
    3f5e:	1a 94       	dec	r1
    3f60:	69 f7       	brne	.-38     	; 0x3f3c <__udivmodsi4_loop>
    3f62:	60 95       	com	r22
    3f64:	70 95       	com	r23
    3f66:	80 95       	com	r24
    3f68:	90 95       	com	r25
    3f6a:	9b 01       	movw	r18, r22
    3f6c:	ac 01       	movw	r20, r24
    3f6e:	bd 01       	movw	r22, r26
    3f70:	cf 01       	movw	r24, r30
    3f72:	08 95       	ret

00003f74 <memcpy>:
    3f74:	fb 01       	movw	r30, r22
    3f76:	dc 01       	movw	r26, r24
    3f78:	02 c0       	rjmp	.+4      	; 0x3f7e <memcpy+0xa>
    3f7a:	01 90       	ld	r0, Z+
    3f7c:	0d 92       	st	X+, r0
    3f7e:	41 50       	subi	r20, 0x01	; 1
    3f80:	50 40       	sbci	r21, 0x00	; 0
    3f82:	d8 f7       	brcc	.-10     	; 0x3f7a <memcpy+0x6>
    3f84:	08 95       	ret

00003f86 <memset>:
    3f86:	dc 01       	movw	r26, r24
    3f88:	01 c0       	rjmp	.+2      	; 0x3f8c <memset+0x6>
    3f8a:	6d 93       	st	X+, r22
    3f8c:	41 50       	subi	r20, 0x01	; 1
    3f8e:	50 40       	sbci	r21, 0x00	; 0
    3f90:	e0 f7       	brcc	.-8      	; 0x3f8a <memset+0x4>
    3f92:	08 95       	ret

00003f94 <_exit>:
    3f94:	f8 94       	cli

00003f96 <__stop_program>:
    3f96:	ff cf       	rjmp	.-2      	; 0x3f96 <__stop_program>
